
 /----------------------------------------------------------------------------\
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |  Copyright (C) 2012 - 2025  Claire Xenia Wolf <claire@yosyshq.com>         |
 |  Distributed under an ISC-like license, type "license" to see terms        |
 \----------------------------------------------------------------------------/
 Yosys 0.52 (git sha1 fee39a328, g++ 11.4.0-1ubuntu1~22.04 -fPIC -O3)
echo on

yosys> read_verilog -noblackbox -sv inputs/picorv32_top.v

1. Executing Verilog-2005 frontend: inputs/picorv32_top.v
Parsing SystemVerilog input from `inputs/picorv32_top.v' to AST representation.
Generating RTLIL representation for module `\picorv32_top'.
Generating RTLIL representation for module `\picorv32'.
Generating RTLIL representation for module `\picorv32_regs'.
Generating RTLIL representation for module `\picorv32_pcpi_mul'.
Generating RTLIL representation for module `\picorv32_pcpi_fast_mul'.
Generating RTLIL representation for module `\picorv32_pcpi_div'.
Generating RTLIL representation for module `\picorv32_axi'.
Generating RTLIL representation for module `\picorv32_axi_adapter'.
Generating RTLIL representation for module `\picorv32_wb'.
Generating RTLIL representation for module `\sky130_sram_2kbyte_1rw1r_32x512_8'.
Successfully finished Verilog frontend.

yosys> chparam -list picorv32_top
picorv32_top:

yosys> read_liberty -setattr liberty_cell -lib /nfs/sc_compute/builds/0dc368a6940a4df4bc65e8967a8d3eeb/picorv32_top/job0/syn/0/inputs/sc_logic_sky130hd_sky130_fd_sc_hd__ss_n40C_1v40.lib

2. Executing Liberty frontend: /nfs/sc_compute/builds/0dc368a6940a4df4bc65e8967a8d3eeb/picorv32_top/job0/syn/0/inputs/sc_logic_sky130hd_sky130_fd_sc_hd__ss_n40C_1v40.lib
Imported 428 cell types from liberty file.

yosys> hierarchy -top picorv32_top

3. Executing HIERARCHY pass (managing design hierarchy).

3.1. Analyzing design hierarchy..
Top module:  \picorv32_top
Used module:     \picorv32
Reprocessing module picorv32_top because instantiated module sky130_sram_2kbyte_1rw1r_32x512_8 has become available.
Generating RTLIL representation for module `\picorv32_top'.

3.2. Analyzing design hierarchy..
Top module:  \picorv32_top
Used module:     \picorv32

3.3. Analyzing design hierarchy..
Top module:  \picorv32_top
Used module:     \picorv32
Removing unused module `\picorv32_wb'.
Removing unused module `\picorv32_axi_adapter'.
Removing unused module `\picorv32_axi'.
Removing unused module `\picorv32_pcpi_div'.
Removing unused module `\picorv32_pcpi_fast_mul'.
Removing unused module `\picorv32_pcpi_mul'.
Removing unused module `\picorv32_regs'.
Removed 7 unused modules.
Warning: Resizing cell port picorv32_top.sram.addr0 from 32 bits to 9 bits.

yosys> tribuf

4. Executing TRIBUF pass.

yosys> scratchpad -set flatten.separator /

yosys> synth -flatten -extra-map /venv/lib/python3.10/site-packages/siliconcompiler/tools/yosys/techmaps/lcu_kogge_stone.v -top picorv32_top -run begin:fine

5. Executing SYNTH pass.

yosys> hierarchy -check -top picorv32_top

5.1. Executing HIERARCHY pass (managing design hierarchy).

5.1.1. Analyzing design hierarchy..
Top module:  \picorv32_top
Used module:     \picorv32

5.1.2. Analyzing design hierarchy..
Top module:  \picorv32_top
Used module:     \picorv32
Removed 0 unused modules.

yosys> proc

5.2. Executing PROC pass (convert processes to netlists).

yosys> proc_clean

5.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `\picorv32.$proc$inputs/picorv32_top.v:0$691'.
Removing empty process `picorv32.$proc$inputs/picorv32_top.v:0$691'.
Found and cleaned up 17 empty switches in `\picorv32.$proc$inputs/picorv32_top.v:1169$512'.
Found and cleaned up 1 empty switch in `\picorv32.$proc$inputs/picorv32_top.v:1157$496'.
Found and cleaned up 6 empty switches in `\picorv32.$proc$inputs/picorv32_top.v:470$132'.
Removing empty process `picorv32.$proc$inputs/picorv32_top.v:470$132'.
Cleaned up 25 empty switches.

yosys> proc_rmdead

5.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 34 switch rules as full_case in process $proc$inputs/picorv32_top.v:1169$512 in module picorv32.
Marked 1 switch rules as full_case in process $proc$inputs/picorv32_top.v:1153$487 in module picorv32.
Marked 2 switch rules as full_case in process $proc$inputs/picorv32_top.v:1128$475 in module picorv32.
Marked 2 switch rules as full_case in process $proc$inputs/picorv32_top.v:1116$470 in module picorv32.
Marked 8 switch rules as full_case in process $proc$inputs/picorv32_top.v:1024$435 in module picorv32.
Marked 3 switch rules as full_case in process $proc$inputs/picorv32_top.v:731$172 in module picorv32.
Marked 3 switch rules as full_case in process $proc$inputs/picorv32_top.v:703$170 in module picorv32.
Marked 2 switch rules as full_case in process $proc$inputs/picorv32_top.v:676$166 in module picorv32.
Marked 48 switch rules as full_case in process $proc$inputs/picorv32_top.v:610$165 in module picorv32.
Marked 4 switch rules as full_case in process $proc$inputs/picorv32_top.v:484$141 in module picorv32.
Marked 1 switch rules as full_case in process $proc$inputs/picorv32_top.v:356$103 in module picorv32.
Removed 2 dead cases from process $proc$inputs/picorv32_top.v:328$100 in module picorv32.
Marked 2 switch rules as full_case in process $proc$inputs/picorv32_top.v:328$100 in module picorv32.
Marked 1 switch rules as full_case in process $proc$inputs/picorv32_top.v:318$95 in module picorv32.
Marked 1 switch rules as full_case in process $proc$inputs/picorv32_top.v:266$21 in module picorv32.
Removed a total of 2 dead cases.

yosys> proc_prune

5.2.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 3 redundant assignments.
Promoted 58 assignments to connections.

yosys> proc_init

5.2.4. Executing PROC_INIT pass (extract init attributes).

yosys> proc_arst

5.2.5. Executing PROC_ARST pass (detect async resets in processes).

yosys> proc_rom

5.2.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~187 debug messages>

yosys> proc_mux

5.2.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\picorv32_top.$proc$inputs/picorv32_top.v:39$864'.
Creating decoders for process `\picorv32.$proc$inputs/picorv32_top.v:1169$512'.
     1/78: $17\next_irq_pending[2:2]
     2/78: $16\next_irq_pending[2:2]
     3/78: $15\next_irq_pending[2:2]
     4/78: $14\next_irq_pending[2:2]
     5/78: $13\next_irq_pending[2:2]
     6/78: $12\next_irq_pending[2:2]
     7/78: $11\next_irq_pending[2:2]
     8/78: $2\next_irq_pending[31:0] [31:2]
     9/78: $3\set_mem_do_rdata[0:0]
    10/78: $2\next_irq_pending[31:0] [1]
    11/78: $3\set_mem_do_wdata[0:0]
    12/78: $2\next_irq_pending[31:0] [0]
    13/78: $4\set_mem_do_rinst[0:0]
    14/78: $3\set_mem_do_rinst[0:0]
    15/78: $4\set_mem_do_wdata[0:0]
    16/78: $9\next_irq_pending[1:1]
    17/78: $8\next_irq_pending[1:1]
    18/78: $7\next_irq_pending[1:1]
    19/78: $4\set_mem_do_rdata[0:0]
    20/78: $5\next_irq_pending[1:1]
    21/78: $4\next_irq_pending[1:1]
    22/78: $10\next_irq_pending[1:1]
    23/78: $5\set_mem_do_rinst[0:0]
    24/78: $6\next_irq_pending[1:1]
    25/78: $3\next_irq_pending[31:0]
    26/78: $3\current_pc[31:0]
    27/78: $2\current_pc[31:0]
    28/78: $2\set_mem_do_wdata[0:0]
    29/78: $2\set_mem_do_rdata[0:0]
    30/78: $2\set_mem_do_rinst[0:0]
    31/78: $1\next_irq_pending[31:0]
    32/78: $1\current_pc[31:0]
    33/78: $1\set_mem_do_wdata[0:0]
    34/78: $1\set_mem_do_rdata[0:0]
    35/78: $1\set_mem_do_rinst[0:0]
    36/78: $0\trace_data[35:0]
    37/78: $0\count_cycle[63:0]
    38/78: $0\trace_valid[0:0]
    39/78: $0\do_waitirq[0:0]
    40/78: $0\decoder_pseudo_trigger[0:0]
    41/78: $0\decoder_trigger[0:0]
    42/78: $0\alu_wait_2[0:0]
    43/78: $0\alu_wait[0:0]
    44/78: $0\reg_out[31:0]
    45/78: $0\reg_sh[4:0]
    46/78: $0\trap[0:0]
    47/78: $0\pcpi_timeout[0:0]
    48/78: $0\latched_rd[4:0]
    49/78: $0\latched_is_lb[0:0]
    50/78: $0\latched_is_lh[0:0]
    51/78: $0\latched_is_lu[0:0]
    52/78: $0\latched_trace[0:0]
    53/78: $0\latched_compr[0:0]
    54/78: $0\latched_branch[0:0]
    55/78: $0\latched_stalu[0:0]
    56/78: $0\latched_store[0:0]
    57/78: $0\irq_state[1:0]
    58/78: $0\cpu_state[7:0]
    59/78: $0\dbg_rs2val_valid[0:0]
    60/78: $0\dbg_rs1val_valid[0:0]
    61/78: $0\dbg_rs2val[31:0]
    62/78: $0\dbg_rs1val[31:0]
    63/78: $0\mem_do_wdata[0:0]
    64/78: $0\mem_do_rdata[0:0]
    65/78: $0\mem_do_rinst[0:0]
    66/78: $0\mem_do_prefetch[0:0]
    67/78: $0\mem_wordsize[1:0]
    68/78: $0\timer[31:0]
    69/78: $0\irq_mask[31:0]
    70/78: $0\irq_active[0:0]
    71/78: $0\irq_delay[0:0]
    72/78: $0\reg_op2[31:0]
    73/78: $0\reg_op1[31:0]
    74/78: $0\reg_next_pc[31:0]
    75/78: $0\reg_pc[31:0]
    76/78: $0\count_instr[63:0]
    77/78: $0\eoi[31:0]
    78/78: $0\pcpi_valid[0:0]
Creating decoders for process `\picorv32.$proc$inputs/picorv32_top.v:1157$496'.
Creating decoders for process `\picorv32.$proc$inputs/picorv32_top.v:1153$487'.
     1/3: $1$memwr$\cpuregs$inputs/picorv32_top.v:1155$20_EN[31:0]$495
     2/3: $1$memwr$\cpuregs$inputs/picorv32_top.v:1155$20_DATA[31:0]$494
     3/3: $1$memwr$\cpuregs$inputs/picorv32_top.v:1155$20_ADDR[4:0]$493
Creating decoders for process `\picorv32.$proc$inputs/picorv32_top.v:1128$475'.
     1/4: $2\cpuregs_write[0:0]
     2/4: $2\cpuregs_wrdata[31:0]
     3/4: $1\cpuregs_wrdata[31:0]
     4/4: $1\cpuregs_write[0:0]
Creating decoders for process `\picorv32.$proc$inputs/picorv32_top.v:1116$470'.
     1/2: $2\clear_prefetched_high_word[0:0]
     2/2: $1\clear_prefetched_high_word[0:0]
Creating decoders for process `\picorv32.$proc$inputs/picorv32_top.v:1115$469'.
Creating decoders for process `\picorv32.$proc$inputs/picorv32_top.v:1078$447'.
     1/2: $1\alu_out[31:0]
     2/2: $1\alu_out_0[0:0]
Creating decoders for process `\picorv32.$proc$inputs/picorv32_top.v:1024$435'.
     1/8: $8\dbg_ascii_state[127:0]
     2/8: $7\dbg_ascii_state[127:0]
     3/8: $6\dbg_ascii_state[127:0]
     4/8: $5\dbg_ascii_state[127:0]
     5/8: $4\dbg_ascii_state[127:0]
     6/8: $3\dbg_ascii_state[127:0]
     7/8: $2\dbg_ascii_state[127:0]
     8/8: $1\dbg_ascii_state[127:0]
Creating decoders for process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
     1/77: $0\decoded_rs1[4:0] [4]
     2/77: $0\decoded_imm_j[31:0] [10]
     3/77: $0\decoded_imm_j[31:0] [7]
     4/77: $0\decoded_imm_j[31:0] [6]
     5/77: $0\decoded_imm_j[31:0] [3:1]
     6/77: $0\decoded_imm_j[31:0] [5]
     7/77: $0\decoded_imm_j[31:0] [9:8]
     8/77: $0\decoded_imm_j[31:0] [31:20]
     9/77: $0\decoded_imm_j[31:0] [4]
    10/77: $0\decoded_imm_j[31:0] [11]
    11/77: $0\decoded_imm_j[31:0] [0]
    12/77: $0\decoded_rs1[4:0] [3:0]
    13/77: $0\is_lui_auipc_jal_jalr_addi_add_sub[0:0]
    14/77: $0\is_alu_reg_reg[0:0]
    15/77: $0\is_alu_reg_imm[0:0]
    16/77: $0\is_beq_bne_blt_bge_bltu_bgeu[0:0]
    17/77: $0\is_sll_srl_sra[0:0]
    18/77: $0\is_sb_sh_sw[0:0]
    19/77: $0\is_jalr_addi_slti_sltiu_xori_ori_andi[0:0]
    20/77: $0\is_slli_srli_srai[0:0]
    21/77: $0\is_lb_lh_lw_lbu_lhu[0:0]
    22/77: $0\compressed_instr[0:0]
    23/77: $0\is_compare[0:0]
    24/77: $0\decoded_imm[31:0]
    25/77: $0\decoded_rs2[4:0]
    26/77: $0\decoded_imm_j[31:0] [19:12]
    27/77: $0\decoded_rd[4:0]
    28/77: $0\instr_timer[0:0]
    29/77: $0\instr_waitirq[0:0]
    30/77: $0\instr_maskirq[0:0]
    31/77: $0\instr_retirq[0:0]
    32/77: $0\instr_setq[0:0]
    33/77: $0\instr_getq[0:0]
    34/77: $0\instr_fence[0:0]
    35/77: $0\instr_ecall_ebreak[0:0]
    36/77: $0\instr_rdinstrh[0:0]
    37/77: $0\instr_rdinstr[0:0]
    38/77: $0\instr_rdcycleh[0:0]
    39/77: $0\instr_rdcycle[0:0]
    40/77: $0\instr_and[0:0]
    41/77: $0\instr_or[0:0]
    42/77: $0\instr_sra[0:0]
    43/77: $0\instr_srl[0:0]
    44/77: $0\instr_xor[0:0]
    45/77: $0\instr_sltu[0:0]
    46/77: $0\instr_slt[0:0]
    47/77: $0\instr_sll[0:0]
    48/77: $0\instr_sub[0:0]
    49/77: $0\instr_add[0:0]
    50/77: $0\instr_srai[0:0]
    51/77: $0\instr_srli[0:0]
    52/77: $0\instr_slli[0:0]
    53/77: $0\instr_andi[0:0]
    54/77: $0\instr_ori[0:0]
    55/77: $0\instr_xori[0:0]
    56/77: $0\instr_sltiu[0:0]
    57/77: $0\instr_slti[0:0]
    58/77: $0\instr_addi[0:0]
    59/77: $0\instr_sw[0:0]
    60/77: $0\instr_sh[0:0]
    61/77: $0\instr_sb[0:0]
    62/77: $0\instr_lhu[0:0]
    63/77: $0\instr_lbu[0:0]
    64/77: $0\instr_lw[0:0]
    65/77: $0\instr_lh[0:0]
    66/77: $0\instr_lb[0:0]
    67/77: $0\instr_bgeu[0:0]
    68/77: $0\instr_bltu[0:0]
    69/77: $0\instr_bge[0:0]
    70/77: $0\instr_blt[0:0]
    71/77: $0\instr_bne[0:0]
    72/77: $0\instr_beq[0:0]
    73/77: $0\instr_jalr[0:0]
    74/77: $0\instr_jal[0:0]
    75/77: $0\instr_auipc[0:0]
    76/77: $0\instr_lui[0:0]
    77/77: $0\pcpi_insn[31:0]
Creating decoders for process `\picorv32.$proc$inputs/picorv32_top.v:703$170'.
     1/13: $3\dbg_insn_opcode[31:0]
     2/13: $2\dbg_insn_rd[4:0]
     3/13: $2\dbg_insn_rs2[4:0]
     4/13: $2\dbg_insn_rs1[4:0]
     5/13: $2\dbg_insn_opcode[31:0]
     6/13: $2\dbg_insn_imm[31:0]
     7/13: $2\dbg_ascii_instr[63:0]
     8/13: $1\dbg_insn_rd[4:0]
     9/13: $1\dbg_insn_rs2[4:0]
    10/13: $1\dbg_insn_rs1[4:0]
    11/13: $1\dbg_insn_imm[31:0]
    12/13: $1\dbg_ascii_instr[63:0]
    13/13: $1\dbg_insn_opcode[31:0]
Creating decoders for process `\picorv32.$proc$inputs/picorv32_top.v:676$166'.
     1/8: $0\cached_insn_rd[4:0]
     2/8: $0\cached_insn_rs2[4:0]
     3/8: $0\cached_insn_rs1[4:0]
     4/8: $0\cached_insn_opcode[31:0]
     5/8: $0\cached_insn_imm[31:0]
     6/8: $0\cached_ascii_instr[63:0]
     7/8: $0\dbg_valid_insn[0:0]
     8/8: $0\dbg_insn_addr[31:0]
Creating decoders for process `\picorv32.$proc$inputs/picorv32_top.v:610$165'.
     1/48: $48\new_ascii_instr[63:0]
     2/48: $47\new_ascii_instr[63:0]
     3/48: $46\new_ascii_instr[63:0]
     4/48: $45\new_ascii_instr[63:0]
     5/48: $44\new_ascii_instr[63:0]
     6/48: $43\new_ascii_instr[63:0]
     7/48: $42\new_ascii_instr[63:0]
     8/48: $41\new_ascii_instr[63:0]
     9/48: $40\new_ascii_instr[63:0]
    10/48: $39\new_ascii_instr[63:0]
    11/48: $38\new_ascii_instr[63:0]
    12/48: $37\new_ascii_instr[63:0]
    13/48: $36\new_ascii_instr[63:0]
    14/48: $35\new_ascii_instr[63:0]
    15/48: $34\new_ascii_instr[63:0]
    16/48: $33\new_ascii_instr[63:0]
    17/48: $32\new_ascii_instr[63:0]
    18/48: $31\new_ascii_instr[63:0]
    19/48: $30\new_ascii_instr[63:0]
    20/48: $29\new_ascii_instr[63:0]
    21/48: $28\new_ascii_instr[63:0]
    22/48: $27\new_ascii_instr[63:0]
    23/48: $26\new_ascii_instr[63:0]
    24/48: $25\new_ascii_instr[63:0]
    25/48: $24\new_ascii_instr[63:0]
    26/48: $23\new_ascii_instr[63:0]
    27/48: $22\new_ascii_instr[63:0]
    28/48: $21\new_ascii_instr[63:0]
    29/48: $20\new_ascii_instr[63:0]
    30/48: $19\new_ascii_instr[63:0]
    31/48: $18\new_ascii_instr[63:0]
    32/48: $17\new_ascii_instr[63:0]
    33/48: $16\new_ascii_instr[63:0]
    34/48: $15\new_ascii_instr[63:0]
    35/48: $14\new_ascii_instr[63:0]
    36/48: $13\new_ascii_instr[63:0]
    37/48: $12\new_ascii_instr[63:0]
    38/48: $11\new_ascii_instr[63:0]
    39/48: $10\new_ascii_instr[63:0]
    40/48: $9\new_ascii_instr[63:0]
    41/48: $8\new_ascii_instr[63:0]
    42/48: $7\new_ascii_instr[63:0]
    43/48: $6\new_ascii_instr[63:0]
    44/48: $5\new_ascii_instr[63:0]
    45/48: $4\new_ascii_instr[63:0]
    46/48: $3\new_ascii_instr[63:0]
    47/48: $2\new_ascii_instr[63:0]
    48/48: $1\new_ascii_instr[63:0]
Creating decoders for process `\picorv32.$proc$inputs/picorv32_top.v:484$141'.
     1/9: $0\mem_16bit_buffer[15:0]
     2/9: $0\prefetched_high_word[0:0]
     3/9: $0\mem_la_secondword[0:0]
     4/9: $0\mem_state[1:0]
     5/9: $0\mem_wstrb[3:0]
     6/9: $0\mem_wdata[31:0]
     7/9: $0\mem_addr[31:0]
     8/9: $0\mem_instr[0:0]
     9/9: $0\mem_valid[0:0]
Creating decoders for process `\picorv32.$proc$inputs/picorv32_top.v:1069$680'.
Creating decoders for process `\picorv32.$proc$inputs/picorv32_top.v:356$103'.
     1/9: $0\mem_rdata_q[31:0] [31]
     2/9: $0\mem_rdata_q[31:0] [7]
     3/9: $0\mem_rdata_q[31:0] [24:20]
     4/9: $0\mem_rdata_q[31:0] [19:15]
     5/9: $0\mem_rdata_q[31:0] [6:0]
     6/9: $0\mem_rdata_q[31:0] [14:12]
     7/9: $0\mem_rdata_q[31:0] [11:8]
     8/9: $0\mem_rdata_q[31:0] [30:25]
     9/9: $0\next_insn_opcode[31:0]
Creating decoders for process `\picorv32.$proc$inputs/picorv32_top.v:328$100'.
     1/5: $3\mem_rdata_word[31:0]
     2/5: $2\mem_rdata_word[31:0]
     3/5: $1\mem_rdata_word[31:0]
     4/5: $1\mem_la_wstrb[3:0]
     5/5: $1\mem_la_wdata[31:0]
Creating decoders for process `\picorv32.$proc$inputs/picorv32_top.v:318$95'.
     1/2: $0\last_mem_valid[0:0]
     2/2: $0\mem_la_firstword_reg[0:0]
Creating decoders for process `\picorv32.$proc$inputs/picorv32_top.v:266$21'.
     1/2: $1\pcpi_int_rd[31:0]
     2/2: $1\pcpi_int_wr[0:0]

yosys> proc_dlatch

5.2.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\picorv32.\cpuregs_rs1' from process `\picorv32.$proc$inputs/picorv32_top.v:1157$496'.
No latch inferred for signal `\picorv32.\cpuregs_rs2' from process `\picorv32.$proc$inputs/picorv32_top.v:1157$496'.
No latch inferred for signal `\picorv32.\decoded_rs' from process `\picorv32.$proc$inputs/picorv32_top.v:1157$496'.
No latch inferred for signal `\picorv32.\cpuregs_write' from process `\picorv32.$proc$inputs/picorv32_top.v:1128$475'.
No latch inferred for signal `\picorv32.\cpuregs_wrdata' from process `\picorv32.$proc$inputs/picorv32_top.v:1128$475'.
No latch inferred for signal `\picorv32.\clear_prefetched_high_word' from process `\picorv32.$proc$inputs/picorv32_top.v:1116$470'.
No latch inferred for signal `\picorv32.\alu_out' from process `\picorv32.$proc$inputs/picorv32_top.v:1078$447'.
No latch inferred for signal `\picorv32.\alu_out_0' from process `\picorv32.$proc$inputs/picorv32_top.v:1078$447'.
No latch inferred for signal `\picorv32.\dbg_ascii_state' from process `\picorv32.$proc$inputs/picorv32_top.v:1024$435'.
No latch inferred for signal `\picorv32.\dbg_insn_opcode' from process `\picorv32.$proc$inputs/picorv32_top.v:703$170'.
No latch inferred for signal `\picorv32.\dbg_ascii_instr' from process `\picorv32.$proc$inputs/picorv32_top.v:703$170'.
No latch inferred for signal `\picorv32.\dbg_insn_imm' from process `\picorv32.$proc$inputs/picorv32_top.v:703$170'.
No latch inferred for signal `\picorv32.\dbg_insn_rs1' from process `\picorv32.$proc$inputs/picorv32_top.v:703$170'.
No latch inferred for signal `\picorv32.\dbg_insn_rs2' from process `\picorv32.$proc$inputs/picorv32_top.v:703$170'.
No latch inferred for signal `\picorv32.\dbg_insn_rd' from process `\picorv32.$proc$inputs/picorv32_top.v:703$170'.
No latch inferred for signal `\picorv32.\new_ascii_instr' from process `\picorv32.$proc$inputs/picorv32_top.v:610$165'.
No latch inferred for signal `\picorv32.\alu_add_sub' from process `\picorv32.$proc$inputs/picorv32_top.v:1069$680'.
No latch inferred for signal `\picorv32.\alu_shl' from process `\picorv32.$proc$inputs/picorv32_top.v:1069$680'.
No latch inferred for signal `\picorv32.\alu_shr' from process `\picorv32.$proc$inputs/picorv32_top.v:1069$680'.
No latch inferred for signal `\picorv32.\alu_eq' from process `\picorv32.$proc$inputs/picorv32_top.v:1069$680'.
No latch inferred for signal `\picorv32.\alu_ltu' from process `\picorv32.$proc$inputs/picorv32_top.v:1069$680'.
No latch inferred for signal `\picorv32.\alu_lts' from process `\picorv32.$proc$inputs/picorv32_top.v:1069$680'.
No latch inferred for signal `\picorv32.\mem_la_wdata' from process `\picorv32.$proc$inputs/picorv32_top.v:328$100'.
No latch inferred for signal `\picorv32.\mem_la_wstrb' from process `\picorv32.$proc$inputs/picorv32_top.v:328$100'.
No latch inferred for signal `\picorv32.\mem_rdata_word' from process `\picorv32.$proc$inputs/picorv32_top.v:328$100'.
No latch inferred for signal `\picorv32.\pcpi_int_wr' from process `\picorv32.$proc$inputs/picorv32_top.v:266$21'.
No latch inferred for signal `\picorv32.\pcpi_int_rd' from process `\picorv32.$proc$inputs/picorv32_top.v:266$21'.
No latch inferred for signal `\picorv32.\pcpi_int_wait' from process `\picorv32.$proc$inputs/picorv32_top.v:266$21'.
No latch inferred for signal `\picorv32.\pcpi_int_ready' from process `\picorv32.$proc$inputs/picorv32_top.v:266$21'.

yosys> proc_dff

5.2.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\picorv32_top.\mem_ready' using process `\picorv32_top.$proc$inputs/picorv32_top.v:39$864'.
  created $dff cell `$procdff$3592' with positive edge clock.
Creating register for signal `\picorv32.\trap' using process `\picorv32.$proc$inputs/picorv32_top.v:1169$512'.
  created $dff cell `$procdff$3593' with positive edge clock.
Creating register for signal `\picorv32.\pcpi_valid' using process `\picorv32.$proc$inputs/picorv32_top.v:1169$512'.
  created $dff cell `$procdff$3594' with positive edge clock.
Creating register for signal `\picorv32.\eoi' using process `\picorv32.$proc$inputs/picorv32_top.v:1169$512'.
  created $dff cell `$procdff$3595' with positive edge clock.
Creating register for signal `\picorv32.\trace_valid' using process `\picorv32.$proc$inputs/picorv32_top.v:1169$512'.
  created $dff cell `$procdff$3596' with positive edge clock.
Creating register for signal `\picorv32.\trace_data' using process `\picorv32.$proc$inputs/picorv32_top.v:1169$512'.
  created $dff cell `$procdff$3597' with positive edge clock.
Creating register for signal `\picorv32.\count_cycle' using process `\picorv32.$proc$inputs/picorv32_top.v:1169$512'.
  created $dff cell `$procdff$3598' with positive edge clock.
Creating register for signal `\picorv32.\count_instr' using process `\picorv32.$proc$inputs/picorv32_top.v:1169$512'.
  created $dff cell `$procdff$3599' with positive edge clock.
Creating register for signal `\picorv32.\reg_pc' using process `\picorv32.$proc$inputs/picorv32_top.v:1169$512'.
  created $dff cell `$procdff$3600' with positive edge clock.
Creating register for signal `\picorv32.\reg_next_pc' using process `\picorv32.$proc$inputs/picorv32_top.v:1169$512'.
  created $dff cell `$procdff$3601' with positive edge clock.
Creating register for signal `\picorv32.\reg_op1' using process `\picorv32.$proc$inputs/picorv32_top.v:1169$512'.
  created $dff cell `$procdff$3602' with positive edge clock.
Creating register for signal `\picorv32.\reg_op2' using process `\picorv32.$proc$inputs/picorv32_top.v:1169$512'.
  created $dff cell `$procdff$3603' with positive edge clock.
Creating register for signal `\picorv32.\reg_out' using process `\picorv32.$proc$inputs/picorv32_top.v:1169$512'.
  created $dff cell `$procdff$3604' with positive edge clock.
Creating register for signal `\picorv32.\reg_sh' using process `\picorv32.$proc$inputs/picorv32_top.v:1169$512'.
  created $dff cell `$procdff$3605' with positive edge clock.
Creating register for signal `\picorv32.\irq_delay' using process `\picorv32.$proc$inputs/picorv32_top.v:1169$512'.
  created $dff cell `$procdff$3606' with positive edge clock.
Creating register for signal `\picorv32.\irq_active' using process `\picorv32.$proc$inputs/picorv32_top.v:1169$512'.
  created $dff cell `$procdff$3607' with positive edge clock.
Creating register for signal `\picorv32.\irq_mask' using process `\picorv32.$proc$inputs/picorv32_top.v:1169$512'.
  created $dff cell `$procdff$3608' with positive edge clock.
Creating register for signal `\picorv32.\irq_pending' using process `\picorv32.$proc$inputs/picorv32_top.v:1169$512'.
  created $dff cell `$procdff$3609' with positive edge clock.
Creating register for signal `\picorv32.\timer' using process `\picorv32.$proc$inputs/picorv32_top.v:1169$512'.
  created $dff cell `$procdff$3610' with positive edge clock.
Creating register for signal `\picorv32.\mem_wordsize' using process `\picorv32.$proc$inputs/picorv32_top.v:1169$512'.
  created $dff cell `$procdff$3611' with positive edge clock.
Creating register for signal `\picorv32.\mem_do_prefetch' using process `\picorv32.$proc$inputs/picorv32_top.v:1169$512'.
  created $dff cell `$procdff$3612' with positive edge clock.
Creating register for signal `\picorv32.\mem_do_rinst' using process `\picorv32.$proc$inputs/picorv32_top.v:1169$512'.
  created $dff cell `$procdff$3613' with positive edge clock.
Creating register for signal `\picorv32.\mem_do_rdata' using process `\picorv32.$proc$inputs/picorv32_top.v:1169$512'.
  created $dff cell `$procdff$3614' with positive edge clock.
Creating register for signal `\picorv32.\mem_do_wdata' using process `\picorv32.$proc$inputs/picorv32_top.v:1169$512'.
  created $dff cell `$procdff$3615' with positive edge clock.
Creating register for signal `\picorv32.\decoder_trigger' using process `\picorv32.$proc$inputs/picorv32_top.v:1169$512'.
  created $dff cell `$procdff$3616' with positive edge clock.
Creating register for signal `\picorv32.\decoder_trigger_q' using process `\picorv32.$proc$inputs/picorv32_top.v:1169$512'.
  created $dff cell `$procdff$3617' with positive edge clock.
Creating register for signal `\picorv32.\decoder_pseudo_trigger' using process `\picorv32.$proc$inputs/picorv32_top.v:1169$512'.
  created $dff cell `$procdff$3618' with positive edge clock.
Creating register for signal `\picorv32.\decoder_pseudo_trigger_q' using process `\picorv32.$proc$inputs/picorv32_top.v:1169$512'.
  created $dff cell `$procdff$3619' with positive edge clock.
Creating register for signal `\picorv32.\dbg_rs1val' using process `\picorv32.$proc$inputs/picorv32_top.v:1169$512'.
  created $dff cell `$procdff$3620' with positive edge clock.
Creating register for signal `\picorv32.\dbg_rs2val' using process `\picorv32.$proc$inputs/picorv32_top.v:1169$512'.
  created $dff cell `$procdff$3621' with positive edge clock.
Creating register for signal `\picorv32.\dbg_rs1val_valid' using process `\picorv32.$proc$inputs/picorv32_top.v:1169$512'.
  created $dff cell `$procdff$3622' with positive edge clock.
Creating register for signal `\picorv32.\dbg_rs2val_valid' using process `\picorv32.$proc$inputs/picorv32_top.v:1169$512'.
  created $dff cell `$procdff$3623' with positive edge clock.
Creating register for signal `\picorv32.\cpu_state' using process `\picorv32.$proc$inputs/picorv32_top.v:1169$512'.
  created $dff cell `$procdff$3624' with positive edge clock.
Creating register for signal `\picorv32.\irq_state' using process `\picorv32.$proc$inputs/picorv32_top.v:1169$512'.
  created $dff cell `$procdff$3625' with positive edge clock.
Creating register for signal `\picorv32.\set_mem_do_rinst' using process `\picorv32.$proc$inputs/picorv32_top.v:1169$512'.
  created $dff cell `$procdff$3626' with positive edge clock.
Creating register for signal `\picorv32.\set_mem_do_rdata' using process `\picorv32.$proc$inputs/picorv32_top.v:1169$512'.
  created $dff cell `$procdff$3627' with positive edge clock.
Creating register for signal `\picorv32.\set_mem_do_wdata' using process `\picorv32.$proc$inputs/picorv32_top.v:1169$512'.
  created $dff cell `$procdff$3628' with positive edge clock.
Creating register for signal `\picorv32.\latched_store' using process `\picorv32.$proc$inputs/picorv32_top.v:1169$512'.
  created $dff cell `$procdff$3629' with positive edge clock.
Creating register for signal `\picorv32.\latched_stalu' using process `\picorv32.$proc$inputs/picorv32_top.v:1169$512'.
  created $dff cell `$procdff$3630' with positive edge clock.
Creating register for signal `\picorv32.\latched_branch' using process `\picorv32.$proc$inputs/picorv32_top.v:1169$512'.
  created $dff cell `$procdff$3631' with positive edge clock.
Creating register for signal `\picorv32.\latched_compr' using process `\picorv32.$proc$inputs/picorv32_top.v:1169$512'.
  created $dff cell `$procdff$3632' with positive edge clock.
Creating register for signal `\picorv32.\latched_trace' using process `\picorv32.$proc$inputs/picorv32_top.v:1169$512'.
  created $dff cell `$procdff$3633' with positive edge clock.
Creating register for signal `\picorv32.\latched_is_lu' using process `\picorv32.$proc$inputs/picorv32_top.v:1169$512'.
  created $dff cell `$procdff$3634' with positive edge clock.
Creating register for signal `\picorv32.\latched_is_lh' using process `\picorv32.$proc$inputs/picorv32_top.v:1169$512'.
  created $dff cell `$procdff$3635' with positive edge clock.
Creating register for signal `\picorv32.\latched_is_lb' using process `\picorv32.$proc$inputs/picorv32_top.v:1169$512'.
  created $dff cell `$procdff$3636' with positive edge clock.
Creating register for signal `\picorv32.\latched_rd' using process `\picorv32.$proc$inputs/picorv32_top.v:1169$512'.
  created $dff cell `$procdff$3637' with positive edge clock.
Creating register for signal `\picorv32.\current_pc' using process `\picorv32.$proc$inputs/picorv32_top.v:1169$512'.
  created $dff cell `$procdff$3638' with positive edge clock.
Creating register for signal `\picorv32.\pcpi_timeout' using process `\picorv32.$proc$inputs/picorv32_top.v:1169$512'.
  created $dff cell `$procdff$3639' with positive edge clock.
Creating register for signal `\picorv32.\next_irq_pending' using process `\picorv32.$proc$inputs/picorv32_top.v:1169$512'.
  created $dff cell `$procdff$3640' with positive edge clock.
Creating register for signal `\picorv32.\do_waitirq' using process `\picorv32.$proc$inputs/picorv32_top.v:1169$512'.
  created $dff cell `$procdff$3641' with positive edge clock.
Creating register for signal `\picorv32.\alu_out_q' using process `\picorv32.$proc$inputs/picorv32_top.v:1169$512'.
  created $dff cell `$procdff$3642' with positive edge clock.
Creating register for signal `\picorv32.\alu_out_0_q' using process `\picorv32.$proc$inputs/picorv32_top.v:1169$512'.
  created $dff cell `$procdff$3643' with positive edge clock.
Creating register for signal `\picorv32.\alu_wait' using process `\picorv32.$proc$inputs/picorv32_top.v:1169$512'.
  created $dff cell `$procdff$3644' with positive edge clock.
Creating register for signal `\picorv32.\alu_wait_2' using process `\picorv32.$proc$inputs/picorv32_top.v:1169$512'.
  created $dff cell `$procdff$3645' with positive edge clock.
Creating register for signal `\picorv32.$memwr$\cpuregs$inputs/picorv32_top.v:1155$20_ADDR' using process `\picorv32.$proc$inputs/picorv32_top.v:1153$487'.
  created $dff cell `$procdff$3646' with positive edge clock.
Creating register for signal `\picorv32.$memwr$\cpuregs$inputs/picorv32_top.v:1155$20_DATA' using process `\picorv32.$proc$inputs/picorv32_top.v:1153$487'.
  created $dff cell `$procdff$3647' with positive edge clock.
Creating register for signal `\picorv32.$memwr$\cpuregs$inputs/picorv32_top.v:1155$20_EN' using process `\picorv32.$proc$inputs/picorv32_top.v:1153$487'.
  created $dff cell `$procdff$3648' with positive edge clock.
Creating register for signal `\picorv32.\clear_prefetched_high_word_q' using process `\picorv32.$proc$inputs/picorv32_top.v:1115$469'.
  created $dff cell `$procdff$3649' with positive edge clock.
Creating register for signal `\picorv32.\pcpi_insn' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3650' with positive edge clock.
Creating register for signal `\picorv32.\instr_lui' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3651' with positive edge clock.
Creating register for signal `\picorv32.\instr_auipc' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3652' with positive edge clock.
Creating register for signal `\picorv32.\instr_jal' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3653' with positive edge clock.
Creating register for signal `\picorv32.\instr_jalr' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3654' with positive edge clock.
Creating register for signal `\picorv32.\instr_beq' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3655' with positive edge clock.
Creating register for signal `\picorv32.\instr_bne' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3656' with positive edge clock.
Creating register for signal `\picorv32.\instr_blt' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3657' with positive edge clock.
Creating register for signal `\picorv32.\instr_bge' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3658' with positive edge clock.
Creating register for signal `\picorv32.\instr_bltu' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3659' with positive edge clock.
Creating register for signal `\picorv32.\instr_bgeu' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3660' with positive edge clock.
Creating register for signal `\picorv32.\instr_lb' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3661' with positive edge clock.
Creating register for signal `\picorv32.\instr_lh' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3662' with positive edge clock.
Creating register for signal `\picorv32.\instr_lw' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3663' with positive edge clock.
Creating register for signal `\picorv32.\instr_lbu' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3664' with positive edge clock.
Creating register for signal `\picorv32.\instr_lhu' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3665' with positive edge clock.
Creating register for signal `\picorv32.\instr_sb' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3666' with positive edge clock.
Creating register for signal `\picorv32.\instr_sh' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3667' with positive edge clock.
Creating register for signal `\picorv32.\instr_sw' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3668' with positive edge clock.
Creating register for signal `\picorv32.\instr_addi' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3669' with positive edge clock.
Creating register for signal `\picorv32.\instr_slti' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3670' with positive edge clock.
Creating register for signal `\picorv32.\instr_sltiu' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3671' with positive edge clock.
Creating register for signal `\picorv32.\instr_xori' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3672' with positive edge clock.
Creating register for signal `\picorv32.\instr_ori' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3673' with positive edge clock.
Creating register for signal `\picorv32.\instr_andi' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3674' with positive edge clock.
Creating register for signal `\picorv32.\instr_slli' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3675' with positive edge clock.
Creating register for signal `\picorv32.\instr_srli' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3676' with positive edge clock.
Creating register for signal `\picorv32.\instr_srai' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3677' with positive edge clock.
Creating register for signal `\picorv32.\instr_add' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3678' with positive edge clock.
Creating register for signal `\picorv32.\instr_sub' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3679' with positive edge clock.
Creating register for signal `\picorv32.\instr_sll' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3680' with positive edge clock.
Creating register for signal `\picorv32.\instr_slt' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3681' with positive edge clock.
Creating register for signal `\picorv32.\instr_sltu' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3682' with positive edge clock.
Creating register for signal `\picorv32.\instr_xor' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3683' with positive edge clock.
Creating register for signal `\picorv32.\instr_srl' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3684' with positive edge clock.
Creating register for signal `\picorv32.\instr_sra' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3685' with positive edge clock.
Creating register for signal `\picorv32.\instr_or' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3686' with positive edge clock.
Creating register for signal `\picorv32.\instr_and' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3687' with positive edge clock.
Creating register for signal `\picorv32.\instr_rdcycle' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3688' with positive edge clock.
Creating register for signal `\picorv32.\instr_rdcycleh' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3689' with positive edge clock.
Creating register for signal `\picorv32.\instr_rdinstr' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3690' with positive edge clock.
Creating register for signal `\picorv32.\instr_rdinstrh' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3691' with positive edge clock.
Creating register for signal `\picorv32.\instr_ecall_ebreak' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3692' with positive edge clock.
Creating register for signal `\picorv32.\instr_fence' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3693' with positive edge clock.
Creating register for signal `\picorv32.\instr_getq' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3694' with positive edge clock.
Creating register for signal `\picorv32.\instr_setq' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3695' with positive edge clock.
Creating register for signal `\picorv32.\instr_retirq' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3696' with positive edge clock.
Creating register for signal `\picorv32.\instr_maskirq' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3697' with positive edge clock.
Creating register for signal `\picorv32.\instr_waitirq' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3698' with positive edge clock.
Creating register for signal `\picorv32.\instr_timer' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3699' with positive edge clock.
Creating register for signal `\picorv32.\decoded_rd' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3700' with positive edge clock.
Creating register for signal `\picorv32.\decoded_rs1' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3701' with positive edge clock.
Creating register for signal `\picorv32.\decoded_rs2' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3702' with positive edge clock.
Creating register for signal `\picorv32.\decoded_imm' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3703' with positive edge clock.
Creating register for signal `\picorv32.\decoded_imm_j' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3704' with positive edge clock.
Creating register for signal `\picorv32.\compressed_instr' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3705' with positive edge clock.
Creating register for signal `\picorv32.\is_lui_auipc_jal' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3706' with positive edge clock.
Creating register for signal `\picorv32.\is_lb_lh_lw_lbu_lhu' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3707' with positive edge clock.
Creating register for signal `\picorv32.\is_slli_srli_srai' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3708' with positive edge clock.
Creating register for signal `\picorv32.\is_jalr_addi_slti_sltiu_xori_ori_andi' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3709' with positive edge clock.
Creating register for signal `\picorv32.\is_sb_sh_sw' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3710' with positive edge clock.
Creating register for signal `\picorv32.\is_sll_srl_sra' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3711' with positive edge clock.
Creating register for signal `\picorv32.\is_lui_auipc_jal_jalr_addi_add_sub' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3712' with positive edge clock.
Creating register for signal `\picorv32.\is_slti_blt_slt' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3713' with positive edge clock.
Creating register for signal `\picorv32.\is_sltiu_bltu_sltu' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3714' with positive edge clock.
Creating register for signal `\picorv32.\is_beq_bne_blt_bge_bltu_bgeu' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3715' with positive edge clock.
Creating register for signal `\picorv32.\is_lbu_lhu_lw' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3716' with positive edge clock.
Creating register for signal `\picorv32.\is_alu_reg_imm' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3717' with positive edge clock.
Creating register for signal `\picorv32.\is_alu_reg_reg' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3718' with positive edge clock.
Creating register for signal `\picorv32.\is_compare' using process `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
  created $dff cell `$procdff$3719' with positive edge clock.
Creating register for signal `\picorv32.\dbg_insn_addr' using process `\picorv32.$proc$inputs/picorv32_top.v:676$166'.
  created $dff cell `$procdff$3720' with positive edge clock.
Creating register for signal `\picorv32.\q_ascii_instr' using process `\picorv32.$proc$inputs/picorv32_top.v:676$166'.
  created $dff cell `$procdff$3721' with positive edge clock.
Creating register for signal `\picorv32.\q_insn_imm' using process `\picorv32.$proc$inputs/picorv32_top.v:676$166'.
  created $dff cell `$procdff$3722' with positive edge clock.
Creating register for signal `\picorv32.\q_insn_opcode' using process `\picorv32.$proc$inputs/picorv32_top.v:676$166'.
  created $dff cell `$procdff$3723' with positive edge clock.
Creating register for signal `\picorv32.\q_insn_rs1' using process `\picorv32.$proc$inputs/picorv32_top.v:676$166'.
  created $dff cell `$procdff$3724' with positive edge clock.
Creating register for signal `\picorv32.\q_insn_rs2' using process `\picorv32.$proc$inputs/picorv32_top.v:676$166'.
  created $dff cell `$procdff$3725' with positive edge clock.
Creating register for signal `\picorv32.\q_insn_rd' using process `\picorv32.$proc$inputs/picorv32_top.v:676$166'.
  created $dff cell `$procdff$3726' with positive edge clock.
Creating register for signal `\picorv32.\dbg_next' using process `\picorv32.$proc$inputs/picorv32_top.v:676$166'.
  created $dff cell `$procdff$3727' with positive edge clock.
Creating register for signal `\picorv32.\dbg_valid_insn' using process `\picorv32.$proc$inputs/picorv32_top.v:676$166'.
  created $dff cell `$procdff$3728' with positive edge clock.
Creating register for signal `\picorv32.\cached_ascii_instr' using process `\picorv32.$proc$inputs/picorv32_top.v:676$166'.
  created $dff cell `$procdff$3729' with positive edge clock.
Creating register for signal `\picorv32.\cached_insn_imm' using process `\picorv32.$proc$inputs/picorv32_top.v:676$166'.
  created $dff cell `$procdff$3730' with positive edge clock.
Creating register for signal `\picorv32.\cached_insn_opcode' using process `\picorv32.$proc$inputs/picorv32_top.v:676$166'.
  created $dff cell `$procdff$3731' with positive edge clock.
Creating register for signal `\picorv32.\cached_insn_rs1' using process `\picorv32.$proc$inputs/picorv32_top.v:676$166'.
  created $dff cell `$procdff$3732' with positive edge clock.
Creating register for signal `\picorv32.\cached_insn_rs2' using process `\picorv32.$proc$inputs/picorv32_top.v:676$166'.
  created $dff cell `$procdff$3733' with positive edge clock.
Creating register for signal `\picorv32.\cached_insn_rd' using process `\picorv32.$proc$inputs/picorv32_top.v:676$166'.
  created $dff cell `$procdff$3734' with positive edge clock.
Creating register for signal `\picorv32.\mem_valid' using process `\picorv32.$proc$inputs/picorv32_top.v:484$141'.
  created $dff cell `$procdff$3735' with positive edge clock.
Creating register for signal `\picorv32.\mem_instr' using process `\picorv32.$proc$inputs/picorv32_top.v:484$141'.
  created $dff cell `$procdff$3736' with positive edge clock.
Creating register for signal `\picorv32.\mem_addr' using process `\picorv32.$proc$inputs/picorv32_top.v:484$141'.
  created $dff cell `$procdff$3737' with positive edge clock.
Creating register for signal `\picorv32.\mem_wdata' using process `\picorv32.$proc$inputs/picorv32_top.v:484$141'.
  created $dff cell `$procdff$3738' with positive edge clock.
Creating register for signal `\picorv32.\mem_wstrb' using process `\picorv32.$proc$inputs/picorv32_top.v:484$141'.
  created $dff cell `$procdff$3739' with positive edge clock.
Creating register for signal `\picorv32.\mem_state' using process `\picorv32.$proc$inputs/picorv32_top.v:484$141'.
  created $dff cell `$procdff$3740' with positive edge clock.
Creating register for signal `\picorv32.\mem_la_secondword' using process `\picorv32.$proc$inputs/picorv32_top.v:484$141'.
  created $dff cell `$procdff$3741' with positive edge clock.
Creating register for signal `\picorv32.\prefetched_high_word' using process `\picorv32.$proc$inputs/picorv32_top.v:484$141'.
  created $dff cell `$procdff$3742' with positive edge clock.
Creating register for signal `\picorv32.\mem_16bit_buffer' using process `\picorv32.$proc$inputs/picorv32_top.v:484$141'.
  created $dff cell `$procdff$3743' with positive edge clock.
Creating register for signal `\picorv32.\next_insn_opcode' using process `\picorv32.$proc$inputs/picorv32_top.v:356$103'.
  created $dff cell `$procdff$3744' with positive edge clock.
Creating register for signal `\picorv32.\mem_rdata_q' using process `\picorv32.$proc$inputs/picorv32_top.v:356$103'.
  created $dff cell `$procdff$3745' with positive edge clock.
Creating register for signal `\picorv32.\mem_la_firstword_reg' using process `\picorv32.$proc$inputs/picorv32_top.v:318$95'.
  created $dff cell `$procdff$3746' with positive edge clock.
Creating register for signal `\picorv32.\last_mem_valid' using process `\picorv32.$proc$inputs/picorv32_top.v:318$95'.
  created $dff cell `$procdff$3747' with positive edge clock.

yosys> proc_memwr

5.2.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

yosys> proc_clean

5.2.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `picorv32_top.$proc$inputs/picorv32_top.v:39$864'.
Found and cleaned up 53 empty switches in `\picorv32.$proc$inputs/picorv32_top.v:1169$512'.
Removing empty process `picorv32.$proc$inputs/picorv32_top.v:1169$512'.
Removing empty process `picorv32.$proc$inputs/picorv32_top.v:1157$496'.
Found and cleaned up 1 empty switch in `\picorv32.$proc$inputs/picorv32_top.v:1153$487'.
Removing empty process `picorv32.$proc$inputs/picorv32_top.v:1153$487'.
Found and cleaned up 2 empty switches in `\picorv32.$proc$inputs/picorv32_top.v:1128$475'.
Removing empty process `picorv32.$proc$inputs/picorv32_top.v:1128$475'.
Found and cleaned up 2 empty switches in `\picorv32.$proc$inputs/picorv32_top.v:1116$470'.
Removing empty process `picorv32.$proc$inputs/picorv32_top.v:1116$470'.
Removing empty process `picorv32.$proc$inputs/picorv32_top.v:1115$469'.
Found and cleaned up 2 empty switches in `\picorv32.$proc$inputs/picorv32_top.v:1078$447'.
Removing empty process `picorv32.$proc$inputs/picorv32_top.v:1078$447'.
Found and cleaned up 8 empty switches in `\picorv32.$proc$inputs/picorv32_top.v:1024$435'.
Removing empty process `picorv32.$proc$inputs/picorv32_top.v:1024$435'.
Found and cleaned up 22 empty switches in `\picorv32.$proc$inputs/picorv32_top.v:731$172'.
Removing empty process `picorv32.$proc$inputs/picorv32_top.v:731$172'.
Found and cleaned up 3 empty switches in `\picorv32.$proc$inputs/picorv32_top.v:703$170'.
Removing empty process `picorv32.$proc$inputs/picorv32_top.v:703$170'.
Found and cleaned up 5 empty switches in `\picorv32.$proc$inputs/picorv32_top.v:676$166'.
Removing empty process `picorv32.$proc$inputs/picorv32_top.v:676$166'.
Found and cleaned up 48 empty switches in `\picorv32.$proc$inputs/picorv32_top.v:610$165'.
Removing empty process `picorv32.$proc$inputs/picorv32_top.v:610$165'.
Found and cleaned up 16 empty switches in `\picorv32.$proc$inputs/picorv32_top.v:484$141'.
Removing empty process `picorv32.$proc$inputs/picorv32_top.v:484$141'.
Removing empty process `picorv32.$proc$inputs/picorv32_top.v:1069$680'.
Found and cleaned up 19 empty switches in `\picorv32.$proc$inputs/picorv32_top.v:356$103'.
Removing empty process `picorv32.$proc$inputs/picorv32_top.v:356$103'.
Found and cleaned up 3 empty switches in `\picorv32.$proc$inputs/picorv32_top.v:328$100'.
Removing empty process `picorv32.$proc$inputs/picorv32_top.v:328$100'.
Found and cleaned up 2 empty switches in `\picorv32.$proc$inputs/picorv32_top.v:318$95'.
Removing empty process `picorv32.$proc$inputs/picorv32_top.v:318$95'.
Found and cleaned up 1 empty switch in `\picorv32.$proc$inputs/picorv32_top.v:266$21'.
Removing empty process `picorv32.$proc$inputs/picorv32_top.v:266$21'.
Cleaned up 187 empty switches.

yosys> opt_expr -keepdc

5.2.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32_top.
<suppressed ~1 debug messages>
Optimizing module picorv32.
<suppressed ~827 debug messages>

yosys> flatten

5.3. Executing FLATTEN pass (flatten design).
Deleting now unused module picorv32.
<suppressed ~1 debug messages>

yosys> opt_expr

5.4. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32_top.
<suppressed ~2 debug messages>

yosys> opt_clean

5.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32_top..
Removed 725 unused cells and 2210 unused wires.
<suppressed ~781 debug messages>

yosys> check

5.6. Executing CHECK pass (checking for obvious problems).
Checking module picorv32_top...
Found and reported 0 problems.

yosys> opt -nodffe -nosdff

5.7. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

5.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32_top.

yosys> opt_merge -nomux

5.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32_top'.
<suppressed ~579 debug messages>
Removed a total of 193 cells.

yosys> opt_muxtree

5.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \picorv32_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\rv32_soc/$procmux$1002.
    dead port 2/2 on $mux $flatten\rv32_soc/$procmux$1063.
    dead port 2/2 on $mux $flatten\rv32_soc/$procmux$1065.
    dead port 2/2 on $mux $flatten\rv32_soc/$procmux$1068.
    dead port 2/2 on $mux $flatten\rv32_soc/$procmux$1150.
    dead port 2/2 on $mux $flatten\rv32_soc/$procmux$1155.
    dead port 2/2 on $mux $flatten\rv32_soc/$procmux$1158.
    dead port 1/3 on $pmux $flatten\rv32_soc/$procmux$1211.
    dead port 2/2 on $mux $flatten\rv32_soc/$procmux$1243.
    dead port 2/2 on $mux $flatten\rv32_soc/$procmux$1256.
    dead port 2/2 on $mux $flatten\rv32_soc/$procmux$1269.
    dead port 1/7 on $pmux $flatten\rv32_soc/$procmux$1496.
    dead port 2/7 on $pmux $flatten\rv32_soc/$procmux$1496.
    dead port 3/7 on $pmux $flatten\rv32_soc/$procmux$1496.
    dead port 4/7 on $pmux $flatten\rv32_soc/$procmux$1496.
    dead port 5/7 on $pmux $flatten\rv32_soc/$procmux$1496.
    dead port 4/12 on $pmux $flatten\rv32_soc/$procmux$1536.
    dead port 5/12 on $pmux $flatten\rv32_soc/$procmux$1536.
    dead port 6/12 on $pmux $flatten\rv32_soc/$procmux$1536.
    dead port 7/12 on $pmux $flatten\rv32_soc/$procmux$1536.
    dead port 8/12 on $pmux $flatten\rv32_soc/$procmux$1536.
    dead port 1/7 on $pmux $flatten\rv32_soc/$procmux$1741.
    dead port 2/7 on $pmux $flatten\rv32_soc/$procmux$1741.
    dead port 3/7 on $pmux $flatten\rv32_soc/$procmux$1741.
    dead port 4/7 on $pmux $flatten\rv32_soc/$procmux$1741.
    dead port 5/7 on $pmux $flatten\rv32_soc/$procmux$1741.
    dead port 3/4 on $pmux $flatten\rv32_soc/$procmux$1805.
    dead port 1/2 on $mux $flatten\rv32_soc/$procmux$1812.
    dead port 2/2 on $mux $flatten\rv32_soc/$procmux$1812.
    dead port 4/12 on $pmux $flatten\rv32_soc/$procmux$1824.
    dead port 5/12 on $pmux $flatten\rv32_soc/$procmux$1824.
    dead port 6/12 on $pmux $flatten\rv32_soc/$procmux$1824.
    dead port 7/12 on $pmux $flatten\rv32_soc/$procmux$1824.
    dead port 8/12 on $pmux $flatten\rv32_soc/$procmux$1824.
    dead port 3/4 on $pmux $flatten\rv32_soc/$procmux$2006.
    dead port 4/12 on $pmux $flatten\rv32_soc/$procmux$2022.
    dead port 5/12 on $pmux $flatten\rv32_soc/$procmux$2022.
    dead port 6/12 on $pmux $flatten\rv32_soc/$procmux$2022.
    dead port 7/12 on $pmux $flatten\rv32_soc/$procmux$2022.
    dead port 8/12 on $pmux $flatten\rv32_soc/$procmux$2022.
    dead port 4/12 on $pmux $flatten\rv32_soc/$procmux$2205.
    dead port 5/12 on $pmux $flatten\rv32_soc/$procmux$2205.
    dead port 6/12 on $pmux $flatten\rv32_soc/$procmux$2205.
    dead port 7/12 on $pmux $flatten\rv32_soc/$procmux$2205.
    dead port 8/12 on $pmux $flatten\rv32_soc/$procmux$2205.
    dead port 1/9 on $pmux $flatten\rv32_soc/$procmux$2258.
    dead port 2/9 on $pmux $flatten\rv32_soc/$procmux$2258.
    dead port 3/9 on $pmux $flatten\rv32_soc/$procmux$2258.
    dead port 4/9 on $pmux $flatten\rv32_soc/$procmux$2258.
    dead port 5/9 on $pmux $flatten\rv32_soc/$procmux$2258.
    dead port 1/5 on $pmux $flatten\rv32_soc/$procmux$2384.
    dead port 2/5 on $pmux $flatten\rv32_soc/$procmux$2384.
    dead port 2/2 on $mux $flatten\rv32_soc/$procmux$2389.
    dead port 1/5 on $pmux $flatten\rv32_soc/$procmux$2393.
    dead port 2/5 on $pmux $flatten\rv32_soc/$procmux$2393.
    dead port 2/2 on $mux $flatten\rv32_soc/$procmux$2398.
    dead port 1/8 on $pmux $flatten\rv32_soc/$procmux$2413.
    dead port 2/8 on $pmux $flatten\rv32_soc/$procmux$2413.
    dead port 2/2 on $mux $flatten\rv32_soc/$procmux$3551.
    dead port 2/2 on $mux $flatten\rv32_soc/$procmux$3558.
    dead port 2/2 on $mux $flatten\rv32_soc/$procmux$871.
    dead port 2/2 on $mux $flatten\rv32_soc/$procmux$881.
    dead port 2/2 on $mux $flatten\rv32_soc/$procmux$883.
    dead port 2/2 on $mux $flatten\rv32_soc/$procmux$889.
    dead port 2/2 on $mux $flatten\rv32_soc/$procmux$896.
    dead port 2/2 on $mux $flatten\rv32_soc/$procmux$898.
    dead port 2/2 on $mux $flatten\rv32_soc/$procmux$904.
    dead port 2/2 on $mux $flatten\rv32_soc/$procmux$925.
    dead port 2/2 on $mux $flatten\rv32_soc/$procmux$928.
    dead port 2/2 on $mux $flatten\rv32_soc/$procmux$940.
    dead port 2/2 on $mux $flatten\rv32_soc/$procmux$947.
    dead port 2/2 on $mux $flatten\rv32_soc/$procmux$950.
    dead port 2/2 on $mux $flatten\rv32_soc/$procmux$974.
    dead port 2/2 on $mux $flatten\rv32_soc/$procmux$977.
    dead port 2/2 on $mux $flatten\rv32_soc/$procmux$986.
    dead port 2/2 on $mux $flatten\rv32_soc/$procmux$989.
    dead port 2/2 on $mux $flatten\rv32_soc/$procmux$997.
    dead port 2/2 on $mux $flatten\rv32_soc/$procmux$999.
Removed 78 multiplexer ports.
<suppressed ~145 debug messages>

yosys> opt_reduce

5.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \picorv32_top.
    New ctrl vector for $pmux cell $flatten\rv32_soc/$procmux$1233: { $flatten\rv32_soc/$procmux$1000_CMP $auto$opt_reduce.cc:137:opt_pmux$3751 }
    New ctrl vector for $pmux cell $flatten\rv32_soc/$procmux$1246: { $auto$opt_reduce.cc:137:opt_pmux$3753 $flatten\rv32_soc/$procmux$1066_CMP }
    New ctrl vector for $pmux cell $flatten\rv32_soc/$procmux$1259: { $flatten\rv32_soc/$procmux$1156_CMP $auto$opt_reduce.cc:137:opt_pmux$3755 }
    New ctrl vector for $pmux cell $flatten\rv32_soc/$procmux$1476: { $flatten\rv32_soc/$procmux$1239_CMP $flatten\rv32_soc/$procmux$1156_CMP $flatten\rv32_soc/$procmux$1236_CMP $flatten\rv32_soc/$procmux$1066_CMP }
    New ctrl vector for $pmux cell $flatten\rv32_soc/$procmux$1536: { \rv32_soc/is_slli_srli_srai $auto$opt_reduce.cc:137:opt_pmux$3757 }
    New ctrl vector for $pmux cell $flatten\rv32_soc/$procmux$1578: { $flatten\rv32_soc/$eq$inputs/picorv32_top.v:1131$476_Y $flatten\rv32_soc/$procmux$1156_CMP }
    New ctrl vector for $pmux cell $flatten\rv32_soc/$procmux$1675: { $flatten\rv32_soc/$eq$inputs/picorv32_top.v:1131$476_Y $flatten\rv32_soc/$procmux$1156_CMP }
    New ctrl vector for $pmux cell $flatten\rv32_soc/$procmux$1718: { $flatten\rv32_soc/$eq$inputs/picorv32_top.v:1131$476_Y $flatten\rv32_soc/$procmux$1239_CMP $flatten\rv32_soc/$procmux$1156_CMP $auto$opt_reduce.cc:137:opt_pmux$3759 }
    New ctrl vector for $pmux cell $flatten\rv32_soc/$procmux$1824: { \rv32_soc/instr_trap \rv32_soc/is_rdcycle_rdcycleh_rdinstr_rdinstrh $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:1443$589_Y \rv32_soc/is_slli_srli_srai $auto$opt_reduce.cc:137:opt_pmux$3761 }
    New ctrl vector for $pmux cell $flatten\rv32_soc/$procmux$1996: { $flatten\rv32_soc/$eq$inputs/picorv32_top.v:1131$476_Y $flatten\rv32_soc/$procmux$1239_CMP $flatten\rv32_soc/$procmux$1238_CMP $flatten\rv32_soc/$procmux$1236_CMP }
    New ctrl vector for $pmux cell $flatten\rv32_soc/$procmux$2022: { $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:1443$589_Y $auto$opt_reduce.cc:137:opt_pmux$3765 $auto$opt_reduce.cc:137:opt_pmux$3763 }
    New ctrl vector for $pmux cell $flatten\rv32_soc/$procmux$2205: { $auto$opt_reduce.cc:137:opt_pmux$3769 $auto$opt_reduce.cc:137:opt_pmux$3767 }
    New ctrl vector for $pmux cell $flatten\rv32_soc/$procmux$2258: { $auto$opt_reduce.cc:137:opt_pmux$3771 \rv32_soc/is_lui_auipc_jal }
    Consolidated identical input bits for $mux cell $flatten\rv32_soc/$procmux$2374:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$flatten\rv32_soc/$0$memwr$\cpuregs$inputs/picorv32_top.v:1155$20_EN[31:0]$490
      New ports: A=1'0, B=1'1, Y=$flatten\rv32_soc/$0$memwr$\cpuregs$inputs/picorv32_top.v:1155$20_EN[31:0]$490 [0]
      New connections: $flatten\rv32_soc/$0$memwr$\cpuregs$inputs/picorv32_top.v:1155$20_EN[31:0]$490 [31:1] = { $flatten\rv32_soc/$0$memwr$\cpuregs$inputs/picorv32_top.v:1155$20_EN[31:0]$490 [0] $flatten\rv32_soc/$0$memwr$\cpuregs$inputs/picorv32_top.v:1155$20_EN[31:0]$490 [0] $flatten\rv32_soc/$0$memwr$\cpuregs$inputs/picorv32_top.v:1155$20_EN[31:0]$490 [0] $flatten\rv32_soc/$0$memwr$\cpuregs$inputs/picorv32_top.v:1155$20_EN[31:0]$490 [0] $flatten\rv32_soc/$0$memwr$\cpuregs$inputs/picorv32_top.v:1155$20_EN[31:0]$490 [0] $flatten\rv32_soc/$0$memwr$\cpuregs$inputs/picorv32_top.v:1155$20_EN[31:0]$490 [0] $flatten\rv32_soc/$0$memwr$\cpuregs$inputs/picorv32_top.v:1155$20_EN[31:0]$490 [0] $flatten\rv32_soc/$0$memwr$\cpuregs$inputs/picorv32_top.v:1155$20_EN[31:0]$490 [0] $flatten\rv32_soc/$0$memwr$\cpuregs$inputs/picorv32_top.v:1155$20_EN[31:0]$490 [0] $flatten\rv32_soc/$0$memwr$\cpuregs$inputs/picorv32_top.v:1155$20_EN[31:0]$490 [0] $flatten\rv32_soc/$0$memwr$\cpuregs$inputs/picorv32_top.v:1155$20_EN[31:0]$490 [0] $flatten\rv32_soc/$0$memwr$\cpuregs$inputs/picorv32_top.v:1155$20_EN[31:0]$490 [0] $flatten\rv32_soc/$0$memwr$\cpuregs$inputs/picorv32_top.v:1155$20_EN[31:0]$490 [0] $flatten\rv32_soc/$0$memwr$\cpuregs$inputs/picorv32_top.v:1155$20_EN[31:0]$490 [0] $flatten\rv32_soc/$0$memwr$\cpuregs$inputs/picorv32_top.v:1155$20_EN[31:0]$490 [0] $flatten\rv32_soc/$0$memwr$\cpuregs$inputs/picorv32_top.v:1155$20_EN[31:0]$490 [0] $flatten\rv32_soc/$0$memwr$\cpuregs$inputs/picorv32_top.v:1155$20_EN[31:0]$490 [0] $flatten\rv32_soc/$0$memwr$\cpuregs$inputs/picorv32_top.v:1155$20_EN[31:0]$490 [0] $flatten\rv32_soc/$0$memwr$\cpuregs$inputs/picorv32_top.v:1155$20_EN[31:0]$490 [0] $flatten\rv32_soc/$0$memwr$\cpuregs$inputs/picorv32_top.v:1155$20_EN[31:0]$490 [0] $flatten\rv32_soc/$0$memwr$\cpuregs$inputs/picorv32_top.v:1155$20_EN[31:0]$490 [0] $flatten\rv32_soc/$0$memwr$\cpuregs$inputs/picorv32_top.v:1155$20_EN[31:0]$490 [0] $flatten\rv32_soc/$0$memwr$\cpuregs$inputs/picorv32_top.v:1155$20_EN[31:0]$490 [0] $flatten\rv32_soc/$0$memwr$\cpuregs$inputs/picorv32_top.v:1155$20_EN[31:0]$490 [0] $flatten\rv32_soc/$0$memwr$\cpuregs$inputs/picorv32_top.v:1155$20_EN[31:0]$490 [0] $flatten\rv32_soc/$0$memwr$\cpuregs$inputs/picorv32_top.v:1155$20_EN[31:0]$490 [0] $flatten\rv32_soc/$0$memwr$\cpuregs$inputs/picorv32_top.v:1155$20_EN[31:0]$490 [0] $flatten\rv32_soc/$0$memwr$\cpuregs$inputs/picorv32_top.v:1155$20_EN[31:0]$490 [0] $flatten\rv32_soc/$0$memwr$\cpuregs$inputs/picorv32_top.v:1155$20_EN[31:0]$490 [0] $flatten\rv32_soc/$0$memwr$\cpuregs$inputs/picorv32_top.v:1155$20_EN[31:0]$490 [0] $flatten\rv32_soc/$0$memwr$\cpuregs$inputs/picorv32_top.v:1155$20_EN[31:0]$490 [0] }
    New ctrl vector for $pmux cell $flatten\rv32_soc/$procmux$2384: $auto$opt_reduce.cc:137:opt_pmux$3773
    New input vector for $reduce_or cell $auto$opt_reduce.cc:131:opt_pmux$3764: { \rv32_soc/instr_rdcycle \rv32_soc/instr_rdcycleh \rv32_soc/instr_rdinstr \rv32_soc/instr_rdinstrh \rv32_soc/instr_trap \rv32_soc/is_slli_srli_srai }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:131:opt_pmux$3768: { \rv32_soc/instr_rdcycle \rv32_soc/instr_rdcycleh \rv32_soc/instr_rdinstr \rv32_soc/instr_rdinstrh \rv32_soc/instr_trap \rv32_soc/is_slli_srli_srai $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:1443$589_Y }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:131:opt_pmux$3770: { \rv32_soc/instr_rdcycle \rv32_soc/instr_rdcycleh \rv32_soc/instr_rdinstr \rv32_soc/instr_rdinstrh \rv32_soc/instr_trap }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:131:opt_pmux$3756: { \rv32_soc/instr_rdcycle \rv32_soc/instr_rdcycleh \rv32_soc/instr_rdinstr \rv32_soc/instr_rdinstrh \rv32_soc/instr_trap \rv32_soc/is_lui_auipc_jal \rv32_soc/is_jalr_addi_slti_sltiu_xori_ori_andi $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:1443$589_Y }
  Optimizing cells in module \picorv32_top.
Performed a total of 25 changes.

yosys> opt_merge

5.7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32_top'.
<suppressed ~39 debug messages>
Removed a total of 13 cells.

yosys> opt_dff -nodffe -nosdff

5.7.6. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $flatten\rv32_soc/$procdff$3596 ($dff) from module picorv32_top.
Setting constant 1-bit at position 0 on $flatten\rv32_soc/$procdff$3597 ($dff) from module picorv32_top.
Setting constant 1-bit at position 1 on $flatten\rv32_soc/$procdff$3597 ($dff) from module picorv32_top.
Setting constant 1-bit at position 2 on $flatten\rv32_soc/$procdff$3597 ($dff) from module picorv32_top.
Setting constant 1-bit at position 3 on $flatten\rv32_soc/$procdff$3597 ($dff) from module picorv32_top.
Setting constant 1-bit at position 4 on $flatten\rv32_soc/$procdff$3597 ($dff) from module picorv32_top.
Setting constant 1-bit at position 5 on $flatten\rv32_soc/$procdff$3597 ($dff) from module picorv32_top.
Setting constant 1-bit at position 6 on $flatten\rv32_soc/$procdff$3597 ($dff) from module picorv32_top.
Setting constant 1-bit at position 7 on $flatten\rv32_soc/$procdff$3597 ($dff) from module picorv32_top.
Setting constant 1-bit at position 8 on $flatten\rv32_soc/$procdff$3597 ($dff) from module picorv32_top.
Setting constant 1-bit at position 9 on $flatten\rv32_soc/$procdff$3597 ($dff) from module picorv32_top.
Setting constant 1-bit at position 10 on $flatten\rv32_soc/$procdff$3597 ($dff) from module picorv32_top.
Setting constant 1-bit at position 11 on $flatten\rv32_soc/$procdff$3597 ($dff) from module picorv32_top.
Setting constant 1-bit at position 12 on $flatten\rv32_soc/$procdff$3597 ($dff) from module picorv32_top.
Setting constant 1-bit at position 13 on $flatten\rv32_soc/$procdff$3597 ($dff) from module picorv32_top.
Setting constant 1-bit at position 14 on $flatten\rv32_soc/$procdff$3597 ($dff) from module picorv32_top.
Setting constant 1-bit at position 15 on $flatten\rv32_soc/$procdff$3597 ($dff) from module picorv32_top.
Setting constant 1-bit at position 16 on $flatten\rv32_soc/$procdff$3597 ($dff) from module picorv32_top.
Setting constant 1-bit at position 17 on $flatten\rv32_soc/$procdff$3597 ($dff) from module picorv32_top.
Setting constant 1-bit at position 18 on $flatten\rv32_soc/$procdff$3597 ($dff) from module picorv32_top.
Setting constant 1-bit at position 19 on $flatten\rv32_soc/$procdff$3597 ($dff) from module picorv32_top.
Setting constant 1-bit at position 20 on $flatten\rv32_soc/$procdff$3597 ($dff) from module picorv32_top.
Setting constant 1-bit at position 21 on $flatten\rv32_soc/$procdff$3597 ($dff) from module picorv32_top.
Setting constant 1-bit at position 22 on $flatten\rv32_soc/$procdff$3597 ($dff) from module picorv32_top.
Setting constant 1-bit at position 23 on $flatten\rv32_soc/$procdff$3597 ($dff) from module picorv32_top.
Setting constant 1-bit at position 24 on $flatten\rv32_soc/$procdff$3597 ($dff) from module picorv32_top.
Setting constant 1-bit at position 25 on $flatten\rv32_soc/$procdff$3597 ($dff) from module picorv32_top.
Setting constant 1-bit at position 26 on $flatten\rv32_soc/$procdff$3597 ($dff) from module picorv32_top.
Setting constant 1-bit at position 27 on $flatten\rv32_soc/$procdff$3597 ($dff) from module picorv32_top.
Setting constant 1-bit at position 28 on $flatten\rv32_soc/$procdff$3597 ($dff) from module picorv32_top.
Setting constant 1-bit at position 29 on $flatten\rv32_soc/$procdff$3597 ($dff) from module picorv32_top.
Setting constant 1-bit at position 30 on $flatten\rv32_soc/$procdff$3597 ($dff) from module picorv32_top.
Setting constant 1-bit at position 31 on $flatten\rv32_soc/$procdff$3597 ($dff) from module picorv32_top.
Setting constant 1-bit at position 32 on $flatten\rv32_soc/$procdff$3597 ($dff) from module picorv32_top.
Setting constant 1-bit at position 33 on $flatten\rv32_soc/$procdff$3597 ($dff) from module picorv32_top.
Setting constant 1-bit at position 34 on $flatten\rv32_soc/$procdff$3597 ($dff) from module picorv32_top.
Setting constant 1-bit at position 35 on $flatten\rv32_soc/$procdff$3597 ($dff) from module picorv32_top.

yosys> opt_clean

5.7.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32_top..
Removed 24 unused cells and 272 unused wires.
<suppressed ~35 debug messages>

yosys> opt_expr

5.7.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32_top.
<suppressed ~2 debug messages>

5.7.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

5.7.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \picorv32_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~139 debug messages>

yosys> opt_reduce

5.7.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \picorv32_top.
    New ctrl vector for $pmux cell $flatten\rv32_soc/$procmux$1346: $auto$opt_reduce.cc:137:opt_pmux$3775
    New ctrl vector for $pmux cell $flatten\rv32_soc/$procmux$1363: { $flatten\rv32_soc/$procmux$1156_CMP $auto$opt_reduce.cc:137:opt_pmux$3777 }
    New ctrl vector for $pmux cell $flatten\rv32_soc/$procmux$1783: { $flatten\rv32_soc/$eq$inputs/picorv32_top.v:1131$476_Y $flatten\rv32_soc/$procmux$1239_CMP $flatten\rv32_soc/$procmux$1238_CMP $flatten\rv32_soc/$procmux$1156_CMP $flatten\rv32_soc/$procmux$1236_CMP $auto$opt_reduce.cc:137:opt_pmux$3779 }
    New ctrl vector for $pmux cell $flatten\rv32_soc/$procmux$3310: { $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:311$70_Y $auto$opt_reduce.cc:137:opt_pmux$3781 }
  Optimizing cells in module \picorv32_top.
Performed a total of 4 changes.

yosys> opt_merge

5.7.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32_top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

yosys> opt_dff -nodffe -nosdff

5.7.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

5.7.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32_top..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

5.7.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32_top.

5.7.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

5.7.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \picorv32_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~139 debug messages>

yosys> opt_reduce

5.7.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \picorv32_top.
Performed a total of 0 changes.

yosys> opt_merge

5.7.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32_top'.
Removed a total of 0 cells.

yosys> opt_dff -nodffe -nosdff

5.7.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

5.7.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32_top..

yosys> opt_expr

5.7.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32_top.

5.7.23. Finished OPT passes. (There is nothing left to do.)

yosys> fsm

5.8. Executing FSM pass (extract and optimize FSM).

yosys> fsm_detect

5.8.1. Executing FSM_DETECT pass (finding FSMs in design).
Found FSM state register picorv32_top.rv32_soc/cpu_state.
Not marking picorv32_top.rv32_soc/eoi as FSM state register:
    Register is connected to module port.
    Users of register don't seem to benefit from recoding.
Not marking picorv32_top.rv32_soc/mem_state as FSM state register:
    Users of register don't seem to benefit from recoding.
Found FSM state register picorv32_top.rv32_soc/mem_wordsize.
Not marking picorv32_top.rv32_soc/pcpi_insn as FSM state register:
    Register is connected to module port.
    Users of register don't seem to benefit from recoding.

yosys> fsm_extract

5.8.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\rv32_soc/cpu_state' from module `\picorv32_top'.
  found $dff cell for state register: $flatten\rv32_soc/$procdff$3624
  root of input selection tree: $flatten\rv32_soc/$0\cpu_state[7:0]
  found reset state: 8'10000000 (guessed from mux tree)
  found ctrl input: $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:1677$668_Y
  found ctrl input: $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:1661$650_Y
  found ctrl input: \resetn
  found state code: 8'01000000
  found ctrl input: $auto$opt_reduce.cc:137:opt_pmux$3775
  found ctrl input: $flatten\rv32_soc/$procmux$1236_CMP
  found ctrl input: $flatten\rv32_soc/$procmux$1156_CMP
  found ctrl input: $flatten\rv32_soc/$procmux$1238_CMP
  found ctrl input: $flatten\rv32_soc/$procmux$1239_CMP
  found ctrl input: $flatten\rv32_soc/$eq$inputs/picorv32_top.v:1131$476_Y
  found ctrl input: $flatten\rv32_soc/$logic_or$inputs/picorv32_top.v:1599$635_Y
  found ctrl input: $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:1614$639_Y
  found ctrl input: $flatten\rv32_soc/$eq$inputs/picorv32_top.v:1574$617_Y
  found ctrl input: \rv32_soc/is_beq_bne_blt_bge_bltu_bgeu
  found ctrl input: \rv32_soc/mem_done
  found ctrl input: \rv32_soc/is_sll_srl_sra
  found ctrl input: \rv32_soc/is_sb_sh_sw
  found state code: 8'00001000
  found state code: 8'00000100
  found state code: 8'00000010
  found ctrl input: $auto$opt_reduce.cc:137:opt_pmux$3761
  found ctrl input: \rv32_soc/is_slli_srli_srai
  found ctrl input: $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:1443$589_Y
  found ctrl input: \rv32_soc/is_rdcycle_rdcycleh_rdinstr_rdinstrh
  found ctrl input: \rv32_soc/instr_trap
  found state code: 8'00000001
  found state code: 8'10000000
  found ctrl input: \rv32_soc/decoder_trigger
  found ctrl input: \rv32_soc/instr_jal
  found state code: 8'00100000
  found ctrl input: $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:1669$660_Y
  found ctrl input: $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:1662$653_Y
  found ctrl output: $flatten\rv32_soc/$procmux$1241_CMP
  found ctrl output: $flatten\rv32_soc/$procmux$1239_CMP
  found ctrl output: $flatten\rv32_soc/$procmux$1238_CMP
  found ctrl output: $flatten\rv32_soc/$procmux$1236_CMP
  found ctrl output: $flatten\rv32_soc/$procmux$1156_CMP
  found ctrl output: $flatten\rv32_soc/$procmux$1066_CMP
  found ctrl output: $flatten\rv32_soc/$procmux$1000_CMP
  found ctrl output: $flatten\rv32_soc/$eq$inputs/picorv32_top.v:1131$476_Y
  ctrl inputs: { $auto$opt_reduce.cc:137:opt_pmux$3775 $auto$opt_reduce.cc:137:opt_pmux$3761 \rv32_soc/mem_done \rv32_soc/instr_jal \rv32_soc/instr_trap \rv32_soc/decoder_trigger \rv32_soc/is_slli_srli_srai \rv32_soc/is_sb_sh_sw \rv32_soc/is_sll_srl_sra \rv32_soc/is_beq_bne_blt_bge_bltu_bgeu \rv32_soc/is_rdcycle_rdcycleh_rdinstr_rdinstrh $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:1443$589_Y $flatten\rv32_soc/$eq$inputs/picorv32_top.v:1574$617_Y $flatten\rv32_soc/$logic_or$inputs/picorv32_top.v:1599$635_Y $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:1614$639_Y $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:1661$650_Y $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:1662$653_Y $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:1669$660_Y $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:1677$668_Y \resetn }
  ctrl outputs: { $flatten\rv32_soc/$eq$inputs/picorv32_top.v:1131$476_Y $flatten\rv32_soc/$0\cpu_state[7:0] $flatten\rv32_soc/$procmux$1000_CMP $flatten\rv32_soc/$procmux$1066_CMP $flatten\rv32_soc/$procmux$1156_CMP $flatten\rv32_soc/$procmux$1236_CMP $flatten\rv32_soc/$procmux$1238_CMP $flatten\rv32_soc/$procmux$1239_CMP $flatten\rv32_soc/$procmux$1241_CMP }
  transition: 8'10000000 20'---------------0--00 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 20'---------------0--01 -> 8'10000000 16'0100000000000001
  transition: 8'10000000 20'---------------10000 -> 8'01000000 16'0010000000000001
  transition: 8'10000000 20'---------------10001 -> 8'10000000 16'0100000000000001
  transition: 8'10000000 20'---------------1100- -> 8'10000000 16'0100000000000001
  transition: 8'10000000 20'---------------1-10- -> 8'10000000 16'0100000000000001
  transition: 8'10000000 20'------------------1- -> 8'10000000 16'0100000000000001
  transition: 8'01000000 20'---------------0--00 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 20'-----0---------0--01 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 20'---0-1---------0--01 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 20'---1-1---------0--01 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 20'---------------10000 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 20'-----0---------10001 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 20'---0-1---------10001 -> 8'00100000 16'1001000000000000
  transition: 8'01000000 20'---1-1---------10001 -> 8'01000000 16'1010000000000000
  transition: 8'01000000 20'---------------1100- -> 8'10000000 16'1100000000000000
  transition: 8'01000000 20'---------------1-10- -> 8'10000000 16'1100000000000000
  transition: 8'01000000 20'------------------1- -> 8'10000000 16'1100000000000000
  transition: 8'00100000 20'---------------0--00 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 20'-0--0-000-00---0--01 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 20'-0--0-01--00---0--01 -> 8'00000010 16'0000000100000010
  transition: 8'00100000 20'-0--0-0-1-00---0--01 -> 8'00000100 16'0000001000000010
  transition: 8'00100000 20'----1----------0--01 -> 8'10000000 16'0100000000000010
  transition: 8'00100000 20'----------1----0--01 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 20'-----------1---0--01 -> 8'00000001 16'0000000010000010
  transition: 8'00100000 20'------1--------0--01 -> 8'00000100 16'0000001000000010
  transition: 8'00100000 20'-1-------------0--01 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 20'---------------10000 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 20'-0--0-000-00---10001 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 20'-0--0-01--00---10001 -> 8'00000010 16'0000000100000010
  transition: 8'00100000 20'-0--0-0-1-00---10001 -> 8'00000100 16'0000001000000010
  transition: 8'00100000 20'----1----------10001 -> 8'10000000 16'0100000000000010
  transition: 8'00100000 20'----------1----10001 -> 8'01000000 16'0010000000000010
  transition: 8'00100000 20'-----------1---10001 -> 8'00000001 16'0000000010000010
  transition: 8'00100000 20'------1--------10001 -> 8'00000100 16'0000001000000010
  transition: 8'00100000 20'-1-------------10001 -> 8'00001000 16'0000010000000010
  transition: 8'00100000 20'---------------1100- -> 8'10000000 16'0100000000000010
  transition: 8'00100000 20'---------------1-10- -> 8'10000000 16'0100000000000010
  transition: 8'00100000 20'------------------1- -> 8'10000000 16'0100000000000010
  transition: 8'00001000 20'---------------0--00 -> 8'01000000 16'0010000000010000
  transition: 8'00001000 20'---------0-----0--01 -> 8'01000000 16'0010000000010000
  transition: 8'00001000 20'--0------1-----0--01 -> 8'00001000 16'0000010000010000
  transition: 8'00001000 20'--1------1-----0--01 -> 8'01000000 16'0010000000010000
  transition: 8'00001000 20'---------------10000 -> 8'01000000 16'0010000000010000
  transition: 8'00001000 20'---------0-----10001 -> 8'01000000 16'0010000000010000
  transition: 8'00001000 20'--0------1-----10001 -> 8'00001000 16'0000010000010000
  transition: 8'00001000 20'--1------1-----10001 -> 8'01000000 16'0010000000010000
  transition: 8'00001000 20'---------------1100- -> 8'10000000 16'0100000000010000
  transition: 8'00001000 20'---------------1-10- -> 8'10000000 16'0100000000010000
  transition: 8'00001000 20'------------------1- -> 8'10000000 16'0100000000010000
  transition: 8'00000100 20'---------------0--00 -> 8'01000000 16'0010000000001000
  transition: 8'00000100 20'------------0--0--01 -> 8'00000100 16'0000001000001000
  transition: 8'00000100 20'------------1--0--01 -> 8'01000000 16'0010000000001000
  transition: 8'00000100 20'---------------10000 -> 8'01000000 16'0010000000001000
  transition: 8'00000100 20'------------0--10001 -> 8'00000100 16'0000001000001000
  transition: 8'00000100 20'------------1--10001 -> 8'01000000 16'0010000000001000
  transition: 8'00000100 20'---------------1100- -> 8'10000000 16'0100000000001000
  transition: 8'00000100 20'---------------1-10- -> 8'10000000 16'0100000000001000
  transition: 8'00000100 20'------------------1- -> 8'10000000 16'0100000000001000
  transition: 8'00000010 20'---------------0--00 -> 8'01000000 16'0010000001000000
  transition: 8'00000010 20'-------------0-0--01 -> 8'00000010 16'0000000101000000
  transition: 8'00000010 20'-------------100--01 -> 8'00000010 16'0000000101000000
  transition: 8'00000010 20'-------------110--01 -> 8'01000000 16'0010000001000000
  transition: 8'00000010 20'---------------10000 -> 8'01000000 16'0010000001000000
  transition: 8'00000010 20'-------------0-10001 -> 8'00000010 16'0000000101000000
  transition: 8'00000010 20'-------------1010001 -> 8'00000010 16'0000000101000000
  transition: 8'00000010 20'-------------1110001 -> 8'01000000 16'0010000001000000
  transition: 8'00000010 20'---------------1100- -> 8'10000000 16'0100000001000000
  transition: 8'00000010 20'---------------1-10- -> 8'10000000 16'0100000001000000
  transition: 8'00000010 20'------------------1- -> 8'10000000 16'0100000001000000
  transition: 8'00000001 20'---------------0--00 -> 8'01000000 16'0010000000100000
  transition: 8'00000001 20'-------------0-0--01 -> 8'00000001 16'0000000010100000
  transition: 8'00000001 20'-------------100--01 -> 8'00000001 16'0000000010100000
  transition: 8'00000001 20'-------------110--01 -> 8'01000000 16'0010000000100000
  transition: 8'00000001 20'---------------10000 -> 8'01000000 16'0010000000100000
  transition: 8'00000001 20'-------------0-10001 -> 8'00000001 16'0000000010100000
  transition: 8'00000001 20'-------------1010001 -> 8'00000001 16'0000000010100000
  transition: 8'00000001 20'-------------1110001 -> 8'01000000 16'0010000000100000
  transition: 8'00000001 20'---------------1100- -> 8'10000000 16'0100000000100000
  transition: 8'00000001 20'---------------1-10- -> 8'10000000 16'0100000000100000
  transition: 8'00000001 20'------------------1- -> 8'10000000 16'0100000000100000
Extracting FSM `\rv32_soc/mem_wordsize' from module `\picorv32_top'.
  found $dff cell for state register: $flatten\rv32_soc/$procdff$3611
  root of input selection tree: $flatten\rv32_soc/$0\mem_wordsize[1:0]
  found ctrl input: \resetn
  found ctrl input: $flatten\rv32_soc/$procmux$1066_CMP
  found ctrl input: $flatten\rv32_soc/$procmux$1000_CMP
  found ctrl input: $flatten\rv32_soc/$eq$inputs/picorv32_top.v:1131$476_Y
  found ctrl input: $flatten\rv32_soc/$logic_or$inputs/picorv32_top.v:1599$635_Y
  found ctrl input: \rv32_soc/mem_do_rdata
  found ctrl input: \rv32_soc/instr_lw
  found ctrl input: $flatten\rv32_soc/$logic_or$inputs/picorv32_top.v:1628$644_Y
  found ctrl input: $flatten\rv32_soc/$logic_or$inputs/picorv32_top.v:1627$643_Y
  found state code: 2'00
  found state code: 2'01
  found state code: 2'10
  found ctrl input: \rv32_soc/mem_do_wdata
  found ctrl input: \rv32_soc/instr_sw
  found ctrl input: \rv32_soc/instr_sh
  found ctrl input: \rv32_soc/instr_sb
  found ctrl output: $flatten\rv32_soc/$procmux$3552_CMP
  found ctrl output: $flatten\rv32_soc/$eq$inputs/picorv32_top.v:1669$658_Y
  found ctrl output: $flatten\rv32_soc/$eq$inputs/picorv32_top.v:1662$651_Y
  ctrl inputs: { \rv32_soc/mem_do_rdata \rv32_soc/mem_do_wdata \rv32_soc/instr_lw \rv32_soc/instr_sb \rv32_soc/instr_sh \rv32_soc/instr_sw $flatten\rv32_soc/$eq$inputs/picorv32_top.v:1131$476_Y $flatten\rv32_soc/$logic_or$inputs/picorv32_top.v:1599$635_Y $flatten\rv32_soc/$logic_or$inputs/picorv32_top.v:1627$643_Y $flatten\rv32_soc/$logic_or$inputs/picorv32_top.v:1628$644_Y $flatten\rv32_soc/$procmux$1000_CMP $flatten\rv32_soc/$procmux$1066_CMP \resetn }
  ctrl outputs: { $flatten\rv32_soc/$0\mem_wordsize[1:0] $flatten\rv32_soc/$eq$inputs/picorv32_top.v:1662$651_Y $flatten\rv32_soc/$eq$inputs/picorv32_top.v:1669$658_Y $flatten\rv32_soc/$procmux$3552_CMP }
  transition:       2'00 13'------------0 ->       2'00 5'00100
  transition:       2'00 13'------0---001 ->       2'00 5'00100
  transition:       2'00 13'------1-----1 ->       2'00 5'00100
  transition:       2'00 13'-------0--1-1 ->       2'00 5'00100
  transition:       2'00 13'-0-000-1--1-1 ->       2'00 5'00100
  transition:       2'00 13'-0-1---1--1-1 ->       2'10 5'10100
  transition:       2'00 13'-0--1--1--1-1 ->       2'01 5'01100
  transition:       2'00 13'-0---1-1--1-1 ->       2'00 5'00100
  transition:       2'00 13'-1-----1--1-1 ->       2'00 5'00100
  transition:       2'00 13'-------0---11 ->       2'00 5'00100
  transition:       2'00 13'0-0----100-11 ->       2'00 5'00100
  transition:       2'00 13'0------11--11 ->       2'10 5'10100
  transition:       2'00 13'0------1-1-11 ->       2'01 5'01100
  transition:       2'00 13'0-1----1---11 ->       2'00 5'00100
  transition:       2'00 13'1------1---11 ->       2'00 5'00100
  transition:       2'10 13'------------0 ->       2'10 5'10001
  transition:       2'10 13'------0---001 ->       2'10 5'10001
  transition:       2'10 13'------1-----1 ->       2'00 5'00001
  transition:       2'10 13'-------0--1-1 ->       2'10 5'10001
  transition:       2'10 13'-0-000-1--1-1 ->       2'10 5'10001
  transition:       2'10 13'-0-1---1--1-1 ->       2'10 5'10001
  transition:       2'10 13'-0--1--1--1-1 ->       2'01 5'01001
  transition:       2'10 13'-0---1-1--1-1 ->       2'00 5'00001
  transition:       2'10 13'-1-----1--1-1 ->       2'10 5'10001
  transition:       2'10 13'-------0---11 ->       2'10 5'10001
  transition:       2'10 13'0-0----100-11 ->       2'10 5'10001
  transition:       2'10 13'0------11--11 ->       2'10 5'10001
  transition:       2'10 13'0------1-1-11 ->       2'01 5'01001
  transition:       2'10 13'0-1----1---11 ->       2'00 5'00001
  transition:       2'10 13'1------1---11 ->       2'10 5'10001
  transition:       2'01 13'------------0 ->       2'01 5'01010
  transition:       2'01 13'------0---001 ->       2'01 5'01010
  transition:       2'01 13'------1-----1 ->       2'00 5'00010
  transition:       2'01 13'-------0--1-1 ->       2'01 5'01010
  transition:       2'01 13'-0-000-1--1-1 ->       2'01 5'01010
  transition:       2'01 13'-0-1---1--1-1 ->       2'10 5'10010
  transition:       2'01 13'-0--1--1--1-1 ->       2'01 5'01010
  transition:       2'01 13'-0---1-1--1-1 ->       2'00 5'00010
  transition:       2'01 13'-1-----1--1-1 ->       2'01 5'01010
  transition:       2'01 13'-------0---11 ->       2'01 5'01010
  transition:       2'01 13'0-0----100-11 ->       2'01 5'01010
  transition:       2'01 13'0------11--11 ->       2'10 5'10010
  transition:       2'01 13'0------1-1-11 ->       2'01 5'01010
  transition:       2'01 13'0-1----1---11 ->       2'00 5'00010
  transition:       2'01 13'1------1---11 ->       2'01 5'01010

yosys> fsm_opt

5.8.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\rv32_soc/mem_wordsize$3792' from module `\picorv32_top'.
Optimizing FSM `$fsm$\rv32_soc/cpu_state$3782' from module `\picorv32_top'.
  Removing unused input signal $auto$opt_reduce.cc:137:opt_pmux$3775.

yosys> opt_clean

5.8.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32_top..
Removed 36 unused cells and 36 unused wires.
<suppressed ~37 debug messages>

yosys> fsm_opt

5.8.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\rv32_soc/cpu_state$3782' from module `\picorv32_top'.
  Removing unused output signal $flatten\rv32_soc/$0\cpu_state[7:0] [0].
  Removing unused output signal $flatten\rv32_soc/$0\cpu_state[7:0] [1].
  Removing unused output signal $flatten\rv32_soc/$0\cpu_state[7:0] [2].
  Removing unused output signal $flatten\rv32_soc/$0\cpu_state[7:0] [3].
  Removing unused output signal $flatten\rv32_soc/$0\cpu_state[7:0] [4].
  Removing unused output signal $flatten\rv32_soc/$0\cpu_state[7:0] [5].
  Removing unused output signal $flatten\rv32_soc/$0\cpu_state[7:0] [6].
  Removing unused output signal $flatten\rv32_soc/$0\cpu_state[7:0] [7].
Optimizing FSM `$fsm$\rv32_soc/mem_wordsize$3792' from module `\picorv32_top'.
  Removing unused output signal $flatten\rv32_soc/$0\mem_wordsize[1:0] [0].
  Removing unused output signal $flatten\rv32_soc/$0\mem_wordsize[1:0] [1].

yosys> fsm_recode

5.8.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\rv32_soc/cpu_state$3782' from module `\picorv32_top' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  10000000 -> ------1
  01000000 -> -----1-
  00100000 -> ----1--
  00001000 -> ---1---
  00000100 -> --1----
  00000010 -> -1-----
  00000001 -> 1------
Recoding FSM `$fsm$\rv32_soc/mem_wordsize$3792' from module `\picorv32_top' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> --1
  10 -> -1-
  01 -> 1--

yosys> fsm_info

5.8.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\rv32_soc/cpu_state$3782' from module `picorv32_top':
-------------------------------------

  Information on FSM $fsm$\rv32_soc/cpu_state$3782 (\rv32_soc/cpu_state):

  Number of input signals:   19
  Number of output signals:   8
  Number of state bits:       7

  Input signals:
    0: \resetn
    1: $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:1677$668_Y
    2: $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:1669$660_Y
    3: $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:1662$653_Y
    4: $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:1661$650_Y
    5: $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:1614$639_Y
    6: $flatten\rv32_soc/$logic_or$inputs/picorv32_top.v:1599$635_Y
    7: $flatten\rv32_soc/$eq$inputs/picorv32_top.v:1574$617_Y
    8: $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:1443$589_Y
    9: \rv32_soc/is_rdcycle_rdcycleh_rdinstr_rdinstrh
   10: \rv32_soc/is_beq_bne_blt_bge_bltu_bgeu
   11: \rv32_soc/is_sll_srl_sra
   12: \rv32_soc/is_sb_sh_sw
   13: \rv32_soc/is_slli_srli_srai
   14: \rv32_soc/decoder_trigger
   15: \rv32_soc/instr_trap
   16: \rv32_soc/instr_jal
   17: \rv32_soc/mem_done
   18: $auto$opt_reduce.cc:137:opt_pmux$3761

  Output signals:
    0: $flatten\rv32_soc/$procmux$1241_CMP
    1: $flatten\rv32_soc/$procmux$1239_CMP
    2: $flatten\rv32_soc/$procmux$1238_CMP
    3: $flatten\rv32_soc/$procmux$1236_CMP
    4: $flatten\rv32_soc/$procmux$1156_CMP
    5: $flatten\rv32_soc/$procmux$1066_CMP
    6: $flatten\rv32_soc/$procmux$1000_CMP
    7: $flatten\rv32_soc/$eq$inputs/picorv32_top.v:1131$476_Y

  State encoding:
    0:  7'------1  <RESET STATE>
    1:  7'-----1-
    2:  7'----1--
    3:  7'---1---
    4:  7'--1----
    5:  7'-1-----
    6:  7'1------

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 19'--------------10001   ->     0 8'00000001
      1:     0 19'--------------0--01   ->     0 8'00000001
      2:     0 19'--------------1100-   ->     0 8'00000001
      3:     0 19'--------------1-10-   ->     0 8'00000001
      4:     0 19'-----------------1-   ->     0 8'00000001
      5:     0 19'--------------10000   ->     1 8'00000001
      6:     0 19'--------------0--00   ->     1 8'00000001
      7:     1 19'--------------1100-   ->     0 8'10000000
      8:     1 19'--------------1-10-   ->     0 8'10000000
      9:     1 19'-----------------1-   ->     0 8'10000000
     10:     1 19'--------------10000   ->     1 8'10000000
     11:     1 19'--------------0--00   ->     1 8'10000000
     12:     1 19'----0---------10001   ->     1 8'10000000
     13:     1 19'--1-1---------10001   ->     1 8'10000000
     14:     1 19'----0---------0--01   ->     1 8'10000000
     15:     1 19'--1-1---------0--01   ->     1 8'10000000
     16:     1 19'--0-1---------10001   ->     2 8'10000000
     17:     1 19'--0-1---------0--01   ->     2 8'10000000
     18:     2 19'---1----------10001   ->     0 8'00000010
     19:     2 19'---1----------0--01   ->     0 8'00000010
     20:     2 19'--------------1100-   ->     0 8'00000010
     21:     2 19'--------------1-10-   ->     0 8'00000010
     22:     2 19'-----------------1-   ->     0 8'00000010
     23:     2 19'--------------10000   ->     1 8'00000010
     24:     2 19'--------------0--00   ->     1 8'00000010
     25:     2 19'---------1----10001   ->     1 8'00000010
     26:     2 19'---------1----0--01   ->     1 8'00000010
     27:     2 19'0--0-000-00---10001   ->     3 8'00000010
     28:     2 19'1-------------10001   ->     3 8'00000010
     29:     2 19'0--0-000-00---0--01   ->     3 8'00000010
     30:     2 19'1-------------0--01   ->     3 8'00000010
     31:     2 19'0--0-0-1-00---10001   ->     4 8'00000010
     32:     2 19'-----1--------10001   ->     4 8'00000010
     33:     2 19'0--0-0-1-00---0--01   ->     4 8'00000010
     34:     2 19'-----1--------0--01   ->     4 8'00000010
     35:     2 19'0--0-01--00---10001   ->     5 8'00000010
     36:     2 19'0--0-01--00---0--01   ->     5 8'00000010
     37:     2 19'----------1---10001   ->     6 8'00000010
     38:     2 19'----------1---0--01   ->     6 8'00000010
     39:     3 19'--------------1100-   ->     0 8'00010000
     40:     3 19'--------------1-10-   ->     0 8'00010000
     41:     3 19'-----------------1-   ->     0 8'00010000
     42:     3 19'--------------10000   ->     1 8'00010000
     43:     3 19'--------------0--00   ->     1 8'00010000
     44:     3 19'--------0-----10001   ->     1 8'00010000
     45:     3 19'-1------1-----10001   ->     1 8'00010000
     46:     3 19'--------0-----0--01   ->     1 8'00010000
     47:     3 19'-1------1-----0--01   ->     1 8'00010000
     48:     3 19'-0------1-----10001   ->     3 8'00010000
     49:     3 19'-0------1-----0--01   ->     3 8'00010000
     50:     4 19'--------------1100-   ->     0 8'00001000
     51:     4 19'--------------1-10-   ->     0 8'00001000
     52:     4 19'-----------------1-   ->     0 8'00001000
     53:     4 19'--------------10000   ->     1 8'00001000
     54:     4 19'--------------0--00   ->     1 8'00001000
     55:     4 19'-----------1--10001   ->     1 8'00001000
     56:     4 19'-----------1--0--01   ->     1 8'00001000
     57:     4 19'-----------0--10001   ->     4 8'00001000
     58:     4 19'-----------0--0--01   ->     4 8'00001000
     59:     5 19'--------------1100-   ->     0 8'01000000
     60:     5 19'--------------1-10-   ->     0 8'01000000
     61:     5 19'-----------------1-   ->     0 8'01000000
     62:     5 19'--------------10000   ->     1 8'01000000
     63:     5 19'--------------0--00   ->     1 8'01000000
     64:     5 19'------------1110001   ->     1 8'01000000
     65:     5 19'------------110--01   ->     1 8'01000000
     66:     5 19'------------1010001   ->     5 8'01000000
     67:     5 19'------------0-10001   ->     5 8'01000000
     68:     5 19'------------100--01   ->     5 8'01000000
     69:     5 19'------------0-0--01   ->     5 8'01000000
     70:     6 19'--------------1100-   ->     0 8'00100000
     71:     6 19'--------------1-10-   ->     0 8'00100000
     72:     6 19'-----------------1-   ->     0 8'00100000
     73:     6 19'--------------10000   ->     1 8'00100000
     74:     6 19'--------------0--00   ->     1 8'00100000
     75:     6 19'------------1110001   ->     1 8'00100000
     76:     6 19'------------110--01   ->     1 8'00100000
     77:     6 19'------------1010001   ->     6 8'00100000
     78:     6 19'------------0-10001   ->     6 8'00100000
     79:     6 19'------------100--01   ->     6 8'00100000
     80:     6 19'------------0-0--01   ->     6 8'00100000

-------------------------------------

FSM `$fsm$\rv32_soc/mem_wordsize$3792' from module `picorv32_top':
-------------------------------------

  Information on FSM $fsm$\rv32_soc/mem_wordsize$3792 (\rv32_soc/mem_wordsize):

  Number of input signals:   13
  Number of output signals:   3
  Number of state bits:       3

  Input signals:
    0: \resetn
    1: $flatten\rv32_soc/$procmux$1066_CMP
    2: $flatten\rv32_soc/$procmux$1000_CMP
    3: $flatten\rv32_soc/$logic_or$inputs/picorv32_top.v:1628$644_Y
    4: $flatten\rv32_soc/$logic_or$inputs/picorv32_top.v:1627$643_Y
    5: $flatten\rv32_soc/$logic_or$inputs/picorv32_top.v:1599$635_Y
    6: $flatten\rv32_soc/$eq$inputs/picorv32_top.v:1131$476_Y
    7: \rv32_soc/instr_sw
    8: \rv32_soc/instr_sh
    9: \rv32_soc/instr_sb
   10: \rv32_soc/instr_lw
   11: \rv32_soc/mem_do_wdata
   12: \rv32_soc/mem_do_rdata

  Output signals:
    0: $flatten\rv32_soc/$procmux$3552_CMP
    1: $flatten\rv32_soc/$eq$inputs/picorv32_top.v:1669$658_Y
    2: $flatten\rv32_soc/$eq$inputs/picorv32_top.v:1662$651_Y

  State encoding:
    0:      3'--1
    1:      3'-1-
    2:      3'1--

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 13'------------0   ->     0 3'100
      1:     0 13'------0---001   ->     0 3'100
      2:     0 13'0-0----100-11   ->     0 3'100
      3:     0 13'-------0---11   ->     0 3'100
      4:     0 13'0-1----1---11   ->     0 3'100
      5:     0 13'1------1---11   ->     0 3'100
      6:     0 13'-------0--1-1   ->     0 3'100
      7:     0 13'-0-000-1--1-1   ->     0 3'100
      8:     0 13'-0---1-1--1-1   ->     0 3'100
      9:     0 13'-1-----1--1-1   ->     0 3'100
     10:     0 13'------1-----1   ->     0 3'100
     11:     0 13'0------11--11   ->     1 3'100
     12:     0 13'-0-1---1--1-1   ->     1 3'100
     13:     0 13'0------1-1-11   ->     2 3'100
     14:     0 13'-0--1--1--1-1   ->     2 3'100
     15:     1 13'0-1----1---11   ->     0 3'001
     16:     1 13'-0---1-1--1-1   ->     0 3'001
     17:     1 13'------1-----1   ->     0 3'001
     18:     1 13'------------0   ->     1 3'001
     19:     1 13'------0---001   ->     1 3'001
     20:     1 13'0-0----100-11   ->     1 3'001
     21:     1 13'0------11--11   ->     1 3'001
     22:     1 13'-------0---11   ->     1 3'001
     23:     1 13'1------1---11   ->     1 3'001
     24:     1 13'-------0--1-1   ->     1 3'001
     25:     1 13'-0-000-1--1-1   ->     1 3'001
     26:     1 13'-0-1---1--1-1   ->     1 3'001
     27:     1 13'-1-----1--1-1   ->     1 3'001
     28:     1 13'0------1-1-11   ->     2 3'001
     29:     1 13'-0--1--1--1-1   ->     2 3'001
     30:     2 13'0-1----1---11   ->     0 3'010
     31:     2 13'-0---1-1--1-1   ->     0 3'010
     32:     2 13'------1-----1   ->     0 3'010
     33:     2 13'0------11--11   ->     1 3'010
     34:     2 13'-0-1---1--1-1   ->     1 3'010
     35:     2 13'------------0   ->     2 3'010
     36:     2 13'------0---001   ->     2 3'010
     37:     2 13'0-0----100-11   ->     2 3'010
     38:     2 13'0------1-1-11   ->     2 3'010
     39:     2 13'-------0---11   ->     2 3'010
     40:     2 13'1------1---11   ->     2 3'010
     41:     2 13'-------0--1-1   ->     2 3'010
     42:     2 13'-0-000-1--1-1   ->     2 3'010
     43:     2 13'-0--1--1--1-1   ->     2 3'010
     44:     2 13'-1-----1--1-1   ->     2 3'010

-------------------------------------

yosys> fsm_map

5.8.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\rv32_soc/cpu_state$3782' from module `\picorv32_top'.
Mapping FSM `$fsm$\rv32_soc/mem_wordsize$3792' from module `\picorv32_top'.

yosys> opt

5.9. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

5.9.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32_top.
<suppressed ~5 debug messages>

yosys> opt_merge -nomux

5.9.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32_top'.
<suppressed ~66 debug messages>
Removed a total of 22 cells.

yosys> opt_muxtree

5.9.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \picorv32_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/4 on $pmux $flatten\rv32_soc/$procmux$1532.
    dead port 2/5 on $pmux $flatten\rv32_soc/$procmux$1996.
    dead port 1/3 on $pmux $flatten\rv32_soc/$procmux$2202.
Removed 3 multiplexer ports.
<suppressed ~135 debug messages>

yosys> opt_reduce

5.9.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \picorv32_top.
    New input vector for $reduce_or cell $auto$opt_reduce.cc:131:opt_pmux$3754: { \rv32_soc/cpu_state [6:4] \rv32_soc/cpu_state [2:0] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:131:opt_pmux$3752: \rv32_soc/cpu_state [5:0]
    New input vector for $reduce_or cell $auto$opt_reduce.cc:131:opt_pmux$3750: { \rv32_soc/cpu_state [6] \rv32_soc/cpu_state [4:0] }
  Optimizing cells in module \picorv32_top.
Performed a total of 3 changes.

yosys> opt_merge

5.9.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32_top'.
Removed a total of 0 cells.

yosys> opt_dff

5.9.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\rv32_soc/$procdff$3745 ($dff) from module picorv32_top (D = \mem_rdata, Q = \rv32_soc/mem_rdata_q).
Adding EN signal on $flatten\rv32_soc/$procdff$3740 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$0\mem_state[1:0], Q = \rv32_soc/mem_state).
Adding EN signal on $flatten\rv32_soc/$procdff$3739 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$procmux$3280_Y, Q = \rv32_soc/mem_wstrb).
Adding EN signal on $flatten\rv32_soc/$procdff$3738 ($dff) from module picorv32_top (D = \rv32_soc/mem_la_wdata, Q = \rv32_soc/mem_wdata).
Adding EN signal on $flatten\rv32_soc/$procdff$3737 ($dff) from module picorv32_top (D = \mem_la_addr, Q = \rv32_soc/mem_addr).
Adding EN signal on $flatten\rv32_soc/$procdff$3735 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$0\mem_valid[0:0], Q = \rv32_soc/mem_valid).
Adding SRST signal on $flatten\rv32_soc/$procdff$3719 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$reduce_or$inputs/picorv32_top.v:737$178_Y, Q = \rv32_soc/is_compare, rval = 1'0).
Adding EN signal on $flatten\rv32_soc/$procdff$3718 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$eq$inputs/picorv32_top.v:749$198_Y, Q = \rv32_soc/is_alu_reg_reg).
Adding EN signal on $flatten\rv32_soc/$procdff$3717 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$eq$inputs/picorv32_top.v:748$197_Y, Q = \rv32_soc/is_alu_reg_imm).
Adding SRST signal on $flatten\rv32_soc/$procdff$3715 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2654_Y, Q = \rv32_soc/is_beq_bne_blt_bge_bltu_bgeu, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4160 ($sdff) from module picorv32_top (D = $flatten\rv32_soc/$eq$inputs/picorv32_top.v:745$194_Y, Q = \rv32_soc/is_beq_bne_blt_bge_bltu_bgeu).
Adding SRST signal on $flatten\rv32_soc/$procdff$3712 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$reduce_or$inputs/picorv32_top.v:733$174_Y, Q = \rv32_soc/is_lui_auipc_jal_jalr_addi_add_sub, rval = 1'0).
Adding EN signal on $flatten\rv32_soc/$procdff$3711 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:961$430_Y, Q = \rv32_soc/is_sll_srl_sra).
Adding EN signal on $flatten\rv32_soc/$procdff$3710 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$eq$inputs/picorv32_top.v:747$196_Y, Q = \rv32_soc/is_sb_sh_sw).
Adding EN signal on $flatten\rv32_soc/$procdff$3709 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$logic_or$inputs/picorv32_top.v:953$419_Y, Q = \rv32_soc/is_jalr_addi_slti_sltiu_xori_ori_andi).
Adding EN signal on $flatten\rv32_soc/$procdff$3708 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:948$410_Y, Q = \rv32_soc/is_slli_srli_srai).
Adding EN signal on $flatten\rv32_soc/$procdff$3707 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$eq$inputs/picorv32_top.v:746$195_Y, Q = \rv32_soc/is_lb_lh_lw_lbu_lhu).
Adding EN signal on $flatten\rv32_soc/$procdff$3705 ($dff) from module picorv32_top (D = 1'0, Q = \rv32_soc/compressed_instr).
Adding EN signal on $flatten\rv32_soc/$procdff$3704 ($dff) from module picorv32_top (D = { \rv32_soc/mem_rdata_latched [31] \rv32_soc/mem_rdata_latched [31] \rv32_soc/mem_rdata_latched [31] \rv32_soc/mem_rdata_latched [31] \rv32_soc/mem_rdata_latched [31] \rv32_soc/mem_rdata_latched [31] \rv32_soc/mem_rdata_latched [31] \rv32_soc/mem_rdata_latched [31] \rv32_soc/mem_rdata_latched [31] \rv32_soc/mem_rdata_latched [31] \rv32_soc/mem_rdata_latched [31] \rv32_soc/mem_rdata_latched [31] \rv32_soc/mem_rdata_latched [19:12] \rv32_soc/mem_rdata_latched [20] \rv32_soc/mem_rdata_latched [30:21] 1'0 }, Q = \rv32_soc/decoded_imm_j).
Adding EN signal on $flatten\rv32_soc/$procdff$3703 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2700_Y, Q = \rv32_soc/decoded_imm).
Adding EN signal on $flatten\rv32_soc/$procdff$3702 ($dff) from module picorv32_top (D = \rv32_soc/mem_rdata_latched [24:20], Q = \rv32_soc/decoded_rs2).
Adding EN signal on $flatten\rv32_soc/$procdff$3701 ($dff) from module picorv32_top (D = \rv32_soc/mem_rdata_latched [19:15], Q = \rv32_soc/decoded_rs1).
Adding EN signal on $flatten\rv32_soc/$procdff$3700 ($dff) from module picorv32_top (D = \rv32_soc/mem_rdata_latched [11:7], Q = \rv32_soc/decoded_rd).
Adding EN signal on $flatten\rv32_soc/$procdff$3699 ($dff) from module picorv32_top (D = 1'0, Q = \rv32_soc/instr_timer).
Adding EN signal on $flatten\rv32_soc/$procdff$3698 ($dff) from module picorv32_top (D = 1'0, Q = \rv32_soc/instr_waitirq).
Adding EN signal on $flatten\rv32_soc/$procdff$3697 ($dff) from module picorv32_top (D = 1'0, Q = \rv32_soc/instr_maskirq).
Adding EN signal on $flatten\rv32_soc/$procdff$3696 ($dff) from module picorv32_top (D = 1'0, Q = \rv32_soc/instr_retirq).
Adding EN signal on $flatten\rv32_soc/$procdff$3695 ($dff) from module picorv32_top (D = 1'0, Q = \rv32_soc/instr_setq).
Adding EN signal on $flatten\rv32_soc/$procdff$3694 ($dff) from module picorv32_top (D = 1'0, Q = \rv32_soc/instr_getq).
Adding SRST signal on $flatten\rv32_soc/$procdff$3693 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2800_Y, Q = \rv32_soc/instr_fence, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4180 ($sdff) from module picorv32_top (D = $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:943$380_Y, Q = \rv32_soc/instr_fence).
Adding EN signal on $flatten\rv32_soc/$procdff$3691 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:940$367_Y, Q = \rv32_soc/instr_rdinstrh).
Adding EN signal on $flatten\rv32_soc/$procdff$3690 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:939$363_Y, Q = \rv32_soc/instr_rdinstr).
Adding EN signal on $flatten\rv32_soc/$procdff$3689 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:937$359_Y, Q = \rv32_soc/instr_rdcycleh).
Adding EN signal on $flatten\rv32_soc/$procdff$3688 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:935$351_Y, Q = \rv32_soc/instr_rdcycle).
Adding SRST signal on $flatten\rv32_soc/$procdff$3687 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2814_Y, Q = \rv32_soc/instr_and, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4186 ($sdff) from module picorv32_top (D = $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:934$343_Y, Q = \rv32_soc/instr_and).
Adding SRST signal on $flatten\rv32_soc/$procdff$3686 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2818_Y, Q = \rv32_soc/instr_or, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4188 ($sdff) from module picorv32_top (D = $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:933$339_Y, Q = \rv32_soc/instr_or).
Adding SRST signal on $flatten\rv32_soc/$procdff$3685 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2822_Y, Q = \rv32_soc/instr_sra, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4190 ($sdff) from module picorv32_top (D = $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:932$335_Y, Q = \rv32_soc/instr_sra).
Adding SRST signal on $flatten\rv32_soc/$procdff$3684 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2826_Y, Q = \rv32_soc/instr_srl, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4192 ($sdff) from module picorv32_top (D = $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:931$331_Y, Q = \rv32_soc/instr_srl).
Adding SRST signal on $flatten\rv32_soc/$procdff$3683 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2830_Y, Q = \rv32_soc/instr_xor, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4194 ($sdff) from module picorv32_top (D = $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:930$327_Y, Q = \rv32_soc/instr_xor).
Adding SRST signal on $flatten\rv32_soc/$procdff$3682 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2834_Y, Q = \rv32_soc/instr_sltu, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4196 ($sdff) from module picorv32_top (D = $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:929$323_Y, Q = \rv32_soc/instr_sltu).
Adding SRST signal on $flatten\rv32_soc/$procdff$3681 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2838_Y, Q = \rv32_soc/instr_slt, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4198 ($sdff) from module picorv32_top (D = $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:928$319_Y, Q = \rv32_soc/instr_slt).
Adding SRST signal on $flatten\rv32_soc/$procdff$3680 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2842_Y, Q = \rv32_soc/instr_sll, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4200 ($sdff) from module picorv32_top (D = $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:927$315_Y, Q = \rv32_soc/instr_sll).
Adding SRST signal on $flatten\rv32_soc/$procdff$3679 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2846_Y, Q = \rv32_soc/instr_sub, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4202 ($sdff) from module picorv32_top (D = $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:926$311_Y, Q = \rv32_soc/instr_sub).
Adding SRST signal on $flatten\rv32_soc/$procdff$3678 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2850_Y, Q = \rv32_soc/instr_add, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4204 ($sdff) from module picorv32_top (D = $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:925$307_Y, Q = \rv32_soc/instr_add).
Adding EN signal on $flatten\rv32_soc/$procdff$3677 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:924$303_Y, Q = \rv32_soc/instr_srai).
Adding EN signal on $flatten\rv32_soc/$procdff$3676 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:923$299_Y, Q = \rv32_soc/instr_srli).
Adding EN signal on $flatten\rv32_soc/$procdff$3675 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:922$295_Y, Q = \rv32_soc/instr_slli).
Adding SRST signal on $flatten\rv32_soc/$procdff$3674 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2860_Y, Q = \rv32_soc/instr_andi, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4209 ($sdff) from module picorv32_top (D = $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:921$291_Y, Q = \rv32_soc/instr_andi).
Adding SRST signal on $flatten\rv32_soc/$procdff$3673 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2864_Y, Q = \rv32_soc/instr_ori, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4211 ($sdff) from module picorv32_top (D = $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:920$289_Y, Q = \rv32_soc/instr_ori).
Adding SRST signal on $flatten\rv32_soc/$procdff$3672 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2868_Y, Q = \rv32_soc/instr_xori, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4213 ($sdff) from module picorv32_top (D = $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:919$287_Y, Q = \rv32_soc/instr_xori).
Adding SRST signal on $flatten\rv32_soc/$procdff$3671 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2872_Y, Q = \rv32_soc/instr_sltiu, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4215 ($sdff) from module picorv32_top (D = $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:918$285_Y, Q = \rv32_soc/instr_sltiu).
Adding SRST signal on $flatten\rv32_soc/$procdff$3670 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2876_Y, Q = \rv32_soc/instr_slti, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4217 ($sdff) from module picorv32_top (D = $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:917$283_Y, Q = \rv32_soc/instr_slti).
Adding SRST signal on $flatten\rv32_soc/$procdff$3669 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2880_Y, Q = \rv32_soc/instr_addi, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4219 ($sdff) from module picorv32_top (D = $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:916$281_Y, Q = \rv32_soc/instr_addi).
Adding EN signal on $flatten\rv32_soc/$procdff$3668 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:915$279_Y, Q = \rv32_soc/instr_sw).
Adding EN signal on $flatten\rv32_soc/$procdff$3667 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:914$277_Y, Q = \rv32_soc/instr_sh).
Adding EN signal on $flatten\rv32_soc/$procdff$3666 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:913$275_Y, Q = \rv32_soc/instr_sb).
Adding EN signal on $flatten\rv32_soc/$procdff$3665 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:912$273_Y, Q = \rv32_soc/instr_lhu).
Adding EN signal on $flatten\rv32_soc/$procdff$3664 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:911$271_Y, Q = \rv32_soc/instr_lbu).
Adding EN signal on $flatten\rv32_soc/$procdff$3663 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:910$269_Y, Q = \rv32_soc/instr_lw).
Adding EN signal on $flatten\rv32_soc/$procdff$3662 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:909$267_Y, Q = \rv32_soc/instr_lh).
Adding EN signal on $flatten\rv32_soc/$procdff$3661 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:908$265_Y, Q = \rv32_soc/instr_lb).
Adding SRST signal on $flatten\rv32_soc/$procdff$3660 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2900_Y, Q = \rv32_soc/instr_bgeu, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4229 ($sdff) from module picorv32_top (D = $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:907$263_Y, Q = \rv32_soc/instr_bgeu).
Adding SRST signal on $flatten\rv32_soc/$procdff$3659 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2904_Y, Q = \rv32_soc/instr_bltu, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4231 ($sdff) from module picorv32_top (D = $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:906$261_Y, Q = \rv32_soc/instr_bltu).
Adding SRST signal on $flatten\rv32_soc/$procdff$3658 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2908_Y, Q = \rv32_soc/instr_bge, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4233 ($sdff) from module picorv32_top (D = $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:905$259_Y, Q = \rv32_soc/instr_bge).
Adding SRST signal on $flatten\rv32_soc/$procdff$3657 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2912_Y, Q = \rv32_soc/instr_blt, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4235 ($sdff) from module picorv32_top (D = $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:904$257_Y, Q = \rv32_soc/instr_blt).
Adding SRST signal on $flatten\rv32_soc/$procdff$3656 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2916_Y, Q = \rv32_soc/instr_bne, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4237 ($sdff) from module picorv32_top (D = $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:903$255_Y, Q = \rv32_soc/instr_bne).
Adding SRST signal on $flatten\rv32_soc/$procdff$3655 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2920_Y, Q = \rv32_soc/instr_beq, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4239 ($sdff) from module picorv32_top (D = $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:902$253_Y, Q = \rv32_soc/instr_beq).
Adding EN signal on $flatten\rv32_soc/$procdff$3654 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:742$185_Y, Q = \rv32_soc/instr_jalr).
Adding EN signal on $flatten\rv32_soc/$procdff$3653 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$eq$inputs/picorv32_top.v:741$182_Y, Q = \rv32_soc/instr_jal).
Adding EN signal on $flatten\rv32_soc/$procdff$3652 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$eq$inputs/picorv32_top.v:740$181_Y, Q = \rv32_soc/instr_auipc).
Adding EN signal on $flatten\rv32_soc/$procdff$3651 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$eq$inputs/picorv32_top.v:739$180_Y, Q = \rv32_soc/instr_lui).
Adding EN signal on $flatten\rv32_soc/$procdff$3650 ($dff) from module picorv32_top (D = 32'x, Q = \rv32_soc/pcpi_insn).
Adding EN signal on $flatten\rv32_soc/$procdff$3637 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$procmux$1578_Y, Q = \rv32_soc/latched_rd).
Adding SRST signal on $flatten\rv32_soc/$procdff$3636 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$procmux$1604_Y, Q = \rv32_soc/latched_is_lb, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4253 ($sdff) from module picorv32_top (D = $flatten\rv32_soc/$procmux$1604_Y, Q = \rv32_soc/latched_is_lb).
Adding SRST signal on $flatten\rv32_soc/$procdff$3635 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$procmux$1617_Y, Q = \rv32_soc/latched_is_lh, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4263 ($sdff) from module picorv32_top (D = $flatten\rv32_soc/$procmux$1617_Y, Q = \rv32_soc/latched_is_lh).
Adding SRST signal on $flatten\rv32_soc/$procdff$3634 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$procmux$1630_Y, Q = \rv32_soc/latched_is_lu, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4273 ($sdff) from module picorv32_top (D = $flatten\rv32_soc/$procmux$1630_Y, Q = \rv32_soc/latched_is_lu).
Adding EN signal on $flatten\rv32_soc/$procdff$3632 ($dff) from module picorv32_top (D = \rv32_soc/compressed_instr, Q = \rv32_soc/latched_compr).
Adding SRST signal on $flatten\rv32_soc/$procdff$3631 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$procmux$1675_Y, Q = \rv32_soc/latched_branch, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4286 ($sdff) from module picorv32_top (D = $flatten\rv32_soc/$procmux$1675_Y, Q = \rv32_soc/latched_branch).
Adding SRST signal on $flatten\rv32_soc/$procdff$3630 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$procmux$1711_Y, Q = \rv32_soc/latched_stalu, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4290 ($sdff) from module picorv32_top (D = $flatten\rv32_soc/$procmux$1711_Y, Q = \rv32_soc/latched_stalu).
Adding SRST signal on $flatten\rv32_soc/$procdff$3629 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$procmux$1718_Y, Q = \rv32_soc/latched_store, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4298 ($sdff) from module picorv32_top (D = $flatten\rv32_soc/$procmux$1718_Y, Q = \rv32_soc/latched_store).
Adding SRST signal on $flatten\rv32_soc/$procdff$3618 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$procmux$1342_Y, Q = \rv32_soc/decoder_pseudo_trigger, rval = 1'0).
Adding SRST signal on $flatten\rv32_soc/$procdff$3615 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$procmux$1982_Y, Q = \rv32_soc/mem_do_wdata, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$4309 ($sdff) from module picorv32_top (D = 1'0, Q = \rv32_soc/mem_do_wdata).
Adding SRST signal on $flatten\rv32_soc/$procdff$3614 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$procmux$1986_Y, Q = \rv32_soc/mem_do_rdata, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$4311 ($sdff) from module picorv32_top (D = 1'0, Q = \rv32_soc/mem_do_rdata).
Adding SRST signal on $flatten\rv32_soc/$procdff$3613 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2057_Y, Q = \rv32_soc/mem_do_rinst, rval = 1'1).
Adding EN signal on $auto$ff.cc:266:slice$4313 ($sdff) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2057_Y, Q = \rv32_soc/mem_do_rinst).
Adding SRST signal on $flatten\rv32_soc/$procdff$3612 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2082_Y, Q = \rv32_soc/mem_do_prefetch, rval = 1'0).
Adding EN signal on $auto$ff.cc:266:slice$4327 ($sdff) from module picorv32_top (D = $flatten\rv32_soc/$logic_and$inputs/picorv32_top.v:1322$570_Y, Q = \rv32_soc/mem_do_prefetch).
Adding EN signal on $flatten\rv32_soc/$procdff$3603 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2205_Y, Q = \rv32_soc/reg_op2).
Adding EN signal on $flatten\rv32_soc/$procdff$3602 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2228_Y [31], Q = \rv32_soc/reg_op1 [31]).
Adding EN signal on $flatten\rv32_soc/$procdff$3602 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2228_Y [30:0], Q = \rv32_soc/reg_op1 [30:0]).
Adding SRST signal on $flatten\rv32_soc/$procdff$3601 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2292_Y, Q = \rv32_soc/reg_next_pc, rval = 0).
Adding EN signal on $auto$ff.cc:266:slice$4378 ($sdff) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2281_Y, Q = \rv32_soc/reg_next_pc).
Adding SRST signal on $flatten\rv32_soc/$procdff$3600 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2304_Y, Q = \rv32_soc/reg_pc, rval = 0).
Adding EN signal on $auto$ff.cc:266:slice$4380 ($sdff) from module picorv32_top (D = $flatten\rv32_soc/$3\current_pc[31:0], Q = \rv32_soc/reg_pc).
Adding SRST signal on $flatten\rv32_soc/$procdff$3599 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2324_Y, Q = \rv32_soc/count_instr, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$4382 ($sdff) from module picorv32_top (D = $flatten\rv32_soc/$add$inputs/picorv32_top.v:1313$566_Y, Q = \rv32_soc/count_instr).
Adding SRST signal on $flatten\rv32_soc/$procdff$3598 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$add$inputs/picorv32_top.v:1195$513_Y, Q = \rv32_soc/count_cycle, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $flatten\rv32_soc/$procdff$3595 ($dff) from module picorv32_top (D = 0, Q = \rv32_soc/eoi).
Adding EN signal on $flatten\rv32_soc/$procdff$3594 ($dff) from module picorv32_top (D = 1'0, Q = \rv32_soc/pcpi_valid).
Adding SRST signal on $flatten\rv32_soc/$procdff$3593 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$procmux$1560_Y, Q = \rv32_soc/trap, rval = 1'0).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$4388 ($dffe) from module picorv32_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$4387 ($dffe) from module picorv32_top.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$4387 ($dffe) from module picorv32_top.
Setting constant 0-bit at position 2 on $auto$ff.cc:266:slice$4387 ($dffe) from module picorv32_top.
Setting constant 0-bit at position 3 on $auto$ff.cc:266:slice$4387 ($dffe) from module picorv32_top.
Setting constant 0-bit at position 4 on $auto$ff.cc:266:slice$4387 ($dffe) from module picorv32_top.
Setting constant 0-bit at position 5 on $auto$ff.cc:266:slice$4387 ($dffe) from module picorv32_top.
Setting constant 0-bit at position 6 on $auto$ff.cc:266:slice$4387 ($dffe) from module picorv32_top.
Setting constant 0-bit at position 7 on $auto$ff.cc:266:slice$4387 ($dffe) from module picorv32_top.
Setting constant 0-bit at position 8 on $auto$ff.cc:266:slice$4387 ($dffe) from module picorv32_top.
Setting constant 0-bit at position 9 on $auto$ff.cc:266:slice$4387 ($dffe) from module picorv32_top.
Setting constant 0-bit at position 10 on $auto$ff.cc:266:slice$4387 ($dffe) from module picorv32_top.
Setting constant 0-bit at position 11 on $auto$ff.cc:266:slice$4387 ($dffe) from module picorv32_top.
Setting constant 0-bit at position 12 on $auto$ff.cc:266:slice$4387 ($dffe) from module picorv32_top.
Setting constant 0-bit at position 13 on $auto$ff.cc:266:slice$4387 ($dffe) from module picorv32_top.
Setting constant 0-bit at position 14 on $auto$ff.cc:266:slice$4387 ($dffe) from module picorv32_top.
Setting constant 0-bit at position 15 on $auto$ff.cc:266:slice$4387 ($dffe) from module picorv32_top.
Setting constant 0-bit at position 16 on $auto$ff.cc:266:slice$4387 ($dffe) from module picorv32_top.
Setting constant 0-bit at position 17 on $auto$ff.cc:266:slice$4387 ($dffe) from module picorv32_top.
Setting constant 0-bit at position 18 on $auto$ff.cc:266:slice$4387 ($dffe) from module picorv32_top.
Setting constant 0-bit at position 19 on $auto$ff.cc:266:slice$4387 ($dffe) from module picorv32_top.
Setting constant 0-bit at position 20 on $auto$ff.cc:266:slice$4387 ($dffe) from module picorv32_top.
Setting constant 0-bit at position 21 on $auto$ff.cc:266:slice$4387 ($dffe) from module picorv32_top.
Setting constant 0-bit at position 22 on $auto$ff.cc:266:slice$4387 ($dffe) from module picorv32_top.
Setting constant 0-bit at position 23 on $auto$ff.cc:266:slice$4387 ($dffe) from module picorv32_top.
Setting constant 0-bit at position 24 on $auto$ff.cc:266:slice$4387 ($dffe) from module picorv32_top.
Setting constant 0-bit at position 25 on $auto$ff.cc:266:slice$4387 ($dffe) from module picorv32_top.
Setting constant 0-bit at position 26 on $auto$ff.cc:266:slice$4387 ($dffe) from module picorv32_top.
Setting constant 0-bit at position 27 on $auto$ff.cc:266:slice$4387 ($dffe) from module picorv32_top.
Setting constant 0-bit at position 28 on $auto$ff.cc:266:slice$4387 ($dffe) from module picorv32_top.
Setting constant 0-bit at position 29 on $auto$ff.cc:266:slice$4387 ($dffe) from module picorv32_top.
Setting constant 0-bit at position 30 on $auto$ff.cc:266:slice$4387 ($dffe) from module picorv32_top.
Setting constant 0-bit at position 31 on $auto$ff.cc:266:slice$4387 ($dffe) from module picorv32_top.
Setting constant 1-bit at position 0 on $auto$ff.cc:266:slice$4245 ($dffe) from module picorv32_top.
Setting constant 1-bit at position 1 on $auto$ff.cc:266:slice$4245 ($dffe) from module picorv32_top.
Setting constant 1-bit at position 2 on $auto$ff.cc:266:slice$4245 ($dffe) from module picorv32_top.
Setting constant 1-bit at position 3 on $auto$ff.cc:266:slice$4245 ($dffe) from module picorv32_top.
Setting constant 1-bit at position 4 on $auto$ff.cc:266:slice$4245 ($dffe) from module picorv32_top.
Setting constant 1-bit at position 5 on $auto$ff.cc:266:slice$4245 ($dffe) from module picorv32_top.
Setting constant 1-bit at position 6 on $auto$ff.cc:266:slice$4245 ($dffe) from module picorv32_top.
Setting constant 1-bit at position 7 on $auto$ff.cc:266:slice$4245 ($dffe) from module picorv32_top.
Setting constant 1-bit at position 8 on $auto$ff.cc:266:slice$4245 ($dffe) from module picorv32_top.
Setting constant 1-bit at position 9 on $auto$ff.cc:266:slice$4245 ($dffe) from module picorv32_top.
Setting constant 1-bit at position 10 on $auto$ff.cc:266:slice$4245 ($dffe) from module picorv32_top.
Setting constant 1-bit at position 11 on $auto$ff.cc:266:slice$4245 ($dffe) from module picorv32_top.
Setting constant 1-bit at position 12 on $auto$ff.cc:266:slice$4245 ($dffe) from module picorv32_top.
Setting constant 1-bit at position 13 on $auto$ff.cc:266:slice$4245 ($dffe) from module picorv32_top.
Setting constant 1-bit at position 14 on $auto$ff.cc:266:slice$4245 ($dffe) from module picorv32_top.
Setting constant 1-bit at position 15 on $auto$ff.cc:266:slice$4245 ($dffe) from module picorv32_top.
Setting constant 1-bit at position 16 on $auto$ff.cc:266:slice$4245 ($dffe) from module picorv32_top.
Setting constant 1-bit at position 17 on $auto$ff.cc:266:slice$4245 ($dffe) from module picorv32_top.
Setting constant 1-bit at position 18 on $auto$ff.cc:266:slice$4245 ($dffe) from module picorv32_top.
Setting constant 1-bit at position 19 on $auto$ff.cc:266:slice$4245 ($dffe) from module picorv32_top.
Setting constant 1-bit at position 20 on $auto$ff.cc:266:slice$4245 ($dffe) from module picorv32_top.
Setting constant 1-bit at position 21 on $auto$ff.cc:266:slice$4245 ($dffe) from module picorv32_top.
Setting constant 1-bit at position 22 on $auto$ff.cc:266:slice$4245 ($dffe) from module picorv32_top.
Setting constant 1-bit at position 23 on $auto$ff.cc:266:slice$4245 ($dffe) from module picorv32_top.
Setting constant 1-bit at position 24 on $auto$ff.cc:266:slice$4245 ($dffe) from module picorv32_top.
Setting constant 1-bit at position 25 on $auto$ff.cc:266:slice$4245 ($dffe) from module picorv32_top.
Setting constant 1-bit at position 26 on $auto$ff.cc:266:slice$4245 ($dffe) from module picorv32_top.
Setting constant 1-bit at position 27 on $auto$ff.cc:266:slice$4245 ($dffe) from module picorv32_top.
Setting constant 1-bit at position 28 on $auto$ff.cc:266:slice$4245 ($dffe) from module picorv32_top.
Setting constant 1-bit at position 29 on $auto$ff.cc:266:slice$4245 ($dffe) from module picorv32_top.
Setting constant 1-bit at position 30 on $auto$ff.cc:266:slice$4245 ($dffe) from module picorv32_top.
Setting constant 1-bit at position 31 on $auto$ff.cc:266:slice$4245 ($dffe) from module picorv32_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$4179 ($dffe) from module picorv32_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$4178 ($dffe) from module picorv32_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$4177 ($dffe) from module picorv32_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$4176 ($dffe) from module picorv32_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$4175 ($dffe) from module picorv32_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$4174 ($dffe) from module picorv32_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$4169 ($dffe) from module picorv32_top.
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$4168 ($dffe) from module picorv32_top.

yosys> opt_clean

5.9.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32_top..
Removed 150 unused cells and 172 unused wires.
<suppressed ~151 debug messages>

yosys> opt_expr

5.9.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32_top.
<suppressed ~15 debug messages>

5.9.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

5.9.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \picorv32_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~39 debug messages>

yosys> opt_reduce

5.9.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \picorv32_top.
Performed a total of 0 changes.

yosys> opt_merge

5.9.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32_top'.
<suppressed ~69 debug messages>
Removed a total of 23 cells.

yosys> opt_dff

5.9.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$4283 ($dffe) from module picorv32_top.

yosys> opt_clean

5.9.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32_top..
Removed 1 unused cells and 27 unused wires.
<suppressed ~2 debug messages>

yosys> opt_expr

5.9.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32_top.
<suppressed ~1 debug messages>

5.9.16. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

5.9.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \picorv32_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~38 debug messages>

yosys> opt_reduce

5.9.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \picorv32_top.
Performed a total of 0 changes.

yosys> opt_merge

5.9.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32_top'.
Removed a total of 0 cells.

yosys> opt_dff

5.9.20. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

5.9.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32_top..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

5.9.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32_top.

5.9.23. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

5.9.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \picorv32_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~38 debug messages>

yosys> opt_reduce

5.9.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \picorv32_top.
Performed a total of 0 changes.

yosys> opt_merge

5.9.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32_top'.
Removed a total of 0 cells.

yosys> opt_dff

5.9.27. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

5.9.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32_top..

yosys> opt_expr

5.9.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32_top.

5.9.30. Finished OPT passes. (There is nothing left to do.)

yosys> wreduce

5.10. Executing WREDUCE pass (reducing word size of cells).
Removed top 2 bits (of 3) from port B of cell picorv32_top.$auto$opt_dff.cc:195:make_patterns_logic$4146 ($ne).
Removed top 1 bits (of 5) from port B of cell picorv32_top.$auto$fsm_map.cc:77:implement_pattern_cache$4072 ($eq).
Removed top 3 bits (of 4) from port B of cell picorv32_top.$auto$fsm_map.cc:77:implement_pattern_cache$4083 ($eq).
Removed top 2 bits (of 7) from port B of cell picorv32_top.$auto$fsm_map.cc:77:implement_pattern_cache$4087 ($eq).
Removed top 1 bits (of 5) from port B of cell picorv32_top.$auto$fsm_map.cc:77:implement_pattern_cache$4054 ($eq).
Removed top 2 bits (of 3) from port B of cell picorv32_top.$auto$fsm_map.cc:77:implement_pattern_cache$3814 ($eq).
Removed top 1 bits (of 5) from port B of cell picorv32_top.$auto$fsm_map.cc:77:implement_pattern_cache$4033 ($eq).
Removed top 1 bits (of 4) from port B of cell picorv32_top.$auto$opt_dff.cc:195:make_patterns_logic$4128 ($ne).
Removed top 2 bits (of 3) from port B of cell picorv32_top.$auto$opt_dff.cc:195:make_patterns_logic$4126 ($ne).
Removed top 1 bits (of 5) from port B of cell picorv32_top.$auto$fsm_map.cc:77:implement_pattern_cache$4019 ($eq).
Removed top 2 bits (of 3) from port B of cell picorv32_top.$auto$opt_dff.cc:195:make_patterns_logic$4124 ($ne).
Removed top 2 bits (of 3) from port B of cell picorv32_top.$auto$opt_dff.cc:195:make_patterns_logic$4122 ($ne).
Removed top 3 bits (of 4) from port B of cell picorv32_top.$auto$fsm_map.cc:77:implement_pattern_cache$3990 ($eq).
Removed top 1 bits (of 6) from port B of cell picorv32_top.$auto$fsm_map.cc:77:implement_pattern_cache$3978 ($eq).
Removed top 3 bits (of 9) from port B of cell picorv32_top.$auto$fsm_map.cc:77:implement_pattern_cache$3969 ($eq).
Removed top 1 bits (of 5) from port B of cell picorv32_top.$auto$fsm_map.cc:77:implement_pattern_cache$4109 ($eq).
Removed top 4 bits (of 7) from port B of cell picorv32_top.$auto$fsm_map.cc:77:implement_pattern_cache$4105 ($eq).
Removed top 1 bits (of 3) from port B of cell picorv32_top.$auto$fsm_map.cc:77:implement_pattern_cache$4101 ($eq).
Removed top 1 bits (of 3) from port B of cell picorv32_top.$auto$fsm_map.cc:77:implement_pattern_cache$4093 ($eq).
Removed top 1 bits (of 5) from port B of cell picorv32_top.$auto$fsm_map.cc:77:implement_pattern_cache$4091 ($eq).
Removed top 3 bits (of 11) from port B of cell picorv32_top.$auto$fsm_map.cc:77:implement_pattern_cache$3957 ($eq).
Removed top 3 bits (of 11) from port B of cell picorv32_top.$auto$fsm_map.cc:77:implement_pattern_cache$3928 ($eq).
Removed top 1 bits (of 6) from port B of cell picorv32_top.$auto$fsm_map.cc:77:implement_pattern_cache$3924 ($eq).
Removed top 1 bits (of 5) from port B of cell picorv32_top.$auto$fsm_map.cc:77:implement_pattern_cache$3915 ($eq).
Removed top 3 bits (of 9) from port B of cell picorv32_top.$auto$fsm_map.cc:77:implement_pattern_cache$3940 ($eq).
Removed top 9 bits (of 10) from port B of cell picorv32_top.$auto$fsm_map.cc:77:implement_pattern_cache$3911 ($eq).
Removed top 1 bits (of 7) from port B of cell picorv32_top.$auto$fsm_map.cc:77:implement_pattern_cache$3903 ($eq).
Removed top 7 bits (of 12) from port B of cell picorv32_top.$auto$fsm_map.cc:77:implement_pattern_cache$3899 ($eq).
Removed top 1 bits (of 5) from port B of cell picorv32_top.$auto$fsm_map.cc:77:implement_pattern_cache$3894 ($eq).
Removed top 1 bits (of 7) from port B of cell picorv32_top.$auto$fsm_map.cc:77:implement_pattern_cache$3890 ($eq).
Removed top 3 bits (of 4) from port B of cell picorv32_top.$auto$fsm_map.cc:77:implement_pattern_cache$3881 ($eq).
Removed top 3 bits (of 4) from port B of cell picorv32_top.$auto$fsm_map.cc:77:implement_pattern_cache$3873 ($eq).
Removed top 3 bits (of 4) from port B of cell picorv32_top.$auto$fsm_map.cc:77:implement_pattern_cache$3936 ($eq).
Removed top 1 bits (of 4) from port B of cell picorv32_top.$auto$opt_dff.cc:195:make_patterns_logic$4344 ($ne).
Removed top 2 bits (of 4) from port B of cell picorv32_top.$auto$opt_dff.cc:195:make_patterns_logic$4342 ($ne).
Removed top 1 bits (of 6) from port B of cell picorv32_top.$auto$opt_dff.cc:195:make_patterns_logic$4340 ($ne).
Removed top 1 bits (of 2) from port B of cell picorv32_top.$auto$opt_dff.cc:195:make_patterns_logic$4350 ($ne).
Removed top 1 bits (of 2) from port B of cell picorv32_top.$flatten\rv32_soc/$procmux$3262_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell picorv32_top.$auto$fsm_map.cc:77:implement_pattern_cache$3851 ($eq).
Removed top 1 bits (of 2) from port B of cell picorv32_top.$auto$opt_dff.cc:195:make_patterns_logic$4303 ($ne).
Removed top 1 bits (of 6) from port B of cell picorv32_top.$auto$fsm_map.cc:77:implement_pattern_cache$3843 ($eq).
Removed top 2 bits (of 7) from port B of cell picorv32_top.$auto$opt_dff.cc:195:make_patterns_logic$4320 ($ne).
Removed top 1 bits (of 2) from port B of cell picorv32_top.$flatten\rv32_soc/$procmux$3549_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell picorv32_top.$auto$opt_dff.cc:195:make_patterns_logic$4324 ($ne).
Removed top 4 bits (of 6) from port B of cell picorv32_top.$auto$opt_dff.cc:195:make_patterns_logic$4338 ($ne).
Removed top 4 bits (of 5) from port B of cell picorv32_top.$auto$opt_dff.cc:195:make_patterns_logic$4318 ($ne).
Removed top 31 bits (of 32) from port B of cell picorv32_top.$flatten\rv32_soc/$sub$inputs/picorv32_top.v:1593$633 ($sub).
Removed top 27 bits (of 32) from port Y of cell picorv32_top.$flatten\rv32_soc/$sub$inputs/picorv32_top.v:1593$633 ($sub).
Removed top 29 bits (of 32) from port B of cell picorv32_top.$flatten\rv32_soc/$sub$inputs/picorv32_top.v:1585$626 ($sub).
Removed top 27 bits (of 32) from port Y of cell picorv32_top.$flatten\rv32_soc/$sub$inputs/picorv32_top.v:1585$626 ($sub).
Removed top 1 bits (of 2) from port B of cell picorv32_top.$auto$opt_dff.cc:195:make_patterns_logic$4258 ($ne).
Removed top 29 bits (of 32) from port B of cell picorv32_top.$flatten\rv32_soc/$ge$inputs/picorv32_top.v:1578$618 ($ge).
Removed top 31 bits (of 32) from port B of cell picorv32_top.$flatten\rv32_soc/$add$inputs/picorv32_top.v:1313$566 ($add).
Removed top 29 bits (of 32) from port B of cell picorv32_top.$flatten\rv32_soc/$add$inputs/picorv32_top.v:1309$565 ($add).
Removed top 31 bits (of 32) from port B of cell picorv32_top.$flatten\rv32_soc/$add$inputs/picorv32_top.v:1195$513 ($add).
Removed top 1 bits (of 2) from port B of cell picorv32_top.$auto$opt_dff.cc:195:make_patterns_logic$4250 ($ne).
Removed top 29 bits (of 32) from port B of cell picorv32_top.$flatten\rv32_soc/$add$inputs/picorv32_top.v:1135$478 ($add).
Removed top 3 bits (of 7) from port B of cell picorv32_top.$flatten\rv32_soc/$eq$inputs/picorv32_top.v:943$378 ($eq).
Removed top 1 bits (of 7) from port B of cell picorv32_top.$flatten\rv32_soc/$eq$inputs/picorv32_top.v:924$302 ($eq).
Removed top 1 bits (of 3) from port B of cell picorv32_top.$flatten\rv32_soc/$eq$inputs/picorv32_top.v:918$284 ($eq).
Removed top 1 bits (of 3) from port B of cell picorv32_top.$flatten\rv32_soc/$eq$inputs/picorv32_top.v:910$268 ($eq).
Removed top 2 bits (of 3) from port B of cell picorv32_top.$flatten\rv32_soc/$eq$inputs/picorv32_top.v:903$254 ($eq).
Removed top 1 bits (of 7) from port B of cell picorv32_top.$flatten\rv32_soc/$eq$inputs/picorv32_top.v:749$198 ($eq).
Removed top 2 bits (of 7) from port B of cell picorv32_top.$flatten\rv32_soc/$eq$inputs/picorv32_top.v:748$197 ($eq).
Removed top 1 bits (of 7) from port B of cell picorv32_top.$flatten\rv32_soc/$eq$inputs/picorv32_top.v:747$196 ($eq).
Removed top 5 bits (of 7) from port B of cell picorv32_top.$flatten\rv32_soc/$eq$inputs/picorv32_top.v:746$195 ($eq).
Removed top 2 bits (of 7) from port B of cell picorv32_top.$flatten\rv32_soc/$eq$inputs/picorv32_top.v:740$181 ($eq).
Removed top 1 bits (of 7) from port B of cell picorv32_top.$flatten\rv32_soc/$eq$inputs/picorv32_top.v:739$180 ($eq).
Removed top 30 bits (of 32) from mux cell picorv32_top.$flatten\rv32_soc/$ternary$inputs/picorv32_top.v:536$161 ($mux).
Removed top 11 bits (of 31) from FF cell picorv32_top.$auto$ff.cc:266:slice$4390 ($dffe).
Removed top 3 bits (of 4) from port A of cell picorv32_top.$flatten\rv32_soc/$shl$inputs/picorv32_top.v:346$102 ($shl).
Removed top 23 bits (of 32) from FF cell picorv32_top.$auto$ff.cc:266:slice$4137 ($dffe).
Removed top 27 bits (of 32) from wire picorv32_top.$flatten\rv32_soc/$sub$inputs/picorv32_top.v:1585$626_Y.
Removed top 27 bits (of 32) from wire picorv32_top.$flatten\rv32_soc/$sub$inputs/picorv32_top.v:1593$633_Y.
Removed top 23 bits (of 32) from wire picorv32_top.mem_addr.

yosys> peepopt

5.11. Executing PEEPOPT pass (run peephole optimizers).

yosys> opt_clean

5.12. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32_top..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

yosys> alumacc

5.13. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module picorv32_top:
  creating $macc model for $flatten\rv32_soc/$add$inputs/picorv32_top.v:1070$682 ($add).
  creating $macc model for $flatten\rv32_soc/$add$inputs/picorv32_top.v:1135$478 ($add).
  creating $macc model for $flatten\rv32_soc/$add$inputs/picorv32_top.v:1195$513 ($add).
  creating $macc model for $flatten\rv32_soc/$add$inputs/picorv32_top.v:1309$565 ($add).
  creating $macc model for $flatten\rv32_soc/$add$inputs/picorv32_top.v:1313$566 ($add).
  creating $macc model for $flatten\rv32_soc/$add$inputs/picorv32_top.v:1318$567 ($add).
  creating $macc model for $flatten\rv32_soc/$add$inputs/picorv32_top.v:1550$612 ($add).
  creating $macc model for $flatten\rv32_soc/$add$inputs/picorv32_top.v:1611$637 ($add).
  creating $macc model for $flatten\rv32_soc/$sub$inputs/picorv32_top.v:1070$681 ($sub).
  creating $macc model for $flatten\rv32_soc/$sub$inputs/picorv32_top.v:1585$626 ($sub).
  creating $macc model for $flatten\rv32_soc/$sub$inputs/picorv32_top.v:1593$633 ($sub).
  creating $alu model for $macc $flatten\rv32_soc/$sub$inputs/picorv32_top.v:1593$633.
  creating $alu model for $macc $flatten\rv32_soc/$sub$inputs/picorv32_top.v:1585$626.
  creating $alu model for $macc $flatten\rv32_soc/$sub$inputs/picorv32_top.v:1070$681.
  creating $alu model for $macc $flatten\rv32_soc/$add$inputs/picorv32_top.v:1611$637.
  creating $alu model for $macc $flatten\rv32_soc/$add$inputs/picorv32_top.v:1550$612.
  creating $alu model for $macc $flatten\rv32_soc/$add$inputs/picorv32_top.v:1318$567.
  creating $alu model for $macc $flatten\rv32_soc/$add$inputs/picorv32_top.v:1313$566.
  creating $alu model for $macc $flatten\rv32_soc/$add$inputs/picorv32_top.v:1309$565.
  creating $alu model for $macc $flatten\rv32_soc/$add$inputs/picorv32_top.v:1195$513.
  creating $alu model for $macc $flatten\rv32_soc/$add$inputs/picorv32_top.v:1135$478.
  creating $alu model for $macc $flatten\rv32_soc/$add$inputs/picorv32_top.v:1070$682.
  creating $alu model for $flatten\rv32_soc/$ge$inputs/picorv32_top.v:1578$618 ($ge): merged with $flatten\rv32_soc/$sub$inputs/picorv32_top.v:1585$626.
  creating $alu model for $flatten\rv32_soc/$lt$inputs/picorv32_top.v:1072$685 ($lt): new $alu
  creating $alu model for $flatten\rv32_soc/$lt$inputs/picorv32_top.v:1073$686 ($lt): merged with $flatten\rv32_soc/$sub$inputs/picorv32_top.v:1070$681.
  creating $alu model for $flatten\rv32_soc/$eq$inputs/picorv32_top.v:1071$684 ($eq): merged with $flatten\rv32_soc/$sub$inputs/picorv32_top.v:1070$681.
  creating $alu cell for $flatten\rv32_soc/$add$inputs/picorv32_top.v:1135$478: $auto$alumacc.cc:495:replace_alu$4395
  creating $alu cell for $flatten\rv32_soc/$add$inputs/picorv32_top.v:1195$513: $auto$alumacc.cc:495:replace_alu$4398
  creating $alu cell for $flatten\rv32_soc/$add$inputs/picorv32_top.v:1309$565: $auto$alumacc.cc:495:replace_alu$4401
  creating $alu cell for $flatten\rv32_soc/$add$inputs/picorv32_top.v:1313$566: $auto$alumacc.cc:495:replace_alu$4404
  creating $alu cell for $flatten\rv32_soc/$add$inputs/picorv32_top.v:1318$567: $auto$alumacc.cc:495:replace_alu$4407
  creating $alu cell for $flatten\rv32_soc/$add$inputs/picorv32_top.v:1550$612: $auto$alumacc.cc:495:replace_alu$4410
  creating $alu cell for $flatten\rv32_soc/$add$inputs/picorv32_top.v:1611$637: $auto$alumacc.cc:495:replace_alu$4413
  creating $alu cell for $flatten\rv32_soc/$lt$inputs/picorv32_top.v:1072$685: $auto$alumacc.cc:495:replace_alu$4416
  creating $alu cell for $flatten\rv32_soc/$add$inputs/picorv32_top.v:1070$682: $auto$alumacc.cc:495:replace_alu$4423
  creating $alu cell for $flatten\rv32_soc/$sub$inputs/picorv32_top.v:1070$681, $flatten\rv32_soc/$lt$inputs/picorv32_top.v:1073$686, $flatten\rv32_soc/$eq$inputs/picorv32_top.v:1071$684: $auto$alumacc.cc:495:replace_alu$4426
  creating $alu cell for $flatten\rv32_soc/$sub$inputs/picorv32_top.v:1585$626, $flatten\rv32_soc/$ge$inputs/picorv32_top.v:1578$618: $auto$alumacc.cc:495:replace_alu$4433
  creating $alu cell for $flatten\rv32_soc/$sub$inputs/picorv32_top.v:1593$633: $auto$alumacc.cc:495:replace_alu$4446
  created 12 $alu and 0 $macc cells.

yosys> share

5.14. Executing SHARE pass (SAT-based resource sharing).
Found 2 cells in module picorv32_top that may be considered for resource sharing.
  Analyzing resource sharing options for $flatten\rv32_soc/$memrd$\cpuregs$inputs/picorv32_top.v:1161$500 ($memrd):
    Found 2 activation_patterns using ctrl signal { $auto$opt_reduce.cc:137:opt_pmux$3761 $auto$opt_reduce.cc:137:opt_pmux$3757 $auto$opt_reduce.cc:137:opt_pmux$3769 \rv32_soc/is_slli_srli_srai $flatten\rv32_soc/$reduce_bool$inputs/picorv32_top.v:1161$501_Y \rv32_soc/cpu_state [2] \resetn }.
    Found 1 candidates: $flatten\rv32_soc/$memrd$\cpuregs$inputs/picorv32_top.v:1160$497
    Analyzing resource sharing with $flatten\rv32_soc/$memrd$\cpuregs$inputs/picorv32_top.v:1160$497 ($memrd):
      Found 1 activation_patterns using ctrl signal { $auto$opt_reduce.cc:137:opt_pmux$3771 \rv32_soc/is_lui_auipc_jal $flatten\rv32_soc/$reduce_bool$inputs/picorv32_top.v:1160$498_Y \rv32_soc/cpu_state [2] }.
      Activation pattern for cell $flatten\rv32_soc/$memrd$\cpuregs$inputs/picorv32_top.v:1161$500: { $auto$opt_reduce.cc:137:opt_pmux$3761 $auto$opt_reduce.cc:137:opt_pmux$3769 $flatten\rv32_soc/$reduce_bool$inputs/picorv32_top.v:1161$501_Y } = 3'001
      Activation pattern for cell $flatten\rv32_soc/$memrd$\cpuregs$inputs/picorv32_top.v:1161$500: { $auto$opt_reduce.cc:137:opt_pmux$3757 \rv32_soc/is_slli_srli_srai $flatten\rv32_soc/$reduce_bool$inputs/picorv32_top.v:1161$501_Y \rv32_soc/cpu_state [2] \resetn } = 5'00111
      Activation pattern for cell $flatten\rv32_soc/$memrd$\cpuregs$inputs/picorv32_top.v:1160$497: { $auto$opt_reduce.cc:137:opt_pmux$3771 \rv32_soc/is_lui_auipc_jal $flatten\rv32_soc/$reduce_bool$inputs/picorv32_top.v:1160$498_Y \rv32_soc/cpu_state [2] } = 4'0011
      Size of SAT problem: 9 cells, 145 variables, 335 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { $auto$opt_reduce.cc:137:opt_pmux$3761 $auto$opt_reduce.cc:137:opt_pmux$3757 $auto$opt_reduce.cc:137:opt_pmux$3771 $auto$opt_reduce.cc:137:opt_pmux$3769 \rv32_soc/is_lui_auipc_jal \rv32_soc/is_slli_srli_srai $flatten\rv32_soc/$reduce_bool$inputs/picorv32_top.v:1160$498_Y $flatten\rv32_soc/$reduce_bool$inputs/picorv32_top.v:1161$501_Y \rv32_soc/cpu_state [2] \resetn } = 10'0000001110
  Analyzing resource sharing options for $flatten\rv32_soc/$memrd$\cpuregs$inputs/picorv32_top.v:1160$497 ($memrd):
    Found 1 activation_patterns using ctrl signal { $auto$opt_reduce.cc:137:opt_pmux$3771 \rv32_soc/is_lui_auipc_jal $flatten\rv32_soc/$reduce_bool$inputs/picorv32_top.v:1160$498_Y \rv32_soc/cpu_state [2] }.
    No candidates found.

yosys> opt

5.15. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

5.15.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32_top.
<suppressed ~1 debug messages>

yosys> opt_merge -nomux

5.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

5.15.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \picorv32_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~38 debug messages>

yosys> opt_reduce

5.15.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \picorv32_top.
Performed a total of 0 changes.

yosys> opt_merge

5.15.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32_top'.
Removed a total of 0 cells.

yosys> opt_dff

5.15.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

5.15.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32_top..
Removed 0 unused cells and 5 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

5.15.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32_top.

5.15.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

5.15.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \picorv32_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~38 debug messages>

yosys> opt_reduce

5.15.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \picorv32_top.
Performed a total of 0 changes.

yosys> opt_merge

5.15.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32_top'.
Removed a total of 0 cells.

yosys> opt_dff

5.15.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

5.15.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32_top..

yosys> opt_expr

5.15.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32_top.

5.15.16. Finished OPT passes. (There is nothing left to do.)

yosys> memory -nomap

5.16. Executing MEMORY pass.

yosys> opt_mem

5.16.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

yosys> opt_mem_priority

5.16.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

yosys> opt_mem_feedback

5.16.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).
  Analyzing picorv32_top.rv32_soc/cpuregs write port 0.

yosys> memory_bmux2rom

5.16.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

yosys> memory_dff

5.16.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `\rv32_soc/cpuregs'[0] in module `\picorv32_top': no output FF found.
Checking read port `\rv32_soc/cpuregs'[1] in module `\picorv32_top': no output FF found.
Checking read port address `\rv32_soc/cpuregs'[0] in module `\picorv32_top': merged address FF to cell.
Checking read port address `\rv32_soc/cpuregs'[1] in module `\picorv32_top': merged address FF to cell.

yosys> opt_clean

5.16.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32_top..

yosys> memory_share

5.16.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
Consolidating read ports of memory picorv32_top.rv32_soc/cpuregs by address:

yosys> opt_mem_widen

5.16.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

yosys> opt_clean

5.16.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32_top..

yosys> memory_collect

5.16.10. Executing MEMORY_COLLECT pass (generating $mem cells).

yosys> opt_clean

5.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32_top..

yosys> synth -flatten -extra-map /venv/lib/python3.10/site-packages/siliconcompiler/tools/yosys/techmaps/lcu_kogge_stone.v -top picorv32_top -run fine:check

6. Executing SYNTH pass.

yosys> opt -fast -full

6.1. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

6.1.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32_top.
<suppressed ~115 debug messages>

yosys> opt_merge

6.1.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32_top'.
Removed a total of 0 cells.

yosys> opt_dff

6.1.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:266:slice$4116 ($dffe) from module picorv32_top (D = $flatten\rv32_soc/$procmux$3252_Y, Q = \rv32_soc/mem_state, rval = 2'00).
Adding SRST signal on $auto$ff.cc:266:slice$4142 ($dffe) from module picorv32_top (D = $flatten\rv32_soc/$procmux$3310_Y, Q = \rv32_soc/mem_valid, rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$4246 ($dffe) from module picorv32_top (D = \rv32_soc/decoded_rd, Q = \rv32_soc/latched_rd, rval = 5'00000).

yosys> opt_clean

6.1.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32_top..
Removed 15 unused cells and 61 unused wires.
<suppressed ~19 debug messages>

6.1.5. Rerunning OPT passes. (Removed registers in this run.)

yosys> opt_expr -full

6.1.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32_top.
<suppressed ~1 debug messages>

yosys> opt_merge

6.1.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32_top'.
Removed a total of 0 cells.

yosys> opt_dff

6.1.8. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\rv32_soc/$procdff$3605 ($dff) from module picorv32_top (D = $flatten\rv32_soc/$0\reg_sh[4:0] [1:0], Q = \rv32_soc/reg_sh [1:0]).

yosys> opt_clean

6.1.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32_top..

6.1.10. Rerunning OPT passes. (Removed registers in this run.)

yosys> opt_expr -full

6.1.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32_top.

yosys> opt_merge

6.1.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32_top'.
Removed a total of 0 cells.

yosys> opt_dff

6.1.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

6.1.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32_top..

6.1.15. Finished fast OPT passes.

yosys> memory_map

6.2. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory \rv32_soc/cpuregs in module \picorv32_top:
  created 32 $dff cells and 0 static cells of width 32.
Extracted addr FF from read port 0 of picorv32_top.rv32_soc/cpuregs: $\rv32_soc/cpuregs$rdreg[0]
Extracted addr FF from read port 1 of picorv32_top.rv32_soc/cpuregs: $\rv32_soc/cpuregs$rdreg[1]
  read interface: 2 $dff and 62 $mux cells.
  write interface: 32 write mux blocks.

yosys> opt -full

6.3. Executing OPT pass (performing simple optimizations).

yosys> opt_expr -full

6.3.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32_top.
<suppressed ~10 debug messages>

yosys> opt_merge -nomux

6.3.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

6.3.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \picorv32_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~59 debug messages>

yosys> opt_reduce -full

6.3.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \picorv32_top.
    Consolidated identical input bits for $pmux cell $flatten\rv32_soc/$procmux$1468:
      Old ports: A=\rv32_soc/mem_rdata_word, B={ \rv32_soc/mem_rdata_word [15] \rv32_soc/mem_rdata_word [15] \rv32_soc/mem_rdata_word [15] \rv32_soc/mem_rdata_word [15] \rv32_soc/mem_rdata_word [15] \rv32_soc/mem_rdata_word [15] \rv32_soc/mem_rdata_word [15] \rv32_soc/mem_rdata_word [15] \rv32_soc/mem_rdata_word [15] \rv32_soc/mem_rdata_word [15] \rv32_soc/mem_rdata_word [15] \rv32_soc/mem_rdata_word [15] \rv32_soc/mem_rdata_word [15] \rv32_soc/mem_rdata_word [15] \rv32_soc/mem_rdata_word [15] \rv32_soc/mem_rdata_word [15] \rv32_soc/mem_rdata_word [15:0] \rv32_soc/mem_rdata_word [7] \rv32_soc/mem_rdata_word [7] \rv32_soc/mem_rdata_word [7] \rv32_soc/mem_rdata_word [7] \rv32_soc/mem_rdata_word [7] \rv32_soc/mem_rdata_word [7] \rv32_soc/mem_rdata_word [7] \rv32_soc/mem_rdata_word [7] \rv32_soc/mem_rdata_word [7] \rv32_soc/mem_rdata_word [7] \rv32_soc/mem_rdata_word [7] \rv32_soc/mem_rdata_word [7] \rv32_soc/mem_rdata_word [7] \rv32_soc/mem_rdata_word [7] \rv32_soc/mem_rdata_word [7] \rv32_soc/mem_rdata_word [7] \rv32_soc/mem_rdata_word [7] \rv32_soc/mem_rdata_word [7] \rv32_soc/mem_rdata_word [7] \rv32_soc/mem_rdata_word [7] \rv32_soc/mem_rdata_word [7] \rv32_soc/mem_rdata_word [7] \rv32_soc/mem_rdata_word [7] \rv32_soc/mem_rdata_word [7] \rv32_soc/mem_rdata_word [7:0] }, Y=$flatten\rv32_soc/$procmux$1468_Y
      New ports: A=\rv32_soc/mem_rdata_word [31:8], B={ \rv32_soc/mem_rdata_word [15] \rv32_soc/mem_rdata_word [15] \rv32_soc/mem_rdata_word [15] \rv32_soc/mem_rdata_word [15] \rv32_soc/mem_rdata_word [15] \rv32_soc/mem_rdata_word [15] \rv32_soc/mem_rdata_word [15] \rv32_soc/mem_rdata_word [15] \rv32_soc/mem_rdata_word [15] \rv32_soc/mem_rdata_word [15] \rv32_soc/mem_rdata_word [15] \rv32_soc/mem_rdata_word [15] \rv32_soc/mem_rdata_word [15] \rv32_soc/mem_rdata_word [15] \rv32_soc/mem_rdata_word [15] \rv32_soc/mem_rdata_word [15] \rv32_soc/mem_rdata_word [15:7] \rv32_soc/mem_rdata_word [7] \rv32_soc/mem_rdata_word [7] \rv32_soc/mem_rdata_word [7] \rv32_soc/mem_rdata_word [7] \rv32_soc/mem_rdata_word [7] \rv32_soc/mem_rdata_word [7] \rv32_soc/mem_rdata_word [7] \rv32_soc/mem_rdata_word [7] \rv32_soc/mem_rdata_word [7] \rv32_soc/mem_rdata_word [7] \rv32_soc/mem_rdata_word [7] \rv32_soc/mem_rdata_word [7] \rv32_soc/mem_rdata_word [7] \rv32_soc/mem_rdata_word [7] \rv32_soc/mem_rdata_word [7] \rv32_soc/mem_rdata_word [7] \rv32_soc/mem_rdata_word [7] \rv32_soc/mem_rdata_word [7] \rv32_soc/mem_rdata_word [7] \rv32_soc/mem_rdata_word [7] \rv32_soc/mem_rdata_word [7] \rv32_soc/mem_rdata_word [7] \rv32_soc/mem_rdata_word [7] }, Y=$flatten\rv32_soc/$procmux$1468_Y [31:8]
      New connections: $flatten\rv32_soc/$procmux$1468_Y [7:0] = \rv32_soc/mem_rdata_word [7:0]
    New ctrl vector for $pmux cell $flatten\rv32_soc/$procmux$1718: { \rv32_soc/cpu_state [3] $auto$opt_reduce.cc:137:opt_pmux$4963 }
    New ctrl vector for $pmux cell $flatten\rv32_soc/$procmux$2228: { \rv32_soc/cpu_state [4] $auto$opt_reduce.cc:137:opt_pmux$4965 }
    Consolidated identical input bits for $mux cell $flatten\rv32_soc/$procmux$2279:
      Old ports: A={ $flatten\rv32_soc/$add$inputs/picorv32_top.v:1309$565_Y [31:2] $auto$alumacc.cc:511:replace_alu$4402 [1:0] }, B={ $flatten\rv32_soc/$add$inputs/picorv32_top.v:1318$567_Y [31:1] $auto$alumacc.cc:511:replace_alu$4402 [0] }, Y=$flatten\rv32_soc/$procmux$2279_Y
      New ports: A={ $flatten\rv32_soc/$add$inputs/picorv32_top.v:1309$565_Y [31:2] $auto$alumacc.cc:511:replace_alu$4402 [1] }, B=$flatten\rv32_soc/$add$inputs/picorv32_top.v:1318$567_Y [31:1], Y=$flatten\rv32_soc/$procmux$2279_Y [31:1]
      New connections: $flatten\rv32_soc/$procmux$2279_Y [0] = $auto$alumacc.cc:511:replace_alu$4402 [0]
    New ctrl vector for $pmux cell $flatten\rv32_soc/$procmux$3252: { $flatten\rv32_soc/$procmux$3262_CMP $auto$opt_reduce.cc:137:opt_pmux$4967 }
    Consolidated identical input bits for $pmux cell $flatten\rv32_soc/$procmux$3546:
      Old ports: A={ 24'000000000000000000000000 \mem_rdata [7:0] }, B={ 24'000000000000000000000000 \mem_rdata [15:8] 24'000000000000000000000000 \mem_rdata [23:16] 24'000000000000000000000000 \mem_rdata [31:24] }, Y=$flatten\rv32_soc/$3\mem_rdata_word[31:0]
      New ports: A=\mem_rdata [7:0], B={ \mem_rdata [15:8] \mem_rdata [23:16] \mem_rdata [31:24] }, Y=$flatten\rv32_soc/$3\mem_rdata_word[31:0] [7:0]
      New connections: $flatten\rv32_soc/$3\mem_rdata_word[31:0] [31:8] = 24'000000000000000000000000
    Consolidated identical input bits for $mux cell $flatten\rv32_soc/$procmux$3555:
      Old ports: A={ 16'0000000000000000 \mem_rdata [15:0] }, B={ 16'0000000000000000 \mem_rdata [31:16] }, Y=$flatten\rv32_soc/$2\mem_rdata_word[31:0]
      New ports: A=\mem_rdata [15:0], B=\mem_rdata [31:16], Y=$flatten\rv32_soc/$2\mem_rdata_word[31:0] [15:0]
      New connections: $flatten\rv32_soc/$2\mem_rdata_word[31:0] [31:16] = 16'0000000000000000
    Consolidated identical input bits for $pmux cell $flatten\rv32_soc/$procmux$3571:
      Old ports: A=\rv32_soc/reg_op2, B={ \rv32_soc/reg_op2 [15:0] \rv32_soc/reg_op2 [15:0] \rv32_soc/reg_op2 [7:0] \rv32_soc/reg_op2 [7:0] \rv32_soc/reg_op2 [7:0] \rv32_soc/reg_op2 [7:0] }, Y=\rv32_soc/mem_la_wdata
      New ports: A=\rv32_soc/reg_op2 [31:8], B={ \rv32_soc/reg_op2 [15:0] \rv32_soc/reg_op2 [15:0] \rv32_soc/reg_op2 [7:0] \rv32_soc/reg_op2 [7:0] }, Y=\rv32_soc/mem_la_wdata [31:8]
      New connections: \rv32_soc/mem_la_wdata [7:0] = \rv32_soc/reg_op2 [7:0]
    Consolidated identical input bits for $mux cell $flatten\rv32_soc/$ternary$inputs/picorv32_top.v:313$86:
      Old ports: A={ \rv32_soc/reg_op1 [31:2] 2'00 }, B={ \rv32_soc/next_pc [31:2] 2'00 }, Y=\mem_la_addr
      New ports: A=\rv32_soc/reg_op1 [31:2], B=\rv32_soc/next_pc [31:2], Y=\mem_la_addr [31:2]
      New connections: \mem_la_addr [1:0] = 2'00
    Consolidated identical input bits for $mux cell $flatten\rv32_soc/$ternary$inputs/picorv32_top.v:338$101:
      Old ports: A=4'0011, B=4'1100, Y=$flatten\rv32_soc/$ternary$inputs/picorv32_top.v:338$101_Y
      New ports: A=2'01, B=2'10, Y={ $flatten\rv32_soc/$ternary$inputs/picorv32_top.v:338$101_Y [2] $flatten\rv32_soc/$ternary$inputs/picorv32_top.v:338$101_Y [0] }
      New connections: { $flatten\rv32_soc/$ternary$inputs/picorv32_top.v:338$101_Y [3] $flatten\rv32_soc/$ternary$inputs/picorv32_top.v:338$101_Y [1] } = { $flatten\rv32_soc/$ternary$inputs/picorv32_top.v:338$101_Y [2] $flatten\rv32_soc/$ternary$inputs/picorv32_top.v:338$101_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\rv32_soc/$ternary$inputs/picorv32_top.v:536$161:
      Old ports: A=2'11, B=2'00, Y=$flatten\rv32_soc/$procmux$3258_Y
      New ports: A=1'1, B=1'0, Y=$flatten\rv32_soc/$procmux$3258_Y [0]
      New connections: $flatten\rv32_soc/$procmux$3258_Y [1] = $flatten\rv32_soc/$procmux$3258_Y [0]
    New input vector for $reduce_or cell $auto$opt_reduce.cc:131:opt_pmux$4962: { \rv32_soc/cpu_state [6] \rv32_soc/cpu_state [4] \rv32_soc/cpu_state [2] }
  Optimizing cells in module \picorv32_top.
    Consolidated identical input bits for $mux cell $flatten\rv32_soc/$procmux$2281:
      Old ports: A={ $flatten\rv32_soc/$3\current_pc[31:0] [31:2] $auto$alumacc.cc:511:replace_alu$4402 [1:0] }, B=$flatten\rv32_soc/$procmux$2279_Y, Y=$flatten\rv32_soc/$procmux$2281_Y
      New ports: A={ $flatten\rv32_soc/$3\current_pc[31:0] [31:2] $auto$alumacc.cc:511:replace_alu$4402 [1] }, B=$flatten\rv32_soc/$procmux$2279_Y [31:1], Y=$flatten\rv32_soc/$procmux$2281_Y [31:1]
      New connections: $flatten\rv32_soc/$procmux$2281_Y [0] = $auto$alumacc.cc:511:replace_alu$4402 [0]
  Optimizing cells in module \picorv32_top.
Performed a total of 13 changes.

yosys> opt_merge

6.3.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32_top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

yosys> opt_share

6.3.6. Executing OPT_SHARE pass.

yosys> opt_dff

6.3.7. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

6.3.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32_top..
Removed 0 unused cells and 102 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr -full

6.3.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32_top.
<suppressed ~1 debug messages>

6.3.10. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

6.3.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \picorv32_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~60 debug messages>

yosys> opt_reduce -full

6.3.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \picorv32_top.
Performed a total of 0 changes.

yosys> opt_merge

6.3.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32_top'.
Removed a total of 0 cells.

yosys> opt_share

6.3.14. Executing OPT_SHARE pass.

yosys> opt_dff

6.3.15. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $memory\rv32_soc/cpuregs[9]$4486 ($dff) from module picorv32_top (D = \rv32_soc/cpuregs_wrdata, Q = \rv32_soc/cpuregs[9]).
Adding EN signal on $memory\rv32_soc/cpuregs[8]$4484 ($dff) from module picorv32_top (D = \rv32_soc/cpuregs_wrdata, Q = \rv32_soc/cpuregs[8]).
Adding EN signal on $memory\rv32_soc/cpuregs[7]$4482 ($dff) from module picorv32_top (D = \rv32_soc/cpuregs_wrdata, Q = \rv32_soc/cpuregs[7]).
Adding EN signal on $memory\rv32_soc/cpuregs[6]$4480 ($dff) from module picorv32_top (D = \rv32_soc/cpuregs_wrdata, Q = \rv32_soc/cpuregs[6]).
Adding EN signal on $memory\rv32_soc/cpuregs[5]$4478 ($dff) from module picorv32_top (D = \rv32_soc/cpuregs_wrdata, Q = \rv32_soc/cpuregs[5]).
Adding EN signal on $memory\rv32_soc/cpuregs[4]$4476 ($dff) from module picorv32_top (D = \rv32_soc/cpuregs_wrdata, Q = \rv32_soc/cpuregs[4]).
Adding EN signal on $memory\rv32_soc/cpuregs[3]$4474 ($dff) from module picorv32_top (D = \rv32_soc/cpuregs_wrdata, Q = \rv32_soc/cpuregs[3]).
Adding EN signal on $memory\rv32_soc/cpuregs[31]$4530 ($dff) from module picorv32_top (D = \rv32_soc/cpuregs_wrdata, Q = \rv32_soc/cpuregs[31]).
Adding EN signal on $memory\rv32_soc/cpuregs[30]$4528 ($dff) from module picorv32_top (D = \rv32_soc/cpuregs_wrdata, Q = \rv32_soc/cpuregs[30]).
Adding EN signal on $memory\rv32_soc/cpuregs[2]$4472 ($dff) from module picorv32_top (D = \rv32_soc/cpuregs_wrdata, Q = \rv32_soc/cpuregs[2]).
Adding EN signal on $memory\rv32_soc/cpuregs[29]$4526 ($dff) from module picorv32_top (D = \rv32_soc/cpuregs_wrdata, Q = \rv32_soc/cpuregs[29]).
Adding EN signal on $memory\rv32_soc/cpuregs[28]$4524 ($dff) from module picorv32_top (D = \rv32_soc/cpuregs_wrdata, Q = \rv32_soc/cpuregs[28]).
Adding EN signal on $memory\rv32_soc/cpuregs[27]$4522 ($dff) from module picorv32_top (D = \rv32_soc/cpuregs_wrdata, Q = \rv32_soc/cpuregs[27]).
Adding EN signal on $memory\rv32_soc/cpuregs[26]$4520 ($dff) from module picorv32_top (D = \rv32_soc/cpuregs_wrdata, Q = \rv32_soc/cpuregs[26]).
Adding EN signal on $memory\rv32_soc/cpuregs[25]$4518 ($dff) from module picorv32_top (D = \rv32_soc/cpuregs_wrdata, Q = \rv32_soc/cpuregs[25]).
Adding EN signal on $memory\rv32_soc/cpuregs[24]$4516 ($dff) from module picorv32_top (D = \rv32_soc/cpuregs_wrdata, Q = \rv32_soc/cpuregs[24]).
Adding EN signal on $memory\rv32_soc/cpuregs[23]$4514 ($dff) from module picorv32_top (D = \rv32_soc/cpuregs_wrdata, Q = \rv32_soc/cpuregs[23]).
Adding EN signal on $memory\rv32_soc/cpuregs[22]$4512 ($dff) from module picorv32_top (D = \rv32_soc/cpuregs_wrdata, Q = \rv32_soc/cpuregs[22]).
Adding EN signal on $memory\rv32_soc/cpuregs[21]$4510 ($dff) from module picorv32_top (D = \rv32_soc/cpuregs_wrdata, Q = \rv32_soc/cpuregs[21]).
Adding EN signal on $memory\rv32_soc/cpuregs[20]$4508 ($dff) from module picorv32_top (D = \rv32_soc/cpuregs_wrdata, Q = \rv32_soc/cpuregs[20]).
Adding EN signal on $memory\rv32_soc/cpuregs[1]$4470 ($dff) from module picorv32_top (D = \rv32_soc/cpuregs_wrdata, Q = \rv32_soc/cpuregs[1]).
Adding EN signal on $memory\rv32_soc/cpuregs[19]$4506 ($dff) from module picorv32_top (D = \rv32_soc/cpuregs_wrdata, Q = \rv32_soc/cpuregs[19]).
Adding EN signal on $memory\rv32_soc/cpuregs[18]$4504 ($dff) from module picorv32_top (D = \rv32_soc/cpuregs_wrdata, Q = \rv32_soc/cpuregs[18]).
Adding EN signal on $memory\rv32_soc/cpuregs[17]$4502 ($dff) from module picorv32_top (D = \rv32_soc/cpuregs_wrdata, Q = \rv32_soc/cpuregs[17]).
Adding EN signal on $memory\rv32_soc/cpuregs[16]$4500 ($dff) from module picorv32_top (D = \rv32_soc/cpuregs_wrdata, Q = \rv32_soc/cpuregs[16]).
Adding EN signal on $memory\rv32_soc/cpuregs[15]$4498 ($dff) from module picorv32_top (D = \rv32_soc/cpuregs_wrdata, Q = \rv32_soc/cpuregs[15]).
Adding EN signal on $memory\rv32_soc/cpuregs[14]$4496 ($dff) from module picorv32_top (D = \rv32_soc/cpuregs_wrdata, Q = \rv32_soc/cpuregs[14]).
Adding EN signal on $memory\rv32_soc/cpuregs[13]$4494 ($dff) from module picorv32_top (D = \rv32_soc/cpuregs_wrdata, Q = \rv32_soc/cpuregs[13]).
Adding EN signal on $memory\rv32_soc/cpuregs[12]$4492 ($dff) from module picorv32_top (D = \rv32_soc/cpuregs_wrdata, Q = \rv32_soc/cpuregs[12]).
Adding EN signal on $memory\rv32_soc/cpuregs[11]$4490 ($dff) from module picorv32_top (D = \rv32_soc/cpuregs_wrdata, Q = \rv32_soc/cpuregs[11]).
Adding EN signal on $memory\rv32_soc/cpuregs[10]$4488 ($dff) from module picorv32_top (D = \rv32_soc/cpuregs_wrdata, Q = \rv32_soc/cpuregs[10]).
Adding EN signal on $memory\rv32_soc/cpuregs[0]$4468 ($dff) from module picorv32_top (D = \rv32_soc/cpuregs_wrdata, Q = \rv32_soc/cpuregs[0]).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$4137 ($dffe) from module picorv32_top.
Setting constant 0-bit at position 1 on $auto$ff.cc:266:slice$4137 ($dffe) from module picorv32_top.

yosys> opt_clean

6.3.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32_top..
Removed 32 unused cells and 32 unused wires.
<suppressed ~33 debug messages>

yosys> opt_expr -full

6.3.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32_top.

6.3.18. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

6.3.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \picorv32_top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~28 debug messages>

yosys> opt_reduce -full

6.3.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \picorv32_top.
Performed a total of 0 changes.

yosys> opt_merge

6.3.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32_top'.
Removed a total of 0 cells.

yosys> opt_share

6.3.22. Executing OPT_SHARE pass.

yosys> opt_dff

6.3.23. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

6.3.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32_top..

yosys> opt_expr -full

6.3.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32_top.

6.3.26. Finished OPT passes. (There is nothing left to do.)

yosys> techmap -map +/techmap.v -map /venv/lib/python3.10/site-packages/siliconcompiler/tools/yosys/techmaps/lcu_kogge_stone.v

6.4. Executing TECHMAP pass (map to technology primitives).

6.4.1. Executing Verilog-2005 frontend: /sc_tools/bin/../share/yosys/techmap.v
Parsing Verilog input from `/sc_tools/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

6.4.2. Executing Verilog-2005 frontend: /venv/lib/python3.10/site-packages/siliconcompiler/tools/yosys/techmaps/lcu_kogge_stone.v
Parsing Verilog input from `/venv/lib/python3.10/site-packages/siliconcompiler/tools/yosys/techmaps/lcu_kogge_stone.v' to AST representation.
Generating RTLIL representation for module `\_80_lcu_kogge_stone'.
Successfully finished Verilog frontend.

6.4.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $reduce_and.
Using template $paramod$44a13d10af618e7fbe7b9aad2f6151ffcee1e2fa\_90_alu for cells of type $alu.
Using template $paramod$59b03ae2620a41577de8da5f5c97b2919e82362b\_90_pmux for cells of type $pmux.
Using template $paramod$fbc7873bff55778c0b3173955b7e4bce1d9d6834\_90_alu for cells of type $alu.
Using template $paramod$2407ada40cc3dda6c6015be2b49b748cddb5a800\_90_pmux for cells of type $pmux.
Using template $paramod$b098bc6f249c0ac91c4d6e19d54b23c285914115\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $sdffe.
Using template $paramod$8fabc56b80a569262acfc42757a02ca0b8e91278\_90_pmux for cells of type $pmux.
Using template $paramod$c5c783b17ab1d780abfad8cfe6563a0a7b47a3b0\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $sdffce.
Using template $paramod$54d740639e1393b22262823179ff783ea9f17a35\_90_pmux for cells of type $pmux.
Using template $paramod$645fe0cc96ae5edb83bff90cc2c78f4a20ca3e3c\_90_pmux for cells of type $pmux.
Using template $paramod$cc1e387d9d5ac1d3f6e6bed180038d9c0ac48d0c\_90_pmux for cells of type $pmux.
Using template $paramod$521ce43182eecb9f60c72393a788160d2c356bf5\_90_pmux for cells of type $pmux.
Using template $paramod$constmap:66d421c313e4e958be776b99540ac2de3b59fdbc$paramod$77562a466236eb4a6d905351a0995599b75075cb\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$bf2533632d512eac76dd186c0da49367e29b8e98\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $logic_or.
Using template $paramod$b8c0a997bce700f23568a5ada79cc6781d1f5ca0\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $logic_and.
Using template $paramod$2653f68ddb8eab7b1907b4a20767b72a824a7a36\_90_alu for cells of type $alu.
Using template $paramod$dc04b7d98e503a7bab16fce2df70e6e2c5ca34d6\_90_alu for cells of type $alu.
Using template $paramod$ebf89ea36a793f0f77858f212141d47c833068ad\_90_alu for cells of type $alu.
Using template $paramod$cc80a4e89b0341cb117f5d28b0e7244620640141\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_80_lcu_kogge_stone\WIDTH=32'00000000000000000000000000100000 for cells of type $lcu.
Using template $paramod\_80_lcu_kogge_stone\WIDTH=32'00000000000000000000000000011110 for cells of type $lcu.
Using template $paramod\_80_lcu_kogge_stone\WIDTH=32'00000000000000000000000001000000 for cells of type $lcu.
Using template $paramod\_80_lcu_kogge_stone\WIDTH=32'00000000000000000000000000000101 for cells of type $lcu.
Using template $paramod\_80_lcu_kogge_stone\WIDTH=32'00000000000000000000000000000011 for cells of type $lcu.
Using template $paramod\_80_lcu_kogge_stone\WIDTH=32'00000000000000000000000000011111 for cells of type $lcu.
No more expansions possible.
<suppressed ~7517 debug messages>

yosys> opt -fast

6.5. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

6.5.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32_top.
<suppressed ~3232 debug messages>

yosys> opt_merge

6.5.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32_top'.
<suppressed ~4242 debug messages>
Removed a total of 1414 cells.

yosys> opt_dff

6.5.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:266:slice$10545 ($_SDFFE_PN0P_) from module picorv32_top (D = 1'0, Q = \rv32_soc/reg_next_pc [0]).
Setting constant 0-bit at position 0 on $auto$ff.cc:266:slice$23999 ($_SDFFE_PN0P_) from module picorv32_top.

yosys> opt_clean

6.5.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32_top..
Removed 328 unused cells and 4047 unused wires.
<suppressed ~329 debug messages>

6.5.5. Rerunning OPT passes. (Removed registers in this run.)

yosys> opt_expr

6.5.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32_top.
<suppressed ~15 debug messages>

yosys> opt_merge

6.5.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32_top'.
Removed a total of 0 cells.

yosys> opt_dff

6.5.8. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:266:slice$12338 ($_DFFE_PP_) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2700.Y_B [31], Q = \rv32_soc/decoded_imm [31], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$12337 ($_DFFE_PP_) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2700.Y_B [30], Q = \rv32_soc/decoded_imm [30], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$12336 ($_DFFE_PP_) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2700.Y_B [29], Q = \rv32_soc/decoded_imm [29], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$12335 ($_DFFE_PP_) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2700.Y_B [28], Q = \rv32_soc/decoded_imm [28], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$12334 ($_DFFE_PP_) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2700.Y_B [27], Q = \rv32_soc/decoded_imm [27], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$12333 ($_DFFE_PP_) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2700.Y_B [26], Q = \rv32_soc/decoded_imm [26], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$12332 ($_DFFE_PP_) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2700.Y_B [25], Q = \rv32_soc/decoded_imm [25], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$12331 ($_DFFE_PP_) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2700.Y_B [24], Q = \rv32_soc/decoded_imm [24], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$12330 ($_DFFE_PP_) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2700.Y_B [23], Q = \rv32_soc/decoded_imm [23], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$12329 ($_DFFE_PP_) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2700.Y_B [22], Q = \rv32_soc/decoded_imm [22], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$12328 ($_DFFE_PP_) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2700.Y_B [21], Q = \rv32_soc/decoded_imm [21], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$12327 ($_DFFE_PP_) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2700.Y_B [20], Q = \rv32_soc/decoded_imm [20], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$12326 ($_DFFE_PP_) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2700.Y_B [19], Q = \rv32_soc/decoded_imm [19], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$12325 ($_DFFE_PP_) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2700.Y_B [18], Q = \rv32_soc/decoded_imm [18], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$12324 ($_DFFE_PP_) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2700.Y_B [17], Q = \rv32_soc/decoded_imm [17], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$12323 ($_DFFE_PP_) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2700.Y_B [16], Q = \rv32_soc/decoded_imm [16], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$12322 ($_DFFE_PP_) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2700.Y_B [15], Q = \rv32_soc/decoded_imm [15], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$12321 ($_DFFE_PP_) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2700.Y_B [14], Q = \rv32_soc/decoded_imm [14], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$12320 ($_DFFE_PP_) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2700.Y_B [13], Q = \rv32_soc/decoded_imm [13], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$12319 ($_DFFE_PP_) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2700.Y_B [12], Q = \rv32_soc/decoded_imm [12], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$12318 ($_DFFE_PP_) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2700.Y_B [11], Q = \rv32_soc/decoded_imm [11], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$12317 ($_DFFE_PP_) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2700.Y_B [10], Q = \rv32_soc/decoded_imm [10], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$12316 ($_DFFE_PP_) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2700.Y_B [9], Q = \rv32_soc/decoded_imm [9], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$12315 ($_DFFE_PP_) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2700.Y_B [8], Q = \rv32_soc/decoded_imm [8], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$12314 ($_DFFE_PP_) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2700.Y_B [7], Q = \rv32_soc/decoded_imm [7], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$12313 ($_DFFE_PP_) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2700.Y_B [6], Q = \rv32_soc/decoded_imm [6], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$12312 ($_DFFE_PP_) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2700.Y_B [5], Q = \rv32_soc/decoded_imm [5], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$12311 ($_DFFE_PP_) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2700.Y_B [4], Q = \rv32_soc/decoded_imm [4], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$12310 ($_DFFE_PP_) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2700.Y_B [3], Q = \rv32_soc/decoded_imm [3], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$12309 ($_DFFE_PP_) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2700.Y_B [2], Q = \rv32_soc/decoded_imm [2], rval = 1'0).
Adding SRST signal on $auto$ff.cc:266:slice$12308 ($_DFFE_PP_) from module picorv32_top (D = $flatten\rv32_soc/$procmux$2700.Y_B [1], Q = \rv32_soc/decoded_imm [1], rval = 1'0).

yosys> opt_clean

6.5.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32_top..
Removed 35 unused cells and 14 unused wires.
<suppressed ~36 debug messages>

6.5.10. Rerunning OPT passes. (Removed registers in this run.)

yosys> opt_expr

6.5.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32_top.

yosys> opt_merge

6.5.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32_top'.
Removed a total of 0 cells.

yosys> opt_dff

6.5.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

6.5.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32_top..

6.5.15. Finished fast OPT passes.

yosys> abc -fast

6.6. Executing ABC pass (technology mapping using ABC).

6.6.1. Extracting gate netlist of module `\picorv32_top' to `<abc-temp-dir>/input.blif'..
Replacing 3 occurrences of constant undef bits with constant zero bits
Extracted 8150 gates and 9716 wires to a netlist network with 1563 inputs and 621 outputs.

6.6.1.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

6.6.1.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      276
ABC RESULTS:            ANDNOT cells:     1602
ABC RESULTS:               MUX cells:     2706
ABC RESULTS:              NAND cells:      344
ABC RESULTS:               NOR cells:      450
ABC RESULTS:               NOT cells:      109
ABC RESULTS:                OR cells:     1833
ABC RESULTS:             ORNOT cells:      229
ABC RESULTS:              XNOR cells:      146
ABC RESULTS:               XOR cells:      325
ABC RESULTS:        internal signals:     7532
ABC RESULTS:           input signals:     1563
ABC RESULTS:          output signals:      621
Removing temp directory.

yosys> opt -fast

6.7. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

6.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32_top.
<suppressed ~1207 debug messages>

yosys> opt_merge

6.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32_top'.
<suppressed ~15 debug messages>
Removed a total of 5 cells.

yosys> opt_dff

6.7.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean

6.7.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32_top..
Removed 12 unused cells and 5366 unused wires.
<suppressed ~26 debug messages>

6.7.5. Finished fast OPT passes.

yosys> delete */t:$print

yosys> chformal -remove

yosys> hierarchy -top picorv32_top

7. Executing HIERARCHY pass (managing design hierarchy).

7.1. Analyzing design hierarchy..
Top module:  \picorv32_top

7.2. Analyzing design hierarchy..
Top module:  \picorv32_top
Removed 0 unused modules.

yosys> opt -purge

8. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

8.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32_top.

yosys> opt_merge -nomux

8.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32_top'.
Removed a total of 0 cells.

yosys> opt_muxtree

8.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \picorv32_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

8.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \picorv32_top.
Performed a total of 0 changes.

yosys> opt_merge

8.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32_top'.
Removed a total of 0 cells.

yosys> opt_dff

8.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean -purge

8.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32_top..
Removed 1 unused cells and 62 unused wires.
<suppressed ~63 debug messages>

yosys> opt_expr

8.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32_top.

8.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

8.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \picorv32_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

8.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \picorv32_top.
Performed a total of 0 changes.

yosys> opt_merge

8.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32_top'.
Removed a total of 0 cells.

yosys> opt_dff

8.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean -purge

8.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32_top..

yosys> opt_expr

8.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32_top.

8.16. Finished OPT passes. (There is nothing left to do.)

yosys> techmap -map /nfs/sc_compute/cache/lambdapdk-v0.1.50/lambdapdk/sky130/libs/sky130hd/techmap/yosys/cells_tristatebuf.v

9. Executing TECHMAP pass (map to technology primitives).

9.1. Executing Verilog-2005 frontend: /nfs/sc_compute/cache/lambdapdk-v0.1.50/lambdapdk/sky130/libs/sky130hd/techmap/yosys/cells_tristatebuf.v
Parsing Verilog input from `/nfs/sc_compute/cache/lambdapdk-v0.1.50/lambdapdk/sky130/libs/sky130hd/techmap/yosys/cells_tristatebuf.v' to AST representation.
Generating RTLIL representation for module `\$_TBUF_'.
Successfully finished Verilog frontend.

9.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

yosys> techmap

10. Executing TECHMAP pass (map to technology primitives).

10.1. Executing Verilog-2005 frontend: /sc_tools/bin/../share/yosys/techmap.v
Parsing Verilog input from `/sc_tools/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

10.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~75 debug messages>

yosys> opt -fast -purge

11. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32_top.

yosys> opt_merge

11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32_top'.
Removed a total of 0 cells.

yosys> opt_dff

11.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean -purge

11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32_top..

11.5. Finished fast OPT passes.

yosys> extract_fa

12. Executing EXTRACT_FA pass (find and extract full/half adders).
Extracting full/half adders from picorv32_top:
  3-Input XOR/XNOR \rv32_soc/decoded_imm [2] \rv32_soc/reg_pc [2] $abc$24037$new_n3382:
      01101001 -> $abc$24037$new_n3383
    Majority with inverted Y:
      00010111 -> $abc$24037$new_n3411
      Created $fa cell $auto$extract_fa.cc:397:run$32136.
  3-Input XOR/XNOR \rv32_soc/decoded_imm [3] \rv32_soc/reg_pc [3] $abc$24037$new_n3411:
      10010110 -> $abc$24037$new_n3412
  3-Input XOR/XNOR \rv32_soc/decoded_imm [4] \rv32_soc/reg_pc [4] $abc$24037$new_n3443:
      10010110 -> $abc$24037$new_n3444
  3-Input XOR/XNOR \rv32_soc/decoded_imm [5] \rv32_soc/reg_pc [5] $abc$24037$new_n3475:
      10010110 -> $abc$24037$new_n3476
  3-Input XOR/XNOR \rv32_soc/decoded_imm [6] \rv32_soc/reg_pc [6] $abc$24037$new_n3510:
      01101001 -> $abc$24037$new_n3511
  3-Input XOR/XNOR \rv32_soc/decoded_imm [7] \rv32_soc/reg_pc [7] $abc$24037$new_n3545:
      01101001 -> $abc$24037$new_n3546
  3-Input XOR/XNOR \rv32_soc/decoded_imm [8] \rv32_soc/reg_pc [8] $abc$24037$new_n3577:
      01101001 -> $abc$24037$new_n3578
  3-Input XOR/XNOR \rv32_soc/decoded_imm [9] \rv32_soc/reg_pc [9] $abc$24037$new_n3607:
      01101001 -> $abc$24037$new_n3608
  3-Input XOR/XNOR \rv32_soc/decoded_imm [10] \rv32_soc/reg_pc [10] $abc$24037$new_n3640:
      10010110 -> $abc$24037$new_n3641
  3-Input XOR/XNOR \rv32_soc/decoded_imm [11] \rv32_soc/reg_pc [11] $abc$24037$new_n3674:
      10010110 -> $abc$24037$new_n3675
  3-Input XOR/XNOR \rv32_soc/decoded_imm [12] \rv32_soc/reg_pc [12] $abc$24037$new_n3707:
      10010110 -> $abc$24037$new_n3708
  3-Input XOR/XNOR \rv32_soc/decoded_imm [13] \rv32_soc/reg_pc [13] $abc$24037$new_n3740:
      10010110 -> $abc$24037$new_n3741
  3-Input XOR/XNOR \rv32_soc/decoded_imm [14] \rv32_soc/reg_pc [14] $abc$24037$new_n3773:
      10010110 -> $abc$24037$new_n3774
  3-Input XOR/XNOR \rv32_soc/decoded_imm [15] \rv32_soc/reg_pc [15] $abc$24037$new_n3807:
      10010110 -> $abc$24037$new_n3808
  3-Input XOR/XNOR \rv32_soc/decoded_imm [16] \rv32_soc/reg_pc [16] $abc$24037$new_n3835:
      01101001 -> $abc$24037$new_n3836
  3-Input XOR/XNOR \rv32_soc/decoded_imm [17] \rv32_soc/reg_pc [17] $abc$24037$new_n3863:
      01101001 -> $abc$24037$new_n3864
  3-Input XOR/XNOR \rv32_soc/decoded_imm [18] \rv32_soc/reg_pc [18] $abc$24037$new_n3894:
      01101001 -> $abc$24037$new_n3895
  3-Input XOR/XNOR \rv32_soc/decoded_imm [19] \rv32_soc/reg_pc [19] $abc$24037$new_n3925:
      01101001 -> $abc$24037$new_n3926
  3-Input XOR/XNOR \rv32_soc/decoded_imm [20] \rv32_soc/reg_pc [20] $abc$24037$new_n3956:
      01101001 -> $abc$24037$new_n3957
  3-Input XOR/XNOR \rv32_soc/decoded_imm [21] \rv32_soc/reg_pc [21] $abc$24037$new_n3987:
      01101001 -> $abc$24037$new_n3988
  3-Input XOR/XNOR \rv32_soc/decoded_imm [22] \rv32_soc/reg_pc [22] $abc$24037$new_n4018:
      01101001 -> $abc$24037$new_n4019
  3-Input XOR/XNOR \rv32_soc/decoded_imm [23] \rv32_soc/reg_pc [23] $abc$24037$new_n4049:
      01101001 -> $abc$24037$new_n4050
  3-Input XOR/XNOR \rv32_soc/decoded_imm [24] \rv32_soc/reg_pc [24] $abc$24037$new_n4080:
      01101001 -> $abc$24037$new_n4081
  3-Input XOR/XNOR \rv32_soc/decoded_imm [25] \rv32_soc/reg_pc [25] $abc$24037$new_n4111:
      01101001 -> $abc$24037$new_n4112
  3-Input XOR/XNOR \rv32_soc/decoded_imm [26] \rv32_soc/reg_pc [26] $abc$24037$new_n4142:
      01101001 -> $abc$24037$new_n4143
  3-Input XOR/XNOR \rv32_soc/decoded_imm [27] \rv32_soc/reg_pc [27] $abc$24037$new_n4173:
      01101001 -> $abc$24037$new_n4174
  3-Input XOR/XNOR \rv32_soc/decoded_imm [28] \rv32_soc/reg_pc [28] $abc$24037$new_n4204:
      01101001 -> $abc$24037$new_n4205
  3-Input XOR/XNOR \rv32_soc/decoded_imm [29] \rv32_soc/reg_pc [29] $abc$24037$new_n4235:
      01101001 -> $abc$24037$new_n4236
  3-Input XOR/XNOR \rv32_soc/decoded_imm [30] \rv32_soc/reg_pc [30] $abc$24037$new_n4266:
      01101001 -> $abc$24037$new_n4267
  3-Input XOR/XNOR \rv32_soc/decoded_imm [31] \rv32_soc/reg_pc [31] $abc$24037$new_n4297:
      10010110 -> $abc$24037$new_n4298
  3-Input XOR/XNOR \pcpi_rs1 [31] \pcpi_rs2 [31] $abc$24037$new_n4525:
      10010110 -> $abc$24037$new_n4615
  3-Input XOR/XNOR \pcpi_rs1 [1] \rv32_soc/decoded_imm [1] $abc$24037$new_n4726:
      01101001 -> $abc$24037$new_n4727
    Majority with inverted Y:
      00010111 -> $abc$24037$new_n4781
      Created $fa cell $auto$extract_fa.cc:397:run$32145.
  3-Input XOR/XNOR \pcpi_rs1 [2] \rv32_soc/decoded_imm [2] $abc$24037$new_n4781:
      10010110 -> $abc$24037$new_n4782
  3-Input XOR/XNOR \pcpi_rs1 [3] \rv32_soc/decoded_imm [3] $abc$24037$new_n4838:
      10010110 -> $abc$24037$new_n4839
  3-Input XOR/XNOR \pcpi_rs1 [4] \rv32_soc/decoded_imm [4] $abc$24037$new_n4891:
      10010110 -> $abc$24037$new_n4892
  3-Input XOR/XNOR \pcpi_rs1 [5] \rv32_soc/decoded_imm [5] $abc$24037$new_n4947:
      01101001 -> $abc$24037$new_n4948
  3-Input XOR/XNOR \pcpi_rs1 [6] \rv32_soc/decoded_imm [6] $abc$24037$new_n5003:
      01101001 -> $abc$24037$new_n5004
  3-Input XOR/XNOR \pcpi_rs1 [7] \rv32_soc/decoded_imm [7] $abc$24037$new_n5059:
      01101001 -> $abc$24037$new_n5060
  3-Input XOR/XNOR \pcpi_rs1 [8] \rv32_soc/decoded_imm [8] $abc$24037$new_n5115:
      01101001 -> $abc$24037$new_n5116
  3-Input XOR/XNOR \pcpi_rs1 [9] \rv32_soc/decoded_imm [9] $abc$24037$new_n5174:
      10010110 -> $abc$24037$new_n5175
  3-Input XOR/XNOR \pcpi_rs1 [10] \rv32_soc/decoded_imm [10] $abc$24037$new_n5234:
      10010110 -> $abc$24037$new_n5235
  3-Input XOR/XNOR \pcpi_rs1 [11] \rv32_soc/decoded_imm [11] $abc$24037$new_n5293:
      10010110 -> $abc$24037$new_n5294
  3-Input XOR/XNOR \pcpi_rs1 [12] \rv32_soc/decoded_imm [12] $abc$24037$new_n5352:
      10010110 -> $abc$24037$new_n5353
  3-Input XOR/XNOR \pcpi_rs1 [13] \rv32_soc/decoded_imm [13] $abc$24037$new_n5411:
      10010110 -> $abc$24037$new_n5412
  3-Input XOR/XNOR \pcpi_rs1 [14] \rv32_soc/decoded_imm [14] $abc$24037$new_n5470:
      10010110 -> $abc$24037$new_n5471
  3-Input XOR/XNOR \pcpi_rs1 [15] \rv32_soc/decoded_imm [15] $abc$24037$new_n5529:
      10010110 -> $abc$24037$new_n5530
  3-Input XOR/XNOR \pcpi_rs1 [16] \rv32_soc/decoded_imm [16] $abc$24037$new_n5588:
      01101001 -> $abc$24037$new_n5589
  3-Input XOR/XNOR \pcpi_rs1 [17] \rv32_soc/decoded_imm [17] $abc$24037$new_n5650:
      01101001 -> $abc$24037$new_n5651
  3-Input XOR/XNOR \pcpi_rs1 [18] \rv32_soc/decoded_imm [18] $abc$24037$new_n5712:
      01101001 -> $abc$24037$new_n5713
  3-Input XOR/XNOR \pcpi_rs1 [19] \rv32_soc/decoded_imm [19] $abc$24037$new_n5774:
      01101001 -> $abc$24037$new_n5775
  3-Input XOR/XNOR \pcpi_rs1 [20] \rv32_soc/decoded_imm [20] $abc$24037$new_n5836:
      01101001 -> $abc$24037$new_n5837
  3-Input XOR/XNOR \pcpi_rs1 [21] \rv32_soc/decoded_imm [21] $abc$24037$new_n5898:
      01101001 -> $abc$24037$new_n5899
  3-Input XOR/XNOR \pcpi_rs1 [22] \rv32_soc/decoded_imm [22] $abc$24037$new_n5960:
      01101001 -> $abc$24037$new_n5961
  3-Input XOR/XNOR \pcpi_rs1 [23] \rv32_soc/decoded_imm [23] $abc$24037$new_n6022:
      01101001 -> $abc$24037$new_n6023
  3-Input XOR/XNOR \pcpi_rs1 [24] \rv32_soc/decoded_imm [24] $abc$24037$new_n6084:
      01101001 -> $abc$24037$new_n6085
  3-Input XOR/XNOR \pcpi_rs1 [25] \rv32_soc/decoded_imm [25] $abc$24037$new_n6146:
      01101001 -> $abc$24037$new_n6147
  3-Input XOR/XNOR \pcpi_rs1 [26] \rv32_soc/decoded_imm [26] $abc$24037$new_n6208:
      01101001 -> $abc$24037$new_n6209
  3-Input XOR/XNOR \pcpi_rs1 [27] \rv32_soc/decoded_imm [27] $abc$24037$new_n6269:
      01101001 -> $abc$24037$new_n6270
  3-Input XOR/XNOR \pcpi_rs1 [28] $abc$24037$new_n6330 \rv32_soc/decoded_imm [28]:
      01101001 -> $abc$24037$new_n6331
  3-Input XOR/XNOR \pcpi_rs1 [29] $abc$24037$new_n6388 \rv32_soc/decoded_imm [29]:
      01101001 -> $abc$24037$new_n6389
  3-Input XOR/XNOR \pcpi_rs1 [30] $abc$24037$new_n6446 \rv32_soc/decoded_imm [30]:
      01101001 -> $abc$24037$new_n6447
  3-Input XOR/XNOR \pcpi_rs1 [31] $abc$24037$new_n6504 \rv32_soc/decoded_imm [31]:
      10010110 -> $abc$24037$new_n6505
  3-Input XOR/XNOR \mem_la_wdata [1] \pcpi_rs1 [1] $abc$24037$new_n4304:
      10010110 -> $abc$24037$new_n6532
    Majority with inverted A B C:
      00010111 -> $abc$24037$new_n6545
      Created $fa cell $auto$extract_fa.cc:397:run$32154.
  3-Input XOR/XNOR \mem_la_wdata [1] \pcpi_rs1 [1] $abc$24037$new_n4515:
      10010110 -> $abc$24037$new_n6533
    Majority with inverted B:
      10110010 -> $abc$24037$new_n4517
      Created $fa cell $auto$extract_fa.cc:397:run$32167.
  3-Input XOR/XNOR \mem_la_wdata [2] \pcpi_rs1 [2] $abc$24037$new_n6545:
      01101001 -> $abc$24037$new_n6546
  3-Input XOR/XNOR \mem_la_wdata [2] \pcpi_rs1 [2] $abc$24037$new_n4517:
      10010110 -> $abc$24037$new_n6547
  3-Input XOR/XNOR \mem_la_wdata [3] \pcpi_rs1 [3] $abc$24037$new_n6560:
      10010110 -> $abc$24037$new_n6561
  3-Input XOR/XNOR \mem_la_wdata [3] \pcpi_rs1 [3] $abc$24037$new_n4608:
      10010110 -> $abc$24037$new_n6562
  3-Input XOR/XNOR \mem_la_wdata [4] \pcpi_rs1 [4] $abc$24037$new_n6575:
      10010110 -> $abc$24037$new_n6576
  3-Input XOR/XNOR \mem_la_wdata [4] \pcpi_rs1 [4] $abc$24037$new_n4519:
      10010110 -> $abc$24037$new_n6577
  3-Input XOR/XNOR \mem_la_wdata [5] \pcpi_rs1 [5] $abc$24037$new_n6593:
      10010110 -> $abc$24037$new_n6594
  3-Input XOR/XNOR \mem_la_wdata [5] \pcpi_rs1 [5] $abc$24037$new_n6599:
      01101001 -> $abc$24037$new_n6600
  3-Input XOR/XNOR \mem_la_wdata [6] \pcpi_rs1 [6] $abc$24037$new_n6616:
      10010110 -> $abc$24037$new_n6617
  3-Input XOR/XNOR \mem_la_wdata [6] \pcpi_rs1 [6] $abc$24037$new_n6623:
      01101001 -> $abc$24037$new_n6624
  3-Input XOR/XNOR \mem_la_wdata [7] \pcpi_rs1 [7] $abc$24037$new_n6640:
      10010110 -> $abc$24037$new_n6641
  3-Input XOR/XNOR \mem_la_wdata [7] \pcpi_rs1 [7] $abc$24037$new_n4610:
      10010110 -> $abc$24037$new_n6642
  3-Input XOR/XNOR \pcpi_rs1 [8] \pcpi_rs2 [8] $abc$24037$new_n6658:
      10010110 -> $abc$24037$new_n6659
  3-Input XOR/XNOR \pcpi_rs1 [8] \pcpi_rs2 [8] $abc$24037$new_n4521:
      10010110 -> $abc$24037$new_n6660
  3-Input XOR/XNOR \pcpi_rs1 [9] \pcpi_rs2 [9] $abc$24037$new_n6679:
      01101001 -> $abc$24037$new_n6680
  3-Input XOR/XNOR \pcpi_rs1 [9] \pcpi_rs2 [9] $abc$24037$new_n6688:
      10010110 -> $abc$24037$new_n6689
  3-Input XOR/XNOR \pcpi_rs1 [10] \pcpi_rs2 [10] $abc$24037$new_n6709:
      01101001 -> $abc$24037$new_n6710
  3-Input XOR/XNOR \pcpi_rs1 [10] \pcpi_rs2 [10] $abc$24037$new_n6718:
      10010110 -> $abc$24037$new_n6719
  3-Input XOR/XNOR \pcpi_rs1 [11] \pcpi_rs2 [11] $abc$24037$new_n6738:
      01101001 -> $abc$24037$new_n6739
  3-Input XOR/XNOR \pcpi_rs1 [11] \pcpi_rs2 [11] $abc$24037$new_n6744:
      10010110 -> $abc$24037$new_n6745
  3-Input XOR/XNOR \pcpi_rs1 [12] \pcpi_rs2 [12] $abc$24037$new_n6764:
      01101001 -> $abc$24037$new_n6765
  3-Input XOR/XNOR \pcpi_rs1 [12] \pcpi_rs2 [12] $abc$24037$new_n6770:
      10010110 -> $abc$24037$new_n6771
  3-Input XOR/XNOR \pcpi_rs1 [13] \pcpi_rs2 [13] $abc$24037$new_n6790:
      01101001 -> $abc$24037$new_n6791
  3-Input XOR/XNOR \pcpi_rs1 [13] \pcpi_rs2 [13] $abc$24037$new_n6799:
      10010110 -> $abc$24037$new_n6800
  3-Input XOR/XNOR \pcpi_rs1 [14] \pcpi_rs2 [14] $abc$24037$new_n6819:
      01101001 -> $abc$24037$new_n6820
  3-Input XOR/XNOR \pcpi_rs1 [14] \pcpi_rs2 [14] $abc$24037$new_n6828:
      10010110 -> $abc$24037$new_n6829
  3-Input XOR/XNOR \pcpi_rs1 [15] \pcpi_rs2 [15] $abc$24037$new_n6848:
      01101001 -> $abc$24037$new_n6849
  3-Input XOR/XNOR \pcpi_rs1 [15] \pcpi_rs2 [15] $abc$24037$new_n4612:
      10010110 -> $abc$24037$new_n6850
  3-Input XOR/XNOR \pcpi_rs1 [16] \pcpi_rs2 [16] $abc$24037$new_n6869:
      01101001 -> $abc$24037$new_n6870
  3-Input XOR/XNOR \pcpi_rs1 [16] \pcpi_rs2 [16] $abc$24037$new_n4523:
      10010110 -> $abc$24037$new_n6871
  3-Input XOR/XNOR \pcpi_rs1 [17] \pcpi_rs2 [17] $abc$24037$new_n6893:
      01101001 -> $abc$24037$new_n6894
  3-Input XOR/XNOR \pcpi_rs1 [17] \pcpi_rs2 [17] $abc$24037$new_n6905:
      10010110 -> $abc$24037$new_n6906
  3-Input XOR/XNOR \pcpi_rs1 [18] \pcpi_rs2 [18] $abc$24037$new_n6928:
      01101001 -> $abc$24037$new_n6929
  3-Input XOR/XNOR \pcpi_rs1 [18] \pcpi_rs2 [18] $abc$24037$new_n6940:
      10010110 -> $abc$24037$new_n6941
  3-Input XOR/XNOR \pcpi_rs1 [19] \pcpi_rs2 [19] $abc$24037$new_n6963:
      01101001 -> $abc$24037$new_n6964
  3-Input XOR/XNOR \pcpi_rs1 [19] \pcpi_rs2 [19] $abc$24037$new_n6972:
      10010110 -> $abc$24037$new_n6973
  3-Input XOR/XNOR \pcpi_rs1 [20] \pcpi_rs2 [20] $abc$24037$new_n6995:
      01101001 -> $abc$24037$new_n6996
  3-Input XOR/XNOR \pcpi_rs1 [20] \pcpi_rs2 [20] $abc$24037$new_n7004:
      10010110 -> $abc$24037$new_n7005
  3-Input XOR/XNOR \pcpi_rs1 [21] \pcpi_rs2 [21] $abc$24037$new_n7027:
      01101001 -> $abc$24037$new_n7028
  3-Input XOR/XNOR \pcpi_rs1 [21] \pcpi_rs2 [21] $abc$24037$new_n7039:
      10010110 -> $abc$24037$new_n7040
  3-Input XOR/XNOR \pcpi_rs1 [22] \pcpi_rs2 [22] $abc$24037$new_n7062:
      01101001 -> $abc$24037$new_n7063
  3-Input XOR/XNOR \pcpi_rs1 [22] \pcpi_rs2 [22] $abc$24037$new_n7074:
      10010110 -> $abc$24037$new_n7075
  3-Input XOR/XNOR \pcpi_rs1 [23] \pcpi_rs2 [23] $abc$24037$new_n7097:
      01101001 -> $abc$24037$new_n7098
  3-Input XOR/XNOR \pcpi_rs1 [23] \pcpi_rs2 [23] $abc$24037$new_n7103:
      10010110 -> $abc$24037$new_n7104
  3-Input XOR/XNOR \pcpi_rs1 [24] \pcpi_rs2 [24] $abc$24037$new_n7126:
      01101001 -> $abc$24037$new_n7127
  3-Input XOR/XNOR \pcpi_rs1 [24] \pcpi_rs2 [24] $abc$24037$new_n7132:
      10010110 -> $abc$24037$new_n7133
  3-Input XOR/XNOR \pcpi_rs1 [25] \pcpi_rs2 [25] $abc$24037$new_n7155:
      01101001 -> $abc$24037$new_n7156
  3-Input XOR/XNOR \pcpi_rs1 [25] \pcpi_rs2 [25] $abc$24037$new_n7167:
      10010110 -> $abc$24037$new_n7168
  3-Input XOR/XNOR \pcpi_rs1 [26] \pcpi_rs2 [26] $abc$24037$new_n7190:
      01101001 -> $abc$24037$new_n7191
  3-Input XOR/XNOR \pcpi_rs1 [26] \pcpi_rs2 [26] $abc$24037$new_n7202:
      10010110 -> $abc$24037$new_n7203
  3-Input XOR/XNOR \pcpi_rs1 [27] \pcpi_rs2 [27] $abc$24037$new_n7225:
      01101001 -> $abc$24037$new_n7226
  3-Input XOR/XNOR \pcpi_rs1 [27] \pcpi_rs2 [27] $abc$24037$new_n7234:
      10010110 -> $abc$24037$new_n7235
  3-Input XOR/XNOR \pcpi_rs1 [28] \pcpi_rs2 [28] $abc$24037$new_n7257:
      01101001 -> $abc$24037$new_n7258
  3-Input XOR/XNOR \pcpi_rs1 [28] \pcpi_rs2 [28] $abc$24037$new_n7266:
      10010110 -> $abc$24037$new_n7267
  3-Input XOR/XNOR \pcpi_rs1 [29] \pcpi_rs2 [29] $abc$24037$new_n7289:
      01101001 -> $abc$24037$new_n7290
  3-Input XOR/XNOR \pcpi_rs1 [29] \pcpi_rs2 [29] $abc$24037$new_n7301:
      10010110 -> $abc$24037$new_n7302
  3-Input XOR/XNOR \pcpi_rs1 [30] \pcpi_rs2 [30] $abc$24037$new_n7324:
      01101001 -> $abc$24037$new_n7325
  3-Input XOR/XNOR \pcpi_rs1 [30] \pcpi_rs2 [30] $abc$24037$new_n7336:
      10010110 -> $abc$24037$new_n7337
  3-Input XOR/XNOR \pcpi_rs1 [31] \pcpi_rs2 [31] $abc$24037$new_n4614:
      10010110 -> $abc$24037$new_n7345
  3-Input XOR/XNOR \pcpi_rs1 [31] \pcpi_rs2 [31] $abc$24037$new_n7360:
      01101001 -> $abc$24037$new_n7361
  3-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [0] \rv32_soc/decoded_imm_j [2] $abc$24037$new_n7600:
      10010110 -> $abc$24037$new_n7601
    Majority with inverted A B C:
      00010111 -> $abc$24037$new_n7608
      Created $fa cell $auto$extract_fa.cc:397:run$32176.
  3-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [1] \rv32_soc/decoded_imm_j [3] $abc$24037$new_n7608:
      01101001 -> $abc$24037$new_n7609
  3-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [2] \rv32_soc/decoded_imm_j [4] $abc$24037$new_n7621:
      01101001 -> $abc$24037$new_n7622
  3-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [2] $abc$24037$new_n7621 $abc$24037$new_n7614:
      10010110 -> $abc$24037$new_n7622
  3-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [3] \rv32_soc/decoded_imm_j [5] $abc$24037$new_n7634:
      10010110 -> $abc$24037$new_n7635
  3-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [4] \rv32_soc/decoded_imm_j [6] $abc$24037$new_n7650:
      10010110 -> $abc$24037$new_n7651
  3-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [5] \rv32_soc/decoded_imm_j [7] $abc$24037$new_n7667:
      10010110 -> $abc$24037$new_n7668
  3-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [6] \rv32_soc/decoded_imm_j [8] $abc$24037$new_n7684:
      10010110 -> $abc$24037$new_n7685
  3-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [7] \rv32_soc/decoded_imm_j [9] $abc$24037$new_n7701:
      10010110 -> $abc$24037$new_n7702
  3-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [8] \rv32_soc/decoded_imm_j [10] $abc$24037$new_n7721:
      01101001 -> $abc$24037$new_n7722
  3-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [9] \rv32_soc/decoded_imm_j [11] $abc$24037$new_n7743:
      01101001 -> $abc$24037$new_n7744
  3-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [10] \rv32_soc/decoded_imm_j [12] $abc$24037$new_n7764:
      01101001 -> $abc$24037$new_n7765
  3-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [11] \rv32_soc/decoded_imm_j [13] $abc$24037$new_n7785:
      01101001 -> $abc$24037$new_n7786
  3-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [12] \rv32_soc/decoded_imm_j [14] $abc$24037$new_n7806:
      01101001 -> $abc$24037$new_n7807
  3-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [13] \rv32_soc/decoded_imm_j [15] $abc$24037$new_n7827:
      01101001 -> $abc$24037$new_n7828
  3-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [14] \rv32_soc/decoded_imm_j [16] $abc$24037$new_n7848:
      01101001 -> $abc$24037$new_n7849
  3-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [15] \rv32_soc/decoded_imm_j [17] $abc$24037$new_n7869:
      01101001 -> $abc$24037$new_n7870
  3-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [16] \rv32_soc/decoded_imm_j [18] $abc$24037$new_n7893:
      01101001 -> $abc$24037$new_n7894
  3-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [17] \rv32_soc/decoded_imm_j [19] $abc$24037$new_n7918:
      01101001 -> $abc$24037$new_n7919
  3-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [17] $abc$24037$new_n7918 $abc$24037$new_n4666:
      10010110 -> $abc$24037$new_n7919
  3-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [18] \rv32_soc/decoded_imm_j [31] $abc$24037$new_n7944:
      01101001 -> $abc$24037$new_n7945
  3-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [18] $abc$24037$new_n7944 $abc$24037$new_n7928:
      10010110 -> $abc$24037$new_n7945
  3-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [19] \rv32_soc/decoded_imm_j [31] $abc$24037$new_n7969:
      01101001 -> $abc$24037$new_n7970
  3-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [19] $abc$24037$new_n7969 $abc$24037$new_n7928:
      10010110 -> $abc$24037$new_n7970
  3-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [20] \rv32_soc/decoded_imm_j [31] $abc$24037$new_n7994:
      01101001 -> $abc$24037$new_n7995
  3-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [20] $abc$24037$new_n7928 $abc$24037$new_n7994:
      10010110 -> $abc$24037$new_n7995
  3-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [21] \rv32_soc/decoded_imm_j [31] $abc$24037$new_n8019:
      01101001 -> $abc$24037$new_n8020
  3-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [21] $abc$24037$new_n7928 $abc$24037$new_n8019:
      10010110 -> $abc$24037$new_n8020
  3-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [22] \rv32_soc/decoded_imm_j [31] $abc$24037$new_n8044:
      01101001 -> $abc$24037$new_n8045
  3-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [22] $abc$24037$new_n8044 $abc$24037$new_n7928:
      10010110 -> $abc$24037$new_n8045
  3-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [23] \rv32_soc/decoded_imm_j [31] $abc$24037$new_n8069:
      01101001 -> $abc$24037$new_n8070
  3-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [23] $abc$24037$new_n8069 $abc$24037$new_n7928:
      10010110 -> $abc$24037$new_n8070
  3-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [24] \rv32_soc/decoded_imm_j [31] $abc$24037$new_n8094:
      01101001 -> $abc$24037$new_n8095
  3-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [24] $abc$24037$new_n7928 $abc$24037$new_n8094:
      10010110 -> $abc$24037$new_n8095
  3-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [25] \rv32_soc/decoded_imm_j [31] $abc$24037$new_n8119:
      01101001 -> $abc$24037$new_n8120
  3-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [25] $abc$24037$new_n7928 $abc$24037$new_n8119:
      10010110 -> $abc$24037$new_n8120
  3-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [26] \rv32_soc/decoded_imm_j [31] $abc$24037$new_n8144:
      01101001 -> $abc$24037$new_n8145
  3-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [26] $abc$24037$new_n8144 $abc$24037$new_n7928:
      10010110 -> $abc$24037$new_n8145
  3-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [27] \rv32_soc/decoded_imm_j [31] $abc$24037$new_n8169:
      01101001 -> $abc$24037$new_n8170
  3-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [27] $abc$24037$new_n8169 $abc$24037$new_n7928:
      10010110 -> $abc$24037$new_n8170
  3-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [28] \rv32_soc/decoded_imm_j [31] $abc$24037$new_n8194:
      01101001 -> $abc$24037$new_n8195
  3-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [28] $abc$24037$new_n7928 $abc$24037$new_n8194:
      10010110 -> $abc$24037$new_n8195
  3-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [29] \rv32_soc/decoded_imm_j [31] $abc$24037$new_n8219:
      01101001 -> $abc$24037$new_n8220
  3-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [29] $abc$24037$new_n7928 $abc$24037$new_n8219:
      10010110 -> $abc$24037$new_n8220
  2-Input XOR/XNOR \rv32_soc/mem_state [0] \rv32_soc/mem_state [1]:
    1001 -> $abc$24037$auto$rtlil.cc:3016:NotGate$23778
    AND with inverted A B:
      0001 -> $abc$24037$new_n2187
      Created $fa cell $auto$extract_fa.cc:504:run$32189.
    AND with inverted A:
      0100 -> $abc$24037$new_n2199
      Created $fa cell $auto$extract_fa.cc:504:run$32200.
    AND with inverted B:
      0010 -> $abc$24037$new_n2200
      Created $fa cell $auto$extract_fa.cc:504:run$32206.
    AND without inversions:
      1000 -> $abc$24037$new_n2193
      Created $fa cell $auto$extract_fa.cc:504:run$32212.
  2-Input XOR/XNOR \rv32_soc/decoded_imm [1] \rv32_soc/reg_pc [1]:
    1001 -> $abc$24037$new_n3356
    AND without inversions:
      1000 -> $abc$24037$new_n3382
      Created $fa cell $auto$extract_fa.cc:504:run$32218.
  2-Input XOR/XNOR \rv32_soc/decoded_imm [2] \rv32_soc/reg_pc [2]:
    1001 -> $abc$24037$new_n3381
    AND with inverted Y:
      0111 -> $abc$24037$new_n3409
      Created $fa cell $auto$extract_fa.cc:504:run$32225.
  2-Input XOR/XNOR $abc$24037$new_n3382 $abc$24037$new_n3381:
    0110 -> $abc$24037$new_n3383
    AND with inverted B:
      0010 -> $abc$24037$new_n3410
      Created $fa cell $auto$extract_fa.cc:504:run$32234.
  2-Input XOR/XNOR \rv32_soc/decoded_imm [3] \rv32_soc/reg_pc [3]:
    1001 -> $abc$24037$new_n3408
    AND with inverted Y:
      0111 -> $abc$24037$new_n3438
      Created $fa cell $auto$extract_fa.cc:504:run$32242.
  2-Input XOR/XNOR $abc$24037$new_n3411 $abc$24037$new_n3408:
    1001 -> $abc$24037$new_n3412
  2-Input XOR/XNOR \rv32_soc/decoded_imm [4] \rv32_soc/reg_pc [4]:
    1001 -> $abc$24037$new_n3437
    AND with inverted Y:
      0111 -> $abc$24037$new_n3470
      Created $fa cell $auto$extract_fa.cc:504:run$32251.
  2-Input XOR/XNOR $abc$24037$new_n3443 $abc$24037$new_n3437:
    1001 -> $abc$24037$new_n3444
  2-Input XOR/XNOR \rv32_soc/decoded_imm [5] \rv32_soc/reg_pc [5]:
    1001 -> $abc$24037$new_n3469
    AND with inverted Y:
      0111 -> $abc$24037$new_n3502
      Created $fa cell $auto$extract_fa.cc:504:run$32260.
  2-Input XOR/XNOR $abc$24037$new_n3475 $abc$24037$new_n3469:
    1001 -> $abc$24037$new_n3476
  2-Input XOR/XNOR \rv32_soc/decoded_imm [6] \rv32_soc/reg_pc [6]:
    1001 -> $abc$24037$new_n3501
    AND with inverted Y:
      0111 -> $abc$24037$new_n3537
      Created $fa cell $auto$extract_fa.cc:504:run$32269.
  2-Input XOR/XNOR $abc$24037$new_n3510 $abc$24037$new_n3501:
    0110 -> $abc$24037$new_n3511
  2-Input XOR/XNOR \rv32_soc/decoded_imm [7] \rv32_soc/reg_pc [7]:
    1001 -> $abc$24037$new_n3536
    AND with inverted Y:
      0111 -> $abc$24037$new_n3569
      Created $fa cell $auto$extract_fa.cc:504:run$32278.
  2-Input XOR/XNOR $abc$24037$new_n3545 $abc$24037$new_n3536:
    0110 -> $abc$24037$new_n3546
  2-Input XOR/XNOR \rv32_soc/decoded_imm [8] \rv32_soc/reg_pc [8]:
    1001 -> $abc$24037$new_n3568
    AND with inverted Y:
      0111 -> $abc$24037$new_n3599
      Created $fa cell $auto$extract_fa.cc:504:run$32287.
  2-Input XOR/XNOR $abc$24037$new_n3577 $abc$24037$new_n3568:
    0110 -> $abc$24037$new_n3578
  2-Input XOR/XNOR \rv32_soc/decoded_imm [9] \rv32_soc/reg_pc [9]:
    1001 -> $abc$24037$new_n3598
    AND with inverted Y:
      0111 -> $abc$24037$new_n3629
      Created $fa cell $auto$extract_fa.cc:504:run$32296.
  2-Input XOR/XNOR $abc$24037$new_n3607 $abc$24037$new_n3598:
    0110 -> $abc$24037$new_n3608
  2-Input XOR/XNOR \rv32_soc/decoded_imm [10] \rv32_soc/reg_pc [10]:
    1001 -> $abc$24037$new_n3628
    AND with inverted Y:
      0111 -> $abc$24037$new_n3662
      Created $fa cell $auto$extract_fa.cc:504:run$32305.
  2-Input XOR/XNOR $abc$24037$new_n3640 $abc$24037$new_n3628:
    1001 -> $abc$24037$new_n3641
  2-Input XOR/XNOR \rv32_soc/decoded_imm [11] \rv32_soc/reg_pc [11]:
    1001 -> $abc$24037$new_n3661
    AND with inverted Y:
      0111 -> $abc$24037$new_n3696
      Created $fa cell $auto$extract_fa.cc:504:run$32314.
  2-Input XOR/XNOR $abc$24037$new_n3674 $abc$24037$new_n3661:
    1001 -> $abc$24037$new_n3675
  2-Input XOR/XNOR \rv32_soc/decoded_imm [12] \rv32_soc/reg_pc [12]:
    1001 -> $abc$24037$new_n3695
    AND with inverted Y:
      0111 -> $abc$24037$new_n3729
      Created $fa cell $auto$extract_fa.cc:504:run$32323.
  2-Input XOR/XNOR $abc$24037$new_n3707 $abc$24037$new_n3695:
    1001 -> $abc$24037$new_n3708
  2-Input XOR/XNOR \rv32_soc/decoded_imm [13] \rv32_soc/reg_pc [13]:
    1001 -> $abc$24037$new_n3728
    AND with inverted Y:
      0111 -> $abc$24037$new_n3762
      Created $fa cell $auto$extract_fa.cc:504:run$32332.
  2-Input XOR/XNOR $abc$24037$new_n3740 $abc$24037$new_n3728:
    1001 -> $abc$24037$new_n3741
  2-Input XOR/XNOR \rv32_soc/decoded_imm [14] \rv32_soc/reg_pc [14]:
    1001 -> $abc$24037$new_n3761
    AND with inverted Y:
      0111 -> $abc$24037$new_n3796
      Created $fa cell $auto$extract_fa.cc:504:run$32341.
  2-Input XOR/XNOR $abc$24037$new_n3773 $abc$24037$new_n3761:
    1001 -> $abc$24037$new_n3774
  2-Input XOR/XNOR \rv32_soc/decoded_imm [15] \rv32_soc/reg_pc [15]:
    1001 -> $abc$24037$new_n3795
    AND with inverted Y:
      0111 -> $abc$24037$new_n3824
      Created $fa cell $auto$extract_fa.cc:504:run$32350.
  2-Input XOR/XNOR $abc$24037$new_n3807 $abc$24037$new_n3795:
    1001 -> $abc$24037$new_n3808
  2-Input XOR/XNOR \rv32_soc/decoded_imm [16] \rv32_soc/reg_pc [16]:
    1001 -> $abc$24037$new_n3823
    AND with inverted Y:
      0111 -> $abc$24037$new_n3852
      Created $fa cell $auto$extract_fa.cc:504:run$32359.
  2-Input XOR/XNOR $abc$24037$new_n3835 $abc$24037$new_n3823:
    0110 -> $abc$24037$new_n3836
  2-Input XOR/XNOR \rv32_soc/decoded_imm [17] \rv32_soc/reg_pc [17]:
    1001 -> $abc$24037$new_n3851
    AND with inverted Y:
      0111 -> $abc$24037$new_n3880
      Created $fa cell $auto$extract_fa.cc:504:run$32368.
  2-Input XOR/XNOR $abc$24037$new_n3863 $abc$24037$new_n3851:
    0110 -> $abc$24037$new_n3864
  2-Input XOR/XNOR \rv32_soc/decoded_imm [18] \rv32_soc/reg_pc [18]:
    1001 -> $abc$24037$new_n3879
    AND with inverted Y:
      0111 -> $abc$24037$new_n3911
      Created $fa cell $auto$extract_fa.cc:504:run$32377.
  2-Input XOR/XNOR $abc$24037$new_n3894 $abc$24037$new_n3879:
    0110 -> $abc$24037$new_n3895
  2-Input XOR/XNOR \rv32_soc/decoded_imm [19] \rv32_soc/reg_pc [19]:
    1001 -> $abc$24037$new_n3910
    AND with inverted Y:
      0111 -> $abc$24037$new_n3942
      Created $fa cell $auto$extract_fa.cc:504:run$32386.
  2-Input XOR/XNOR $abc$24037$new_n3925 $abc$24037$new_n3910:
    0110 -> $abc$24037$new_n3926
  2-Input XOR/XNOR \rv32_soc/decoded_imm [20] \rv32_soc/reg_pc [20]:
    1001 -> $abc$24037$new_n3941
    AND with inverted Y:
      0111 -> $abc$24037$new_n3973
      Created $fa cell $auto$extract_fa.cc:504:run$32395.
  2-Input XOR/XNOR $abc$24037$new_n3956 $abc$24037$new_n3941:
    0110 -> $abc$24037$new_n3957
  2-Input XOR/XNOR \rv32_soc/decoded_imm [21] \rv32_soc/reg_pc [21]:
    1001 -> $abc$24037$new_n3972
    AND with inverted Y:
      0111 -> $abc$24037$new_n4004
      Created $fa cell $auto$extract_fa.cc:504:run$32404.
  2-Input XOR/XNOR $abc$24037$new_n3987 $abc$24037$new_n3972:
    0110 -> $abc$24037$new_n3988
  2-Input XOR/XNOR \rv32_soc/decoded_imm [22] \rv32_soc/reg_pc [22]:
    1001 -> $abc$24037$new_n4003
    AND with inverted Y:
      0111 -> $abc$24037$new_n4035
      Created $fa cell $auto$extract_fa.cc:504:run$32413.
  2-Input XOR/XNOR $abc$24037$new_n4018 $abc$24037$new_n4003:
    0110 -> $abc$24037$new_n4019
  2-Input XOR/XNOR \rv32_soc/decoded_imm [23] \rv32_soc/reg_pc [23]:
    1001 -> $abc$24037$new_n4034
    AND with inverted Y:
      0111 -> $abc$24037$new_n4066
      Created $fa cell $auto$extract_fa.cc:504:run$32422.
  2-Input XOR/XNOR $abc$24037$new_n4049 $abc$24037$new_n4034:
    0110 -> $abc$24037$new_n4050
  2-Input XOR/XNOR \rv32_soc/decoded_imm [24] \rv32_soc/reg_pc [24]:
    1001 -> $abc$24037$new_n4065
    AND with inverted Y:
      0111 -> $abc$24037$new_n4097
      Created $fa cell $auto$extract_fa.cc:504:run$32431.
  2-Input XOR/XNOR $abc$24037$new_n4080 $abc$24037$new_n4065:
    0110 -> $abc$24037$new_n4081
  2-Input XOR/XNOR \rv32_soc/decoded_imm [25] \rv32_soc/reg_pc [25]:
    1001 -> $abc$24037$new_n4096
    AND with inverted Y:
      0111 -> $abc$24037$new_n4128
      Created $fa cell $auto$extract_fa.cc:504:run$32440.
  2-Input XOR/XNOR $abc$24037$new_n4111 $abc$24037$new_n4096:
    0110 -> $abc$24037$new_n4112
  2-Input XOR/XNOR \rv32_soc/decoded_imm [26] \rv32_soc/reg_pc [26]:
    1001 -> $abc$24037$new_n4127
    AND with inverted Y:
      0111 -> $abc$24037$new_n4159
      Created $fa cell $auto$extract_fa.cc:504:run$32449.
  2-Input XOR/XNOR $abc$24037$new_n4142 $abc$24037$new_n4127:
    0110 -> $abc$24037$new_n4143
  2-Input XOR/XNOR \rv32_soc/decoded_imm [27] \rv32_soc/reg_pc [27]:
    1001 -> $abc$24037$new_n4158
    AND with inverted Y:
      0111 -> $abc$24037$new_n4190
      Created $fa cell $auto$extract_fa.cc:504:run$32458.
  2-Input XOR/XNOR $abc$24037$new_n4173 $abc$24037$new_n4158:
    0110 -> $abc$24037$new_n4174
  2-Input XOR/XNOR \rv32_soc/decoded_imm [28] \rv32_soc/reg_pc [28]:
    1001 -> $abc$24037$new_n4189
    AND with inverted Y:
      0111 -> $abc$24037$new_n4221
      Created $fa cell $auto$extract_fa.cc:504:run$32467.
  2-Input XOR/XNOR $abc$24037$new_n4204 $abc$24037$new_n4189:
    0110 -> $abc$24037$new_n4205
  2-Input XOR/XNOR \rv32_soc/decoded_imm [29] \rv32_soc/reg_pc [29]:
    1001 -> $abc$24037$new_n4220
    AND with inverted Y:
      0111 -> $abc$24037$new_n4252
      Created $fa cell $auto$extract_fa.cc:504:run$32476.
  2-Input XOR/XNOR $abc$24037$new_n4235 $abc$24037$new_n4220:
    0110 -> $abc$24037$new_n4236
  2-Input XOR/XNOR \rv32_soc/decoded_imm [30] \rv32_soc/reg_pc [30]:
    1001 -> $abc$24037$new_n4251
    AND with inverted Y:
      0111 -> $abc$24037$new_n4283
      Created $fa cell $auto$extract_fa.cc:504:run$32485.
  2-Input XOR/XNOR $abc$24037$new_n4266 $abc$24037$new_n4251:
    0110 -> $abc$24037$new_n4267
  2-Input XOR/XNOR \rv32_soc/decoded_imm [31] \rv32_soc/reg_pc [31]:
    0110 -> $abc$24037$new_n4282
  2-Input XOR/XNOR $abc$24037$new_n4297 $abc$24037$new_n4282:
    0110 -> $abc$24037$new_n4298
  2-Input XOR/XNOR \mem_la_wdata [1] \pcpi_rs1 [1]:
    1001 -> $abc$24037$new_n4306
    AND with inverted A B Y:
      1110 -> $abc$24037$new_n6537
      Created $fa cell $auto$extract_fa.cc:504:run$32494.
    AND with inverted A Y:
      1011 -> $abc$24037$new_n4514
      Created $fa cell $auto$extract_fa.cc:504:run$32507.
    AND without inversions:
      1000 -> $abc$24037$new_n6535
      Created $fa cell $auto$extract_fa.cc:504:run$32515.
  2-Input XOR/XNOR $abc$24037$new_n4525 $abc$24037$new_n4366:
    1001 -> $abc$24037$new_n4615
  2-Input XOR/XNOR $abc$24037$new_n4527 $abc$24037$new_n4525:
    0110 -> $abc$24037$new_n4615
  2-Input XOR/XNOR \pcpi_rs1 [0] \rv32_soc/decoded_imm [0]:
    0110 -> $abc$24037$new_n4674
    AND without inversions:
      1000 -> $abc$24037$new_n4726
      Created $fa cell $auto$extract_fa.cc:504:run$32521.
  2-Input XOR/XNOR \pcpi_rs1 [1] \rv32_soc/decoded_imm [1]:
    1001 -> $abc$24037$new_n4725
    AND with inverted Y:
      0111 -> $abc$24037$new_n4779
      Created $fa cell $auto$extract_fa.cc:504:run$32526.
  2-Input XOR/XNOR $abc$24037$new_n4726 $abc$24037$new_n4725:
    0110 -> $abc$24037$new_n4727
    AND with inverted B:
      0010 -> $abc$24037$new_n4780
      Created $fa cell $auto$extract_fa.cc:504:run$32535.
  2-Input XOR/XNOR \pcpi_rs1 [2] \rv32_soc/decoded_imm [2]:
    1001 -> $abc$24037$new_n4778
    AND with inverted Y:
      0111 -> $abc$24037$new_n4833
      Created $fa cell $auto$extract_fa.cc:504:run$32543.
  2-Input XOR/XNOR $abc$24037$new_n4781 $abc$24037$new_n4778:
    1001 -> $abc$24037$new_n4782
  2-Input XOR/XNOR \pcpi_rs1 [3] \rv32_soc/decoded_imm [3]:
    1001 -> $abc$24037$new_n4832
    AND with inverted Y:
      0111 -> $abc$24037$new_n4886
      Created $fa cell $auto$extract_fa.cc:504:run$32552.
  2-Input XOR/XNOR $abc$24037$new_n4838 $abc$24037$new_n4832:
    1001 -> $abc$24037$new_n4839
  2-Input XOR/XNOR \pcpi_rs1 [4] \rv32_soc/decoded_imm [4]:
    1001 -> $abc$24037$new_n4885
    AND with inverted Y:
      0111 -> $abc$24037$new_n4939
      Created $fa cell $auto$extract_fa.cc:504:run$32561.
  2-Input XOR/XNOR $abc$24037$new_n4891 $abc$24037$new_n4885:
    1001 -> $abc$24037$new_n4892
  2-Input XOR/XNOR \pcpi_rs1 [5] \rv32_soc/decoded_imm [5]:
    1001 -> $abc$24037$new_n4938
    AND with inverted Y:
      0111 -> $abc$24037$new_n4995
      Created $fa cell $auto$extract_fa.cc:504:run$32570.
  2-Input XOR/XNOR $abc$24037$new_n4947 $abc$24037$new_n4938:
    0110 -> $abc$24037$new_n4948
  2-Input XOR/XNOR \pcpi_rs1 [6] \rv32_soc/decoded_imm [6]:
    1001 -> $abc$24037$new_n4994
    AND with inverted Y:
      0111 -> $abc$24037$new_n5051
      Created $fa cell $auto$extract_fa.cc:504:run$32579.
  2-Input XOR/XNOR $abc$24037$new_n5003 $abc$24037$new_n4994:
    0110 -> $abc$24037$new_n5004
  2-Input XOR/XNOR \pcpi_rs1 [7] \rv32_soc/decoded_imm [7]:
    1001 -> $abc$24037$new_n5050
    AND with inverted Y:
      0111 -> $abc$24037$new_n5107
      Created $fa cell $auto$extract_fa.cc:504:run$32588.
  2-Input XOR/XNOR $abc$24037$new_n5059 $abc$24037$new_n5050:
    0110 -> $abc$24037$new_n5060
  2-Input XOR/XNOR \pcpi_rs1 [8] \rv32_soc/decoded_imm [8]:
    1001 -> $abc$24037$new_n5106
    AND with inverted Y:
      0111 -> $abc$24037$new_n5163
      Created $fa cell $auto$extract_fa.cc:504:run$32597.
  2-Input XOR/XNOR $abc$24037$new_n5115 $abc$24037$new_n5106:
    0110 -> $abc$24037$new_n5116
  2-Input XOR/XNOR \pcpi_rs1 [9] \rv32_soc/decoded_imm [9]:
    1001 -> $abc$24037$new_n5162
    AND with inverted Y:
      0111 -> $abc$24037$new_n5222
      Created $fa cell $auto$extract_fa.cc:504:run$32606.
  2-Input XOR/XNOR $abc$24037$new_n5174 $abc$24037$new_n5162:
    1001 -> $abc$24037$new_n5175
  2-Input XOR/XNOR \pcpi_rs1 [10] \rv32_soc/decoded_imm [10]:
    1001 -> $abc$24037$new_n5221
    AND with inverted Y:
      0111 -> $abc$24037$new_n5282
      Created $fa cell $auto$extract_fa.cc:504:run$32615.
  2-Input XOR/XNOR $abc$24037$new_n5234 $abc$24037$new_n5221:
    1001 -> $abc$24037$new_n5235
  2-Input XOR/XNOR \pcpi_rs1 [11] \rv32_soc/decoded_imm [11]:
    1001 -> $abc$24037$new_n5281
    AND with inverted Y:
      0111 -> $abc$24037$new_n5341
      Created $fa cell $auto$extract_fa.cc:504:run$32624.
  2-Input XOR/XNOR $abc$24037$new_n5293 $abc$24037$new_n5281:
    1001 -> $abc$24037$new_n5294
  2-Input XOR/XNOR \pcpi_rs1 [12] \rv32_soc/decoded_imm [12]:
    1001 -> $abc$24037$new_n5340
    AND with inverted Y:
      0111 -> $abc$24037$new_n5400
      Created $fa cell $auto$extract_fa.cc:504:run$32633.
  2-Input XOR/XNOR $abc$24037$new_n5352 $abc$24037$new_n5340:
    1001 -> $abc$24037$new_n5353
  2-Input XOR/XNOR \pcpi_rs1 [13] \rv32_soc/decoded_imm [13]:
    1001 -> $abc$24037$new_n5399
    AND with inverted Y:
      0111 -> $abc$24037$new_n5459
      Created $fa cell $auto$extract_fa.cc:504:run$32642.
  2-Input XOR/XNOR $abc$24037$new_n5411 $abc$24037$new_n5399:
    1001 -> $abc$24037$new_n5412
  2-Input XOR/XNOR \pcpi_rs1 [14] \rv32_soc/decoded_imm [14]:
    1001 -> $abc$24037$new_n5458
    AND with inverted Y:
      0111 -> $abc$24037$new_n5518
      Created $fa cell $auto$extract_fa.cc:504:run$32651.
  2-Input XOR/XNOR $abc$24037$new_n5470 $abc$24037$new_n5458:
    1001 -> $abc$24037$new_n5471
  2-Input XOR/XNOR \pcpi_rs1 [15] \rv32_soc/decoded_imm [15]:
    1001 -> $abc$24037$new_n5517
    AND with inverted Y:
      0111 -> $abc$24037$new_n5577
      Created $fa cell $auto$extract_fa.cc:504:run$32660.
  2-Input XOR/XNOR $abc$24037$new_n5529 $abc$24037$new_n5517:
    1001 -> $abc$24037$new_n5530
  2-Input XOR/XNOR \pcpi_rs1 [16] \rv32_soc/decoded_imm [16]:
    1001 -> $abc$24037$new_n5576
    AND with inverted Y:
      0111 -> $abc$24037$new_n5636
      Created $fa cell $auto$extract_fa.cc:504:run$32669.
  2-Input XOR/XNOR $abc$24037$new_n5588 $abc$24037$new_n5576:
    0110 -> $abc$24037$new_n5589
  2-Input XOR/XNOR \pcpi_rs1 [17] \rv32_soc/decoded_imm [17]:
    1001 -> $abc$24037$new_n5635
    AND with inverted Y:
      0111 -> $abc$24037$new_n5698
      Created $fa cell $auto$extract_fa.cc:504:run$32678.
  2-Input XOR/XNOR $abc$24037$new_n5650 $abc$24037$new_n5635:
    0110 -> $abc$24037$new_n5651
  2-Input XOR/XNOR \pcpi_rs1 [18] \rv32_soc/decoded_imm [18]:
    1001 -> $abc$24037$new_n5697
    AND with inverted Y:
      0111 -> $abc$24037$new_n5760
      Created $fa cell $auto$extract_fa.cc:504:run$32687.
  2-Input XOR/XNOR $abc$24037$new_n5712 $abc$24037$new_n5697:
    0110 -> $abc$24037$new_n5713
  2-Input XOR/XNOR \pcpi_rs1 [19] \rv32_soc/decoded_imm [19]:
    1001 -> $abc$24037$new_n5759
    AND with inverted Y:
      0111 -> $abc$24037$new_n5822
      Created $fa cell $auto$extract_fa.cc:504:run$32696.
  2-Input XOR/XNOR $abc$24037$new_n5774 $abc$24037$new_n5759:
    0110 -> $abc$24037$new_n5775
  2-Input XOR/XNOR \pcpi_rs1 [20] \rv32_soc/decoded_imm [20]:
    1001 -> $abc$24037$new_n5821
    AND with inverted Y:
      0111 -> $abc$24037$new_n5884
      Created $fa cell $auto$extract_fa.cc:504:run$32705.
  2-Input XOR/XNOR $abc$24037$new_n5836 $abc$24037$new_n5821:
    0110 -> $abc$24037$new_n5837
  2-Input XOR/XNOR \pcpi_rs1 [21] \rv32_soc/decoded_imm [21]:
    1001 -> $abc$24037$new_n5883
    AND with inverted Y:
      0111 -> $abc$24037$new_n5946
      Created $fa cell $auto$extract_fa.cc:504:run$32714.
  2-Input XOR/XNOR $abc$24037$new_n5898 $abc$24037$new_n5883:
    0110 -> $abc$24037$new_n5899
  2-Input XOR/XNOR \pcpi_rs1 [22] \rv32_soc/decoded_imm [22]:
    1001 -> $abc$24037$new_n5945
    AND with inverted Y:
      0111 -> $abc$24037$new_n6008
      Created $fa cell $auto$extract_fa.cc:504:run$32723.
  2-Input XOR/XNOR $abc$24037$new_n5960 $abc$24037$new_n5945:
    0110 -> $abc$24037$new_n5961
  2-Input XOR/XNOR \pcpi_rs1 [23] \rv32_soc/decoded_imm [23]:
    1001 -> $abc$24037$new_n6007
    AND with inverted Y:
      0111 -> $abc$24037$new_n6070
      Created $fa cell $auto$extract_fa.cc:504:run$32732.
  2-Input XOR/XNOR $abc$24037$new_n6022 $abc$24037$new_n6007:
    0110 -> $abc$24037$new_n6023
  2-Input XOR/XNOR \pcpi_rs1 [24] \rv32_soc/decoded_imm [24]:
    1001 -> $abc$24037$new_n6069
    AND with inverted Y:
      0111 -> $abc$24037$new_n6132
      Created $fa cell $auto$extract_fa.cc:504:run$32741.
  2-Input XOR/XNOR $abc$24037$new_n6084 $abc$24037$new_n6069:
    0110 -> $abc$24037$new_n6085
  2-Input XOR/XNOR \pcpi_rs1 [25] \rv32_soc/decoded_imm [25]:
    1001 -> $abc$24037$new_n6131
    AND with inverted Y:
      0111 -> $abc$24037$new_n6194
      Created $fa cell $auto$extract_fa.cc:504:run$32750.
  2-Input XOR/XNOR $abc$24037$new_n6146 $abc$24037$new_n6131:
    0110 -> $abc$24037$new_n6147
  2-Input XOR/XNOR \pcpi_rs1 [26] \rv32_soc/decoded_imm [26]:
    1001 -> $abc$24037$new_n6193
    AND with inverted Y:
      0111 -> $abc$24037$new_n6255
      Created $fa cell $auto$extract_fa.cc:504:run$32759.
  2-Input XOR/XNOR $abc$24037$new_n6208 $abc$24037$new_n6193:
    0110 -> $abc$24037$new_n6209
  2-Input XOR/XNOR \pcpi_rs1 [27] \rv32_soc/decoded_imm [27]:
    1001 -> $abc$24037$new_n6254
    AND with inverted Y:
      0111 -> $abc$24037$new_n6316
      Created $fa cell $auto$extract_fa.cc:504:run$32768.
  2-Input XOR/XNOR $abc$24037$new_n6269 $abc$24037$new_n6254:
    0110 -> $abc$24037$new_n6270
  2-Input XOR/XNOR \pcpi_rs1 [28] \rv32_soc/decoded_imm [28]:
    1001 -> $abc$24037$new_n6315
    AND with inverted Y:
      0111 -> $abc$24037$new_n6374
      Created $fa cell $auto$extract_fa.cc:504:run$32777.
  2-Input XOR/XNOR $abc$24037$new_n6330 $abc$24037$new_n6315:
    0110 -> $abc$24037$new_n6331
  2-Input XOR/XNOR \pcpi_rs1 [29] \rv32_soc/decoded_imm [29]:
    1001 -> $abc$24037$new_n6373
    AND with inverted Y:
      0111 -> $abc$24037$new_n6432
      Created $fa cell $auto$extract_fa.cc:504:run$32786.
  2-Input XOR/XNOR $abc$24037$new_n6373 $abc$24037$new_n6388:
    0110 -> $abc$24037$new_n6389
  2-Input XOR/XNOR \pcpi_rs1 [30] \rv32_soc/decoded_imm [30]:
    1001 -> $abc$24037$new_n6431
    AND with inverted Y:
      0111 -> $abc$24037$new_n6490
      Created $fa cell $auto$extract_fa.cc:504:run$32795.
  2-Input XOR/XNOR $abc$24037$new_n6446 $abc$24037$new_n6431:
    0110 -> $abc$24037$new_n6447
  2-Input XOR/XNOR \pcpi_rs1 [31] \rv32_soc/decoded_imm [31]:
    0110 -> $abc$24037$new_n6489
  2-Input XOR/XNOR $abc$24037$new_n6489 $abc$24037$new_n6504:
    0110 -> $abc$24037$new_n6505
  2-Input XOR/XNOR \mem_la_wdata [0] \pcpi_rs1 [0]:
    0110 -> $abc$24037$new_n4305 $abc$24037$new_n6513
    AND with inverted A B Y:
      1110 -> $abc$24037$new_n4303
      Created $fa cell $auto$extract_fa.cc:504:run$32804.
    AND with inverted B:
      0010 -> $abc$24037$new_n4515
      Created $fa cell $auto$extract_fa.cc:504:run$32816.
    AND without inversions:
      1000 -> $abc$24037$new_n4304
      Created $fa cell $auto$extract_fa.cc:504:run$32824.
  2-Input XOR/XNOR $abc$24037$new_n4306 $abc$24037$new_n4304:
    1001 -> $abc$24037$new_n6532
    AND with inverted A:
      0100 -> $abc$24037$new_n6544
      Created $fa cell $auto$extract_fa.cc:504:run$32828.
  2-Input XOR/XNOR $abc$24037$new_n4515 $abc$24037$new_n4306:
    1001 -> $abc$24037$new_n6533
    AND with inverted A:
      0100 -> $abc$24037$new_n4516
      Created $fa cell $auto$extract_fa.cc:504:run$32834.
  2-Input XOR/XNOR \mem_la_wdata [2] \pcpi_rs1 [2]:
    0110 -> $abc$24037$new_n4313
    1001 -> $abc$24037$new_n6543
    AND with inverted A B Y:
      1110 -> $abc$24037$new_n4311
      Created $fa cell $auto$extract_fa.cc:504:run$32840.
    AND with inverted A Y:
      1011 -> $abc$24037$new_n4511
      Created $fa cell $auto$extract_fa.cc:504:run$32854.
    AND without inversions:
      1000 -> $abc$24037$new_n4312
      Created $fa cell $auto$extract_fa.cc:504:run$32864.
  2-Input XOR/XNOR $abc$24037$new_n6543 $abc$24037$new_n6545:
    0110 -> $abc$24037$new_n6546
  2-Input XOR/XNOR $abc$24037$new_n4517 $abc$24037$new_n4313:
    0110 -> $abc$24037$new_n6547
  2-Input XOR/XNOR \mem_la_wdata [3] \pcpi_rs1 [3]:
    1001 -> $abc$24037$new_n4310 $abc$24037$new_n6555
    AND with inverted A B Y:
      1110 -> $abc$24037$new_n4308
      Created $fa cell $auto$extract_fa.cc:504:run$32870.
    AND with inverted A Y:
      1011 -> $abc$24037$new_n4510
      Created $fa cell $auto$extract_fa.cc:504:run$32884.
    AND without inversions:
      1000 -> $abc$24037$new_n4309
      Created $fa cell $auto$extract_fa.cc:504:run$32892.
  2-Input XOR/XNOR $abc$24037$new_n6555 $abc$24037$new_n6560:
    1001 -> $abc$24037$new_n6561
  2-Input XOR/XNOR $abc$24037$new_n4608 $abc$24037$new_n4310:
    1001 -> $abc$24037$new_n6562
  2-Input XOR/XNOR \mem_la_wdata [4] \pcpi_rs1 [4]:
    0110 -> $abc$24037$new_n4328
    1001 -> $abc$24037$new_n6570
    AND with inverted A B Y:
      1110 -> $abc$24037$new_n4326
      Created $fa cell $auto$extract_fa.cc:504:run$32898.
    AND with inverted A Y:
      1011 -> $abc$24037$new_n4505
      Created $fa cell $auto$extract_fa.cc:504:run$32912.
    AND without inversions:
      1000 -> $abc$24037$new_n4327
      Created $fa cell $auto$extract_fa.cc:504:run$32922.
  2-Input XOR/XNOR $abc$24037$new_n6570 $abc$24037$new_n6575:
    1001 -> $abc$24037$new_n6576
  2-Input XOR/XNOR $abc$24037$new_n4519 $abc$24037$new_n4328:
    0110 -> $abc$24037$new_n6577
  2-Input XOR/XNOR \mem_la_wdata [5] \pcpi_rs1 [5]:
    0110 -> $abc$24037$new_n4325
    1001 -> $abc$24037$new_n6585
    AND with inverted A B Y:
      1110 -> $abc$24037$new_n4323
      Created $fa cell $auto$extract_fa.cc:504:run$32928.
    AND with inverted A Y:
      1011 -> $abc$24037$new_n4504
      Created $fa cell $auto$extract_fa.cc:504:run$32942.
    AND without inversions:
      1000 -> $abc$24037$new_n4324
      Created $fa cell $auto$extract_fa.cc:504:run$32952.
  2-Input XOR/XNOR $abc$24037$new_n6585 $abc$24037$new_n6593:
    1001 -> $abc$24037$new_n6594
  2-Input XOR/XNOR $abc$24037$new_n6599 $abc$24037$new_n4325:
    1001 -> $abc$24037$new_n6600
  2-Input XOR/XNOR \mem_la_wdata [6] \pcpi_rs1 [6]:
    0110 -> $abc$24037$new_n4321
    1001 -> $abc$24037$new_n6608
    AND with inverted A B Y:
      1110 -> $abc$24037$new_n4319
      Created $fa cell $auto$extract_fa.cc:504:run$32958.
    AND with inverted A Y:
      1011 -> $abc$24037$new_n4501
      Created $fa cell $auto$extract_fa.cc:504:run$32972.
    AND without inversions:
      1000 -> $abc$24037$new_n4320
      Created $fa cell $auto$extract_fa.cc:504:run$32982.
  2-Input XOR/XNOR $abc$24037$new_n6608 $abc$24037$new_n6616:
    1001 -> $abc$24037$new_n6617
  2-Input XOR/XNOR $abc$24037$new_n6623 $abc$24037$new_n4321:
    1001 -> $abc$24037$new_n6624
  2-Input XOR/XNOR \mem_la_wdata [7] \pcpi_rs1 [7]:
    1001 -> $abc$24037$new_n4318 $abc$24037$new_n6632
    AND with inverted A B Y:
      1110 -> $abc$24037$new_n4316
      Created $fa cell $auto$extract_fa.cc:504:run$32988.
    AND with inverted A Y:
      1011 -> $abc$24037$new_n4500
      Created $fa cell $auto$extract_fa.cc:504:run$33002.
    AND without inversions:
      1000 -> $abc$24037$new_n4317
      Created $fa cell $auto$extract_fa.cc:504:run$33010.
  2-Input XOR/XNOR $abc$24037$new_n6632 $abc$24037$new_n6640:
    1001 -> $abc$24037$new_n6641
  2-Input XOR/XNOR $abc$24037$new_n4610 $abc$24037$new_n4318:
    1001 -> $abc$24037$new_n6642
  2-Input XOR/XNOR \pcpi_rs1 [8] \pcpi_rs2 [8]:
    0110 -> $abc$24037$new_n4359
    1001 -> $abc$24037$new_n6650
    AND with inverted A B Y:
      1110 -> $abc$24037$new_n4357
      Created $fa cell $auto$extract_fa.cc:504:run$33016.
    AND with inverted B Y:
      1101 -> $abc$24037$new_n4493
      Created $fa cell $auto$extract_fa.cc:504:run$33030.
    AND without inversions:
      1000 -> $abc$24037$new_n4358
      Created $fa cell $auto$extract_fa.cc:504:run$33040.
  2-Input XOR/XNOR $abc$24037$new_n6658 $abc$24037$new_n6650:
    1001 -> $abc$24037$new_n6659
  2-Input XOR/XNOR $abc$24037$new_n4521 $abc$24037$new_n4359:
    0110 -> $abc$24037$new_n6660
  2-Input XOR/XNOR \pcpi_rs1 [9] \pcpi_rs2 [9]:
    0110 -> $abc$24037$new_n4356
    1001 -> $abc$24037$new_n6668
    AND with inverted A B Y:
      1110 -> $abc$24037$new_n4354
      Created $fa cell $auto$extract_fa.cc:504:run$33046.
    AND with inverted B Y:
      1101 -> $abc$24037$new_n4492
      Created $fa cell $auto$extract_fa.cc:504:run$33060.
    AND without inversions:
      1000 -> $abc$24037$new_n4355
      Created $fa cell $auto$extract_fa.cc:504:run$33070.
  2-Input XOR/XNOR $abc$24037$new_n6668 $abc$24037$new_n6679:
    0110 -> $abc$24037$new_n6680
  2-Input XOR/XNOR $abc$24037$new_n6688 $abc$24037$new_n4356:
    0110 -> $abc$24037$new_n6689
  2-Input XOR/XNOR \pcpi_rs1 [10] \pcpi_rs2 [10]:
    0110 -> $abc$24037$new_n4352
    1001 -> $abc$24037$new_n6697
    AND with inverted A B Y:
      1110 -> $abc$24037$new_n4350
      Created $fa cell $auto$extract_fa.cc:504:run$33076.
    AND with inverted B Y:
      1101 -> $abc$24037$new_n4489
      Created $fa cell $auto$extract_fa.cc:504:run$33090.
    AND without inversions:
      1000 -> $abc$24037$new_n4351
      Created $fa cell $auto$extract_fa.cc:504:run$33100.
  2-Input XOR/XNOR $abc$24037$new_n6697 $abc$24037$new_n6709:
    0110 -> $abc$24037$new_n6710
  2-Input XOR/XNOR $abc$24037$new_n6718 $abc$24037$new_n4352:
    0110 -> $abc$24037$new_n6719
  2-Input XOR/XNOR \pcpi_rs1 [11] \pcpi_rs2 [11]:
    0110 -> $abc$24037$new_n4349
    1001 -> $abc$24037$new_n6727
    AND with inverted A B Y:
      1110 -> $abc$24037$new_n4347
      Created $fa cell $auto$extract_fa.cc:504:run$33106.
    AND with inverted B Y:
      1101 -> $abc$24037$new_n4488
      Created $fa cell $auto$extract_fa.cc:504:run$33120.
    AND without inversions:
      1000 -> $abc$24037$new_n4348
      Created $fa cell $auto$extract_fa.cc:504:run$33130.
  2-Input XOR/XNOR $abc$24037$new_n6738 $abc$24037$new_n6727:
    0110 -> $abc$24037$new_n6739
  2-Input XOR/XNOR $abc$24037$new_n6744 $abc$24037$new_n4349:
    0110 -> $abc$24037$new_n6745
  2-Input XOR/XNOR \pcpi_rs1 [12] \pcpi_rs2 [12]:
    0110 -> $abc$24037$new_n4344
    1001 -> $abc$24037$new_n6753
    AND with inverted A B Y:
      1110 -> $abc$24037$new_n4342
      Created $fa cell $auto$extract_fa.cc:504:run$33136.
    AND with inverted B Y:
      1101 -> $abc$24037$new_n4483
      Created $fa cell $auto$extract_fa.cc:504:run$33150.
    AND without inversions:
      1000 -> $abc$24037$new_n4343
      Created $fa cell $auto$extract_fa.cc:504:run$33160.
  2-Input XOR/XNOR $abc$24037$new_n6753 $abc$24037$new_n6764:
    0110 -> $abc$24037$new_n6765
  2-Input XOR/XNOR $abc$24037$new_n6770 $abc$24037$new_n4344:
    0110 -> $abc$24037$new_n6771
  2-Input XOR/XNOR \pcpi_rs1 [13] \pcpi_rs2 [13]:
    0110 -> $abc$24037$new_n4341
    1001 -> $abc$24037$new_n6779
    AND with inverted A B Y:
      1110 -> $abc$24037$new_n4339
      Created $fa cell $auto$extract_fa.cc:504:run$33166.
    AND with inverted B Y:
      1101 -> $abc$24037$new_n4482
      Created $fa cell $auto$extract_fa.cc:504:run$33180.
    AND without inversions:
      1000 -> $abc$24037$new_n4340
      Created $fa cell $auto$extract_fa.cc:504:run$33190.
  2-Input XOR/XNOR $abc$24037$new_n6790 $abc$24037$new_n6779:
    0110 -> $abc$24037$new_n6791
  2-Input XOR/XNOR $abc$24037$new_n6799 $abc$24037$new_n4341:
    0110 -> $abc$24037$new_n6800
  2-Input XOR/XNOR \pcpi_rs1 [14] \pcpi_rs2 [14]:
    0110 -> $abc$24037$new_n4337
    1001 -> $abc$24037$new_n6808
    AND with inverted A B Y:
      1110 -> $abc$24037$new_n4335
      Created $fa cell $auto$extract_fa.cc:504:run$33196.
    AND with inverted B Y:
      1101 -> $abc$24037$new_n4479
      Created $fa cell $auto$extract_fa.cc:504:run$33210.
    AND without inversions:
      1000 -> $abc$24037$new_n4336
      Created $fa cell $auto$extract_fa.cc:504:run$33220.
  2-Input XOR/XNOR $abc$24037$new_n6819 $abc$24037$new_n6808:
    0110 -> $abc$24037$new_n6820
  2-Input XOR/XNOR $abc$24037$new_n6828 $abc$24037$new_n4337:
    0110 -> $abc$24037$new_n6829
  2-Input XOR/XNOR \pcpi_rs1 [15] \pcpi_rs2 [15]:
    0110 -> $abc$24037$new_n4334
    1001 -> $abc$24037$new_n6837
    AND with inverted A B Y:
      1110 -> $abc$24037$new_n4332
      Created $fa cell $auto$extract_fa.cc:504:run$33226.
    AND with inverted B Y:
      1101 -> $abc$24037$new_n4478
      Created $fa cell $auto$extract_fa.cc:504:run$33240.
    AND without inversions:
      1000 -> $abc$24037$new_n4333
      Created $fa cell $auto$extract_fa.cc:504:run$33250.
  2-Input XOR/XNOR $abc$24037$new_n6848 $abc$24037$new_n6837:
    0110 -> $abc$24037$new_n6849
  2-Input XOR/XNOR $abc$24037$new_n4612 $abc$24037$new_n4334:
    0110 -> $abc$24037$new_n6850
  2-Input XOR/XNOR \pcpi_rs1 [16] \pcpi_rs2 [16]:
    0110 -> $abc$24037$new_n4422
    1001 -> $abc$24037$new_n6858
    AND with inverted A B Y:
      1110 -> $abc$24037$new_n4420
      Created $fa cell $auto$extract_fa.cc:504:run$33256.
    AND with inverted B Y:
      1101 -> $abc$24037$new_n4469
      Created $fa cell $auto$extract_fa.cc:504:run$33270.
    AND without inversions:
      1000 -> $abc$24037$new_n4421
      Created $fa cell $auto$extract_fa.cc:504:run$33280.
  2-Input XOR/XNOR $abc$24037$new_n6858 $abc$24037$new_n6869:
    0110 -> $abc$24037$new_n6870
  2-Input XOR/XNOR $abc$24037$new_n4523 $abc$24037$new_n4422:
    0110 -> $abc$24037$new_n6871
  2-Input XOR/XNOR \pcpi_rs1 [17] \pcpi_rs2 [17]:
    0110 -> $abc$24037$new_n4419
    1001 -> $abc$24037$new_n6879
    AND with inverted A B Y:
      1110 -> $abc$24037$new_n4417
      Created $fa cell $auto$extract_fa.cc:504:run$33286.
    AND with inverted B Y:
      1101 -> $abc$24037$new_n4468
      Created $fa cell $auto$extract_fa.cc:504:run$33300.
    AND without inversions:
      1000 -> $abc$24037$new_n4418
      Created $fa cell $auto$extract_fa.cc:504:run$33310.
  2-Input XOR/XNOR $abc$24037$new_n6893 $abc$24037$new_n6879:
    0110 -> $abc$24037$new_n6894
  2-Input XOR/XNOR $abc$24037$new_n6905 $abc$24037$new_n4419:
    0110 -> $abc$24037$new_n6906
  2-Input XOR/XNOR \pcpi_rs1 [18] \pcpi_rs2 [18]:
    0110 -> $abc$24037$new_n4415
    1001 -> $abc$24037$new_n6914
    AND with inverted A B Y:
      1110 -> $abc$24037$new_n4413
      Created $fa cell $auto$extract_fa.cc:504:run$33316.
    AND with inverted B Y:
      1101 -> $abc$24037$new_n4465
      Created $fa cell $auto$extract_fa.cc:504:run$33330.
    AND without inversions:
      1000 -> $abc$24037$new_n4414
      Created $fa cell $auto$extract_fa.cc:504:run$33340.
  2-Input XOR/XNOR $abc$24037$new_n6928 $abc$24037$new_n6914:
    0110 -> $abc$24037$new_n6929
  2-Input XOR/XNOR $abc$24037$new_n6940 $abc$24037$new_n4415:
    0110 -> $abc$24037$new_n6941
  2-Input XOR/XNOR \pcpi_rs1 [19] \pcpi_rs2 [19]:
    0110 -> $abc$24037$new_n4412
    1001 -> $abc$24037$new_n6949
    AND with inverted A B Y:
      1110 -> $abc$24037$new_n4410
      Created $fa cell $auto$extract_fa.cc:504:run$33346.
    AND with inverted B Y:
      1101 -> $abc$24037$new_n4464
      Created $fa cell $auto$extract_fa.cc:504:run$33360.
    AND without inversions:
      1000 -> $abc$24037$new_n4411
      Created $fa cell $auto$extract_fa.cc:504:run$33370.
  2-Input XOR/XNOR $abc$24037$new_n6963 $abc$24037$new_n6949:
    0110 -> $abc$24037$new_n6964
  2-Input XOR/XNOR $abc$24037$new_n6972 $abc$24037$new_n4412:
    0110 -> $abc$24037$new_n6973
  2-Input XOR/XNOR \pcpi_rs1 [20] \pcpi_rs2 [20]:
    0110 -> $abc$24037$new_n4407
    1001 -> $abc$24037$new_n6981
    AND with inverted A B Y:
      1110 -> $abc$24037$new_n4405
      Created $fa cell $auto$extract_fa.cc:504:run$33376.
    AND with inverted B Y:
      1101 -> $abc$24037$new_n4459
      Created $fa cell $auto$extract_fa.cc:504:run$33390.
    AND without inversions:
      1000 -> $abc$24037$new_n4406
      Created $fa cell $auto$extract_fa.cc:504:run$33400.
  2-Input XOR/XNOR $abc$24037$new_n6995 $abc$24037$new_n6981:
    0110 -> $abc$24037$new_n6996
  2-Input XOR/XNOR $abc$24037$new_n7004 $abc$24037$new_n4407:
    0110 -> $abc$24037$new_n7005
  2-Input XOR/XNOR \pcpi_rs1 [21] \pcpi_rs2 [21]:
    0110 -> $abc$24037$new_n4404
    1001 -> $abc$24037$new_n7013
    AND with inverted A B Y:
      1110 -> $abc$24037$new_n4402
      Created $fa cell $auto$extract_fa.cc:504:run$33406.
    AND with inverted B Y:
      1101 -> $abc$24037$new_n4458
      Created $fa cell $auto$extract_fa.cc:504:run$33420.
    AND without inversions:
      1000 -> $abc$24037$new_n4403
      Created $fa cell $auto$extract_fa.cc:504:run$33430.
  2-Input XOR/XNOR $abc$24037$new_n7027 $abc$24037$new_n7013:
    0110 -> $abc$24037$new_n7028
  2-Input XOR/XNOR $abc$24037$new_n7039 $abc$24037$new_n4404:
    0110 -> $abc$24037$new_n7040
  2-Input XOR/XNOR \pcpi_rs1 [22] \pcpi_rs2 [22]:
    0110 -> $abc$24037$new_n4400
    1001 -> $abc$24037$new_n7048
    AND with inverted A B Y:
      1110 -> $abc$24037$new_n4398
      Created $fa cell $auto$extract_fa.cc:504:run$33436.
    AND with inverted B Y:
      1101 -> $abc$24037$new_n4455
      Created $fa cell $auto$extract_fa.cc:504:run$33450.
    AND without inversions:
      1000 -> $abc$24037$new_n4399
      Created $fa cell $auto$extract_fa.cc:504:run$33460.
  2-Input XOR/XNOR $abc$24037$new_n7062 $abc$24037$new_n7048:
    0110 -> $abc$24037$new_n7063
  2-Input XOR/XNOR $abc$24037$new_n7074 $abc$24037$new_n4400:
    0110 -> $abc$24037$new_n7075
  2-Input XOR/XNOR \pcpi_rs1 [23] \pcpi_rs2 [23]:
    0110 -> $abc$24037$new_n4397
    1001 -> $abc$24037$new_n7083
    AND with inverted A B Y:
      1110 -> $abc$24037$new_n4395
      Created $fa cell $auto$extract_fa.cc:504:run$33466.
    AND with inverted B Y:
      1101 -> $abc$24037$new_n4454
      Created $fa cell $auto$extract_fa.cc:504:run$33480.
    AND without inversions:
      1000 -> $abc$24037$new_n4396
      Created $fa cell $auto$extract_fa.cc:504:run$33490.
  2-Input XOR/XNOR $abc$24037$new_n7097 $abc$24037$new_n7083:
    0110 -> $abc$24037$new_n7098
  2-Input XOR/XNOR $abc$24037$new_n7103 $abc$24037$new_n4397:
    0110 -> $abc$24037$new_n7104
  2-Input XOR/XNOR \pcpi_rs1 [24] \pcpi_rs2 [24]:
    0110 -> $abc$24037$new_n4391
    1001 -> $abc$24037$new_n7112
    AND with inverted A B Y:
      1110 -> $abc$24037$new_n4389
      Created $fa cell $auto$extract_fa.cc:504:run$33496.
    AND with inverted B Y:
      1101 -> $abc$24037$new_n4447
      Created $fa cell $auto$extract_fa.cc:504:run$33510.
    AND without inversions:
      1000 -> $abc$24037$new_n4390
      Created $fa cell $auto$extract_fa.cc:504:run$33520.
  2-Input XOR/XNOR $abc$24037$new_n7126 $abc$24037$new_n7112:
    0110 -> $abc$24037$new_n7127
  2-Input XOR/XNOR $abc$24037$new_n7132 $abc$24037$new_n4391:
    0110 -> $abc$24037$new_n7133
  2-Input XOR/XNOR \pcpi_rs1 [25] \pcpi_rs2 [25]:
    0110 -> $abc$24037$new_n4388
    1001 -> $abc$24037$new_n7141
    AND with inverted A B Y:
      1110 -> $abc$24037$new_n4386
      Created $fa cell $auto$extract_fa.cc:504:run$33526.
    AND with inverted B Y:
      1101 -> $abc$24037$new_n4446
      Created $fa cell $auto$extract_fa.cc:504:run$33540.
    AND without inversions:
      1000 -> $abc$24037$new_n4387
      Created $fa cell $auto$extract_fa.cc:504:run$33550.
  2-Input XOR/XNOR $abc$24037$new_n7155 $abc$24037$new_n7141:
    0110 -> $abc$24037$new_n7156
  2-Input XOR/XNOR $abc$24037$new_n7167 $abc$24037$new_n4388:
    0110 -> $abc$24037$new_n7168
  2-Input XOR/XNOR \pcpi_rs1 [26] \pcpi_rs2 [26]:
    0110 -> $abc$24037$new_n4384
    1001 -> $abc$24037$new_n7176
    AND with inverted A B Y:
      1110 -> $abc$24037$new_n4382
      Created $fa cell $auto$extract_fa.cc:504:run$33556.
    AND with inverted B Y:
      1101 -> $abc$24037$new_n4443
      Created $fa cell $auto$extract_fa.cc:504:run$33570.
    AND without inversions:
      1000 -> $abc$24037$new_n4383
      Created $fa cell $auto$extract_fa.cc:504:run$33580.
  2-Input XOR/XNOR $abc$24037$new_n7190 $abc$24037$new_n7176:
    0110 -> $abc$24037$new_n7191
  2-Input XOR/XNOR $abc$24037$new_n7202 $abc$24037$new_n4384:
    0110 -> $abc$24037$new_n7203
  2-Input XOR/XNOR \pcpi_rs1 [27] \pcpi_rs2 [27]:
    0110 -> $abc$24037$new_n4381
    1001 -> $abc$24037$new_n7211
    AND with inverted A B Y:
      1110 -> $abc$24037$new_n4379
      Created $fa cell $auto$extract_fa.cc:504:run$33586.
    AND with inverted B Y:
      1101 -> $abc$24037$new_n4442
      Created $fa cell $auto$extract_fa.cc:504:run$33600.
    AND without inversions:
      1000 -> $abc$24037$new_n4380
      Created $fa cell $auto$extract_fa.cc:504:run$33610.
  2-Input XOR/XNOR $abc$24037$new_n7225 $abc$24037$new_n7211:
    0110 -> $abc$24037$new_n7226
  2-Input XOR/XNOR $abc$24037$new_n7234 $abc$24037$new_n4381:
    0110 -> $abc$24037$new_n7235
  2-Input XOR/XNOR \pcpi_rs1 [28] \pcpi_rs2 [28]:
    0110 -> $abc$24037$new_n4376
    1001 -> $abc$24037$new_n7243
    AND with inverted A B Y:
      1110 -> $abc$24037$new_n4374
      Created $fa cell $auto$extract_fa.cc:504:run$33616.
    AND with inverted B Y:
      1101 -> $abc$24037$new_n4437
      Created $fa cell $auto$extract_fa.cc:504:run$33630.
    AND without inversions:
      1000 -> $abc$24037$new_n4375
      Created $fa cell $auto$extract_fa.cc:504:run$33640.
  2-Input XOR/XNOR $abc$24037$new_n7243 $abc$24037$new_n7257:
    0110 -> $abc$24037$new_n7258
  2-Input XOR/XNOR $abc$24037$new_n7266 $abc$24037$new_n4376:
    0110 -> $abc$24037$new_n7267
  2-Input XOR/XNOR \pcpi_rs1 [29] \pcpi_rs2 [29]:
    0110 -> $abc$24037$new_n4373
    1001 -> $abc$24037$new_n7275
    AND with inverted A B Y:
      1110 -> $abc$24037$new_n4371
      Created $fa cell $auto$extract_fa.cc:504:run$33646.
    AND with inverted B Y:
      1101 -> $abc$24037$new_n4436
      Created $fa cell $auto$extract_fa.cc:504:run$33660.
    AND without inversions:
      1000 -> $abc$24037$new_n4372
      Created $fa cell $auto$extract_fa.cc:504:run$33670.
  2-Input XOR/XNOR $abc$24037$new_n7289 $abc$24037$new_n7275:
    0110 -> $abc$24037$new_n7290
  2-Input XOR/XNOR $abc$24037$new_n7301 $abc$24037$new_n4373:
    0110 -> $abc$24037$new_n7302
  2-Input XOR/XNOR \pcpi_rs1 [30] \pcpi_rs2 [30]:
    0110 -> $abc$24037$new_n4369
    1001 -> $abc$24037$new_n7310
    AND with inverted A B Y:
      1110 -> $abc$24037$new_n4367
      Created $fa cell $auto$extract_fa.cc:504:run$33676.
    AND with inverted B Y:
      1101 -> $abc$24037$new_n4433
      Created $fa cell $auto$extract_fa.cc:504:run$33690.
    AND without inversions:
      1000 -> $abc$24037$new_n4368
      Created $fa cell $auto$extract_fa.cc:504:run$33700.
  2-Input XOR/XNOR $abc$24037$new_n7324 $abc$24037$new_n7310:
    0110 -> $abc$24037$new_n7325
  2-Input XOR/XNOR $abc$24037$new_n7336 $abc$24037$new_n4369:
    0110 -> $abc$24037$new_n7337
  2-Input XOR/XNOR $abc$24037$new_n4614 $abc$24037$new_n4366:
    1001 -> $abc$24037$new_n7345
  2-Input XOR/XNOR $abc$24037$new_n4614 $abc$24037$new_n4527:
    0110 -> $abc$24037$new_n7345
  2-Input XOR/XNOR \pcpi_rs1 [31] \pcpi_rs2 [31]:
    1001 -> $abc$24037$new_n4366 $abc$24037$new_n7346
    AND with inverted A B Y:
      1110 -> $abc$24037$new_n4364
      Created $fa cell $auto$extract_fa.cc:504:run$33706.
    AND with inverted B Y:
      1101 -> $abc$24037$new_n4432
      Created $fa cell $auto$extract_fa.cc:504:run$33720.
    AND without inversions:
      1000 -> $abc$24037$new_n4365
      Created $fa cell $auto$extract_fa.cc:504:run$33728.
  2-Input XOR/XNOR $abc$24037$new_n7346 $abc$24037$new_n7360:
    0110 -> $abc$24037$new_n7361
  2-Input XOR/XNOR \rv32_soc/reg_pc [2] \rv32_soc/reg_pc [3]:
    0110 -> $abc$24037$new_n7423
    AND without inversions:
      1000 -> $abc$24037$new_n7425
      Created $fa cell $auto$extract_fa.cc:504:run$33734.
  2-Input XOR/XNOR \rv32_soc/reg_pc [4] $abc$24037$new_n7425:
    0110 -> $abc$24037$new_n7426
  2-Input XOR/XNOR \rv32_soc/reg_pc [5] $abc$24037$new_n7429:
    0110 -> $abc$24037$new_n7430
  2-Input XOR/XNOR \rv32_soc/reg_pc [6] $abc$24037$new_n7433:
    0110 -> $abc$24037$new_n7434
  2-Input XOR/XNOR \rv32_soc/reg_pc [7] $abc$24037$new_n7438:
    0110 -> $abc$24037$new_n7439
  2-Input XOR/XNOR \rv32_soc/reg_pc [8] $abc$24037$new_n7443:
    0110 -> $abc$24037$new_n7444
  2-Input XOR/XNOR \rv32_soc/reg_pc [9] $abc$24037$new_n7448:
    0110 -> $abc$24037$new_n7449
  2-Input XOR/XNOR \rv32_soc/reg_pc [10] $abc$24037$new_n7453:
    0110 -> $abc$24037$new_n7454
  2-Input XOR/XNOR \rv32_soc/reg_pc [11] $abc$24037$new_n7459:
    0110 -> $abc$24037$new_n7460
  2-Input XOR/XNOR \rv32_soc/reg_pc [12] $abc$24037$new_n7465:
    0110 -> $abc$24037$new_n7466
  2-Input XOR/XNOR \rv32_soc/reg_pc [13] $abc$24037$new_n7471:
    0110 -> $abc$24037$new_n7472
  2-Input XOR/XNOR \rv32_soc/reg_pc [14] $abc$24037$new_n7477:
    0110 -> $abc$24037$new_n7478
  2-Input XOR/XNOR \rv32_soc/reg_pc [15] $abc$24037$new_n7483:
    0110 -> $abc$24037$new_n7484
  2-Input XOR/XNOR \rv32_soc/reg_pc [16] $abc$24037$new_n7489:
    0110 -> $abc$24037$new_n7490
  2-Input XOR/XNOR \rv32_soc/reg_pc [17] $abc$24037$new_n7495:
    0110 -> $abc$24037$new_n7496
  2-Input XOR/XNOR \rv32_soc/reg_pc [18] $abc$24037$new_n7501:
    0110 -> $abc$24037$new_n7502
  2-Input XOR/XNOR \rv32_soc/reg_pc [19] $abc$24037$new_n7508:
    0110 -> $abc$24037$new_n7509
  2-Input XOR/XNOR \rv32_soc/reg_pc [20] $abc$24037$new_n7515:
    0110 -> $abc$24037$new_n7516
  2-Input XOR/XNOR \rv32_soc/reg_pc [21] $abc$24037$new_n7522:
    0110 -> $abc$24037$new_n7523
  2-Input XOR/XNOR \rv32_soc/reg_pc [22] $abc$24037$new_n7529:
    0110 -> $abc$24037$new_n7530
  2-Input XOR/XNOR \rv32_soc/reg_pc [23] $abc$24037$new_n7536:
    0110 -> $abc$24037$new_n7537
  2-Input XOR/XNOR \rv32_soc/reg_pc [24] $abc$24037$new_n7543:
    0110 -> $abc$24037$new_n7544
  2-Input XOR/XNOR \rv32_soc/reg_pc [25] $abc$24037$new_n7550:
    0110 -> $abc$24037$new_n7551
  2-Input XOR/XNOR \rv32_soc/reg_pc [26] $abc$24037$new_n7557:
    0110 -> $abc$24037$new_n7558
  2-Input XOR/XNOR \rv32_soc/reg_pc [27] $abc$24037$new_n7564:
    0110 -> $abc$24037$new_n7565
  2-Input XOR/XNOR \rv32_soc/reg_pc [28] $abc$24037$new_n7571:
    0110 -> $abc$24037$new_n7572
  2-Input XOR/XNOR \rv32_soc/reg_pc [29] $abc$24037$new_n7578:
    0110 -> $abc$24037$new_n7579
  2-Input XOR/XNOR \rv32_soc/reg_pc [30] $abc$24037$new_n7585:
    0110 -> $abc$24037$new_n7586
  2-Input XOR/XNOR \rv32_soc/reg_pc [31] $abc$24037$new_n7592:
    0110 -> $abc$24037$new_n7593
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4407.A [0] \rv32_soc/decoded_imm_j [1]:
    0110 -> $abc$24037$new_n7595
    AND without inversions:
      1000 -> $abc$24037$new_n7600
      Created $fa cell $auto$extract_fa.cc:504:run$33739.
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [0] \rv32_soc/decoded_imm_j [2]:
    1001 -> $abc$24037$new_n7599
    AND with inverted Y:
      0111 -> $abc$24037$new_n7606
      Created $fa cell $auto$extract_fa.cc:504:run$33744.
  2-Input XOR/XNOR $abc$24037$new_n7600 $abc$24037$new_n7599:
    1001 -> $abc$24037$new_n7601
    AND with inverted B:
      0010 -> $abc$24037$new_n7607
      Created $fa cell $auto$extract_fa.cc:504:run$33753.
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [0] $auto$alumacc.cc:495:replace_alu$4401.B [1]:
    0110 -> $abc$24037$new_n7604
    AND without inversions:
      1000 -> $abc$24037$new_n7612
      Created $fa cell $auto$extract_fa.cc:504:run$33759.
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [1] \rv32_soc/decoded_imm_j [3]:
    1001 -> $abc$24037$new_n7605
    AND with inverted Y:
      0111 -> $abc$24037$new_n7616
      Created $fa cell $auto$extract_fa.cc:504:run$33764.
  2-Input XOR/XNOR $abc$24037$new_n7608 $abc$24037$new_n7605:
    0110 -> $abc$24037$new_n7609
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [2] $abc$24037$new_n7612:
    0110 -> $abc$24037$new_n7613
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [2] \rv32_soc/decoded_imm_j [4]:
    1001 -> $abc$24037$new_n7615
    AND with inverted Y:
      0111 -> $abc$24037$new_n7629
      Created $fa cell $auto$extract_fa.cc:504:run$33773.
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [2] $abc$24037$new_n7614:
    0110 -> $abc$24037$new_n7615
  2-Input XOR/XNOR $abc$24037$new_n7621 $abc$24037$new_n7615:
    0110 -> $abc$24037$new_n7622
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [3] $abc$24037$new_n7626:
    0110 -> $abc$24037$new_n7627
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [3] \rv32_soc/decoded_imm_j [5]:
    1001 -> $abc$24037$new_n7628
    AND with inverted Y:
      0111 -> $abc$24037$new_n7642
      Created $fa cell $auto$extract_fa.cc:504:run$33782.
  2-Input XOR/XNOR $abc$24037$new_n7634 $abc$24037$new_n7628:
    1001 -> $abc$24037$new_n7635
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [4] $abc$24037$new_n7639:
    0110 -> $abc$24037$new_n7640
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [4] \rv32_soc/decoded_imm_j [6]:
    1001 -> $abc$24037$new_n7641
    AND with inverted Y:
      0111 -> $abc$24037$new_n7659
      Created $fa cell $auto$extract_fa.cc:504:run$33791.
  2-Input XOR/XNOR $abc$24037$new_n7650 $abc$24037$new_n7641:
    1001 -> $abc$24037$new_n7651
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [5] $abc$24037$new_n7656:
    0110 -> $abc$24037$new_n7657
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [5] \rv32_soc/decoded_imm_j [7]:
    1001 -> $abc$24037$new_n7658
    AND with inverted Y:
      0111 -> $abc$24037$new_n7676
      Created $fa cell $auto$extract_fa.cc:504:run$33800.
  2-Input XOR/XNOR $abc$24037$new_n7667 $abc$24037$new_n7658:
    1001 -> $abc$24037$new_n7668
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [6] $abc$24037$new_n7673:
    0110 -> $abc$24037$new_n7674
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [6] \rv32_soc/decoded_imm_j [8]:
    1001 -> $abc$24037$new_n7675
    AND with inverted Y:
      0111 -> $abc$24037$new_n7693
      Created $fa cell $auto$extract_fa.cc:504:run$33809.
  2-Input XOR/XNOR $abc$24037$new_n7684 $abc$24037$new_n7675:
    1001 -> $abc$24037$new_n7685
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [7] $abc$24037$new_n7690:
    0110 -> $abc$24037$new_n7691
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [7] \rv32_soc/decoded_imm_j [9]:
    1001 -> $abc$24037$new_n7692
    AND with inverted Y:
      0111 -> $abc$24037$new_n7710
      Created $fa cell $auto$extract_fa.cc:504:run$33818.
  2-Input XOR/XNOR $abc$24037$new_n7701 $abc$24037$new_n7692:
    1001 -> $abc$24037$new_n7702
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [8] $abc$24037$new_n7707:
    0110 -> $abc$24037$new_n7708
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [8] \rv32_soc/decoded_imm_j [10]:
    1001 -> $abc$24037$new_n7709
    AND with inverted Y:
      0111 -> $abc$24037$new_n7731
      Created $fa cell $auto$extract_fa.cc:504:run$33827.
  2-Input XOR/XNOR $abc$24037$new_n7721 $abc$24037$new_n7709:
    0110 -> $abc$24037$new_n7722
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [9] $abc$24037$new_n7728:
    0110 -> $abc$24037$new_n7729
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [9] \rv32_soc/decoded_imm_j [11]:
    1001 -> $abc$24037$new_n7730
    AND with inverted Y:
      0111 -> $abc$24037$new_n7753
      Created $fa cell $auto$extract_fa.cc:504:run$33836.
  2-Input XOR/XNOR $abc$24037$new_n7743 $abc$24037$new_n7730:
    0110 -> $abc$24037$new_n7744
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [10] $abc$24037$new_n7750:
    0110 -> $abc$24037$new_n7751
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [10] \rv32_soc/decoded_imm_j [12]:
    1001 -> $abc$24037$new_n7752
    AND with inverted Y:
      0111 -> $abc$24037$new_n7774
      Created $fa cell $auto$extract_fa.cc:504:run$33845.
  2-Input XOR/XNOR $abc$24037$new_n7764 $abc$24037$new_n7752:
    0110 -> $abc$24037$new_n7765
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [11] $abc$24037$new_n7771:
    0110 -> $abc$24037$new_n7772
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [11] \rv32_soc/decoded_imm_j [13]:
    1001 -> $abc$24037$new_n7773
    AND with inverted Y:
      0111 -> $abc$24037$new_n7795
      Created $fa cell $auto$extract_fa.cc:504:run$33854.
  2-Input XOR/XNOR $abc$24037$new_n7785 $abc$24037$new_n7773:
    0110 -> $abc$24037$new_n7786
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [12] $abc$24037$new_n7792:
    0110 -> $abc$24037$new_n7793
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [12] \rv32_soc/decoded_imm_j [14]:
    1001 -> $abc$24037$new_n7794
    AND with inverted Y:
      0111 -> $abc$24037$new_n7816
      Created $fa cell $auto$extract_fa.cc:504:run$33863.
  2-Input XOR/XNOR $abc$24037$new_n7806 $abc$24037$new_n7794:
    0110 -> $abc$24037$new_n7807
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [13] $abc$24037$new_n7813:
    0110 -> $abc$24037$new_n7814
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [13] \rv32_soc/decoded_imm_j [15]:
    1001 -> $abc$24037$new_n7815
    AND with inverted Y:
      0111 -> $abc$24037$new_n7837
      Created $fa cell $auto$extract_fa.cc:504:run$33872.
  2-Input XOR/XNOR $abc$24037$new_n7827 $abc$24037$new_n7815:
    0110 -> $abc$24037$new_n7828
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [14] $abc$24037$new_n7834:
    0110 -> $abc$24037$new_n7835
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [14] \rv32_soc/decoded_imm_j [16]:
    1001 -> $abc$24037$new_n7836
    AND with inverted Y:
      0111 -> $abc$24037$new_n7858
      Created $fa cell $auto$extract_fa.cc:504:run$33881.
  2-Input XOR/XNOR $abc$24037$new_n7836 $abc$24037$new_n7848:
    0110 -> $abc$24037$new_n7849
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [15] $abc$24037$new_n7855:
    0110 -> $abc$24037$new_n7856
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [15] \rv32_soc/decoded_imm_j [17]:
    1001 -> $abc$24037$new_n7857
    AND with inverted Y:
      0111 -> $abc$24037$new_n7879
      Created $fa cell $auto$extract_fa.cc:504:run$33890.
  2-Input XOR/XNOR $abc$24037$new_n7869 $abc$24037$new_n7857:
    0110 -> $abc$24037$new_n7870
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [16] $abc$24037$new_n7876:
    0110 -> $abc$24037$new_n7877
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [16] \rv32_soc/decoded_imm_j [18]:
    1001 -> $abc$24037$new_n7878
    AND with inverted Y:
      0111 -> $abc$24037$new_n7904
      Created $fa cell $auto$extract_fa.cc:504:run$33899.
  2-Input XOR/XNOR $abc$24037$new_n7893 $abc$24037$new_n7878:
    0110 -> $abc$24037$new_n7894
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [17] $abc$24037$new_n7901:
    0110 -> $abc$24037$new_n7902
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [17] \rv32_soc/decoded_imm_j [19]:
    1001 -> $abc$24037$new_n7903
    AND with inverted Y:
      0111 -> $abc$24037$new_n7930
      Created $fa cell $auto$extract_fa.cc:504:run$33908.
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [17] $abc$24037$new_n4666:
    0110 -> $abc$24037$new_n7903
  2-Input XOR/XNOR $abc$24037$new_n7918 $abc$24037$new_n7903:
    0110 -> $abc$24037$new_n7919
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [18] $abc$24037$new_n7926:
    0110 -> $abc$24037$new_n7927
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [18] \rv32_soc/decoded_imm_j [31]:
    1001 -> $abc$24037$new_n7929
    AND with inverted Y:
      0111 -> $abc$24037$new_n7955
      Created $fa cell $auto$extract_fa.cc:504:run$33917.
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [18] $abc$24037$new_n7928:
    0110 -> $abc$24037$new_n7929
  2-Input XOR/XNOR $abc$24037$new_n7944 $abc$24037$new_n7929:
    0110 -> $abc$24037$new_n7945
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [19] $abc$24037$new_n7952:
    0110 -> $abc$24037$new_n7953
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [19] \rv32_soc/decoded_imm_j [31]:
    1001 -> $abc$24037$new_n7954
    AND with inverted Y:
      0111 -> $abc$24037$new_n7980
      Created $fa cell $auto$extract_fa.cc:504:run$33926.
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [19] $abc$24037$new_n7928:
    0110 -> $abc$24037$new_n7954
  2-Input XOR/XNOR $abc$24037$new_n7969 $abc$24037$new_n7954:
    0110 -> $abc$24037$new_n7970
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [20] $abc$24037$new_n7977:
    0110 -> $abc$24037$new_n7978
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [20] \rv32_soc/decoded_imm_j [31]:
    1001 -> $abc$24037$new_n7979
    AND with inverted Y:
      0111 -> $abc$24037$new_n8005
      Created $fa cell $auto$extract_fa.cc:504:run$33935.
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [20] $abc$24037$new_n7928:
    0110 -> $abc$24037$new_n7979
  2-Input XOR/XNOR $abc$24037$new_n7994 $abc$24037$new_n7979:
    0110 -> $abc$24037$new_n7995
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [21] $abc$24037$new_n8002:
    0110 -> $abc$24037$new_n8003
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [21] \rv32_soc/decoded_imm_j [31]:
    1001 -> $abc$24037$new_n8004
    AND with inverted Y:
      0111 -> $abc$24037$new_n8030
      Created $fa cell $auto$extract_fa.cc:504:run$33944.
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [21] $abc$24037$new_n7928:
    0110 -> $abc$24037$new_n8004
  2-Input XOR/XNOR $abc$24037$new_n8019 $abc$24037$new_n8004:
    0110 -> $abc$24037$new_n8020
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [22] $abc$24037$new_n8027:
    0110 -> $abc$24037$new_n8028
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [22] \rv32_soc/decoded_imm_j [31]:
    1001 -> $abc$24037$new_n8029
    AND with inverted Y:
      0111 -> $abc$24037$new_n8055
      Created $fa cell $auto$extract_fa.cc:504:run$33953.
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [22] $abc$24037$new_n7928:
    0110 -> $abc$24037$new_n8029
  2-Input XOR/XNOR $abc$24037$new_n8044 $abc$24037$new_n8029:
    0110 -> $abc$24037$new_n8045
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [23] $abc$24037$new_n8052:
    0110 -> $abc$24037$new_n8053
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [23] \rv32_soc/decoded_imm_j [31]:
    1001 -> $abc$24037$new_n8054
    AND with inverted Y:
      0111 -> $abc$24037$new_n8080
      Created $fa cell $auto$extract_fa.cc:504:run$33962.
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [23] $abc$24037$new_n7928:
    0110 -> $abc$24037$new_n8054
  2-Input XOR/XNOR $abc$24037$new_n8069 $abc$24037$new_n8054:
    0110 -> $abc$24037$new_n8070
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [24] $abc$24037$new_n8077:
    0110 -> $abc$24037$new_n8078
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [24] \rv32_soc/decoded_imm_j [31]:
    1001 -> $abc$24037$new_n8079
    AND with inverted Y:
      0111 -> $abc$24037$new_n8105
      Created $fa cell $auto$extract_fa.cc:504:run$33971.
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [24] $abc$24037$new_n7928:
    0110 -> $abc$24037$new_n8079
  2-Input XOR/XNOR $abc$24037$new_n8094 $abc$24037$new_n8079:
    0110 -> $abc$24037$new_n8095
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [25] $abc$24037$new_n8102:
    0110 -> $abc$24037$new_n8103
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [25] \rv32_soc/decoded_imm_j [31]:
    1001 -> $abc$24037$new_n8104
    AND with inverted Y:
      0111 -> $abc$24037$new_n8130
      Created $fa cell $auto$extract_fa.cc:504:run$33980.
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [25] $abc$24037$new_n7928:
    0110 -> $abc$24037$new_n8104
  2-Input XOR/XNOR $abc$24037$new_n8119 $abc$24037$new_n8104:
    0110 -> $abc$24037$new_n8120
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [26] $abc$24037$new_n8127:
    0110 -> $abc$24037$new_n8128
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [26] \rv32_soc/decoded_imm_j [31]:
    1001 -> $abc$24037$new_n8129
    AND with inverted Y:
      0111 -> $abc$24037$new_n8155
      Created $fa cell $auto$extract_fa.cc:504:run$33989.
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [26] $abc$24037$new_n7928:
    0110 -> $abc$24037$new_n8129
  2-Input XOR/XNOR $abc$24037$new_n8144 $abc$24037$new_n8129:
    0110 -> $abc$24037$new_n8145
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [27] $abc$24037$new_n8152:
    0110 -> $abc$24037$new_n8153
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [27] \rv32_soc/decoded_imm_j [31]:
    1001 -> $abc$24037$new_n8154
    AND with inverted Y:
      0111 -> $abc$24037$new_n8180
      Created $fa cell $auto$extract_fa.cc:504:run$33998.
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [27] $abc$24037$new_n7928:
    0110 -> $abc$24037$new_n8154
  2-Input XOR/XNOR $abc$24037$new_n8169 $abc$24037$new_n8154:
    0110 -> $abc$24037$new_n8170
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [28] $abc$24037$new_n8177:
    0110 -> $abc$24037$new_n8178
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [28] \rv32_soc/decoded_imm_j [31]:
    1001 -> $abc$24037$new_n8179
    AND with inverted Y:
      0111 -> $abc$24037$new_n8205
      Created $fa cell $auto$extract_fa.cc:504:run$34007.
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [28] $abc$24037$new_n7928:
    0110 -> $abc$24037$new_n8179
  2-Input XOR/XNOR $abc$24037$new_n8194 $abc$24037$new_n8179:
    0110 -> $abc$24037$new_n8195
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [29] $abc$24037$new_n8202:
    0110 -> $abc$24037$new_n8203
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [29] \rv32_soc/decoded_imm_j [31]:
    1001 -> $abc$24037$new_n8204
  2-Input XOR/XNOR $auto$alumacc.cc:495:replace_alu$4401.B [29] $abc$24037$new_n7928:
    0110 -> $abc$24037$new_n8204
  2-Input XOR/XNOR $abc$24037$new_n8219 $abc$24037$new_n8204:
    0110 -> $abc$24037$new_n8220
  2-Input XOR/XNOR \rv32_soc/reg_sh [0] \rv32_soc/reg_sh [1]:
    0110 -> $abc$24037$new_n9305
    AND with inverted A B Y:
      1110 -> $abc$24037$new_n2225
      Created $fa cell $auto$extract_fa.cc:504:run$34016.
    AND with inverted A B:
      0001 -> $abc$24037$new_n9310
      Created $fa cell $auto$extract_fa.cc:504:run$34027.
  2-Input XOR/XNOR \rv32_soc/reg_sh [2] $abc$24037$new_n9310:
    0110 -> $abc$24037$new_n9311
  2-Input XOR/XNOR \rv32_soc/reg_sh [3] $abc$24037$new_n9318:
    0110 -> $abc$24037$new_n9319
  2-Input XOR/XNOR \rv32_soc/reg_sh [2] \rv32_soc/reg_sh [3]:
    1001 -> $abc$24037$new_n9320
    AND with inverted A B:
      0001 -> $abc$24037$new_n2286
      Created $fa cell $auto$extract_fa.cc:504:run$34035.
    AND with inverted B Y:
      1101 -> $abc$24037$new_n2226
      Created $fa cell $auto$extract_fa.cc:504:run$34046.
  2-Input XOR/XNOR \rv32_soc/reg_sh [4] $abc$24037$new_n9326:
    0110 -> $abc$24037$new_n9327
  2-Input XOR/XNOR \rv32_soc/reg_sh [4] $abc$24037$new_n2286:
    0110 -> $abc$24037$new_n9328
  2-Input XOR/XNOR \rv32_soc/count_instr [0] \rv32_soc/count_instr [1]:
    0110 -> $auto$alumacc.cc:495:replace_alu$4404.Y [1]
    AND without inversions:
      1000 -> $abc$24037$new_n9372
      Created $fa cell $auto$extract_fa.cc:504:run$34054.
  2-Input XOR/XNOR \rv32_soc/count_instr [2] $abc$24037$new_n9372:
    0110 -> $auto$alumacc.cc:495:replace_alu$4404.Y [2]
  2-Input XOR/XNOR \rv32_soc/count_instr [3] $abc$24037$new_n9375:
    0110 -> $auto$alumacc.cc:495:replace_alu$4404.Y [3]
  2-Input XOR/XNOR \rv32_soc/count_instr [4] $abc$24037$new_n9378:
    0110 -> $auto$alumacc.cc:495:replace_alu$4404.Y [4]
  2-Input XOR/XNOR \rv32_soc/count_instr [5] $abc$24037$new_n9382:
    0110 -> $auto$alumacc.cc:495:replace_alu$4404.Y [5]
  2-Input XOR/XNOR \rv32_soc/count_instr [6] $abc$24037$new_n9386:
    0110 -> $auto$alumacc.cc:495:replace_alu$4404.Y [6]
  2-Input XOR/XNOR \rv32_soc/count_instr [7] $abc$24037$new_n9390:
    0110 -> $auto$alumacc.cc:495:replace_alu$4404.Y [7]
  2-Input XOR/XNOR \rv32_soc/count_instr [8] $abc$24037$new_n9394:
    0110 -> $auto$alumacc.cc:495:replace_alu$4404.Y [8]
  2-Input XOR/XNOR \rv32_soc/count_instr [9] $abc$24037$new_n9399:
    0110 -> $auto$alumacc.cc:495:replace_alu$4404.Y [9]
  2-Input XOR/XNOR \rv32_soc/count_instr [10] $abc$24037$new_n9404:
    0110 -> $auto$alumacc.cc:495:replace_alu$4404.Y [10]
  2-Input XOR/XNOR \rv32_soc/count_instr [11] $abc$24037$new_n9409:
    0110 -> $auto$alumacc.cc:495:replace_alu$4404.Y [11]
  2-Input XOR/XNOR \rv32_soc/count_instr [12] $abc$24037$new_n9414:
    0110 -> $auto$alumacc.cc:495:replace_alu$4404.Y [12]
  2-Input XOR/XNOR \rv32_soc/count_instr [13] $abc$24037$new_n9419:
    0110 -> $auto$alumacc.cc:495:replace_alu$4404.Y [13]
  2-Input XOR/XNOR \rv32_soc/count_instr [14] $abc$24037$new_n9424:
    0110 -> $auto$alumacc.cc:495:replace_alu$4404.Y [14]
  2-Input XOR/XNOR \rv32_soc/count_instr [15] $abc$24037$new_n9429:
    0110 -> $auto$alumacc.cc:495:replace_alu$4404.Y [15]
  2-Input XOR/XNOR \rv32_soc/count_instr [16] $abc$24037$new_n9434:
    0110 -> $auto$alumacc.cc:495:replace_alu$4404.Y [16]
  2-Input XOR/XNOR \rv32_soc/count_instr [17] $abc$24037$new_n9440:
    0110 -> $auto$alumacc.cc:495:replace_alu$4404.Y [17]
  2-Input XOR/XNOR \rv32_soc/count_instr [18] $abc$24037$new_n9446:
    0110 -> $auto$alumacc.cc:495:replace_alu$4404.Y [18]
  2-Input XOR/XNOR \rv32_soc/count_instr [19] $abc$24037$new_n9452:
    0110 -> $auto$alumacc.cc:495:replace_alu$4404.Y [19]
  2-Input XOR/XNOR \rv32_soc/count_instr [20] $abc$24037$new_n9458:
    0110 -> $auto$alumacc.cc:495:replace_alu$4404.Y [20]
  2-Input XOR/XNOR \rv32_soc/count_instr [21] $abc$24037$new_n9464:
    0110 -> $auto$alumacc.cc:495:replace_alu$4404.Y [21]
  2-Input XOR/XNOR \rv32_soc/count_instr [22] $abc$24037$new_n9470:
    0110 -> $auto$alumacc.cc:495:replace_alu$4404.Y [22]
  2-Input XOR/XNOR \rv32_soc/count_instr [23] $abc$24037$new_n9476:
    0110 -> $auto$alumacc.cc:495:replace_alu$4404.Y [23]
  2-Input XOR/XNOR \rv32_soc/count_instr [24] $abc$24037$new_n9482:
    0110 -> $auto$alumacc.cc:495:replace_alu$4404.Y [24]
  2-Input XOR/XNOR \rv32_soc/count_instr [25] $abc$24037$new_n9488:
    0110 -> $auto$alumacc.cc:495:replace_alu$4404.Y [25]
  2-Input XOR/XNOR \rv32_soc/count_instr [26] $abc$24037$new_n9494:
    0110 -> $auto$alumacc.cc:495:replace_alu$4404.Y [26]
  2-Input XOR/XNOR \rv32_soc/count_instr [27] $abc$24037$new_n9500:
    0110 -> $auto$alumacc.cc:495:replace_alu$4404.Y [27]
  2-Input XOR/XNOR \rv32_soc/count_instr [28] $abc$24037$new_n9506:
    0110 -> $auto$alumacc.cc:495:replace_alu$4404.Y [28]
  2-Input XOR/XNOR \rv32_soc/count_instr [29] $abc$24037$new_n9512:
    0110 -> $auto$alumacc.cc:495:replace_alu$4404.Y [29]
  2-Input XOR/XNOR \rv32_soc/count_instr [30] $abc$24037$new_n9518:
    0110 -> $auto$alumacc.cc:495:replace_alu$4404.Y [30]
  2-Input XOR/XNOR \rv32_soc/count_instr [31] $abc$24037$new_n9524:
    0110 -> $auto$alumacc.cc:495:replace_alu$4404.Y [31]
  2-Input XOR/XNOR \rv32_soc/count_instr [32] $abc$24037$new_n9530:
    0110 -> $auto$alumacc.cc:495:replace_alu$4404.Y [32]
  2-Input XOR/XNOR \rv32_soc/count_instr [33] $abc$24037$new_n9537:
    0110 -> $auto$alumacc.cc:495:replace_alu$4404.Y [33]
  2-Input XOR/XNOR \rv32_soc/count_instr [34] $abc$24037$new_n9544:
    0110 -> $auto$alumacc.cc:495:replace_alu$4404.Y [34]
  2-Input XOR/XNOR \rv32_soc/count_instr [35] $abc$24037$new_n9551:
    0110 -> $auto$alumacc.cc:495:replace_alu$4404.Y [35]
  2-Input XOR/XNOR \rv32_soc/count_instr [36] $abc$24037$new_n9558:
    0110 -> $auto$alumacc.cc:495:replace_alu$4404.Y [36]
  2-Input XOR/XNOR \rv32_soc/count_instr [37] $abc$24037$new_n9565:
    0110 -> $auto$alumacc.cc:495:replace_alu$4404.Y [37]
  2-Input XOR/XNOR \rv32_soc/count_instr [38] $abc$24037$new_n9572:
    0110 -> $auto$alumacc.cc:495:replace_alu$4404.Y [38]
  2-Input XOR/XNOR \rv32_soc/count_instr [39] $abc$24037$new_n9579:
    0110 -> $auto$alumacc.cc:495:replace_alu$4404.Y [39]
  2-Input XOR/XNOR \rv32_soc/count_instr [40] $abc$24037$new_n9586:
    0110 -> $auto$alumacc.cc:495:replace_alu$4404.Y [40]
  2-Input XOR/XNOR \rv32_soc/count_instr [41] $abc$24037$new_n9593:
    0110 -> $auto$alumacc.cc:495:replace_alu$4404.Y [41]
  2-Input XOR/XNOR \rv32_soc/count_instr [42] $abc$24037$new_n9600:
    0110 -> $auto$alumacc.cc:495:replace_alu$4404.Y [42]
  2-Input XOR/XNOR \rv32_soc/count_instr [43] $abc$24037$new_n9607:
    0110 -> $auto$alumacc.cc:495:replace_alu$4404.Y [43]
  2-Input XOR/XNOR \rv32_soc/count_instr [44] $abc$24037$new_n9614:
    0110 -> $auto$alumacc.cc:495:replace_alu$4404.Y [44]
  2-Input XOR/XNOR \rv32_soc/count_instr [45] $abc$24037$new_n9621:
    0110 -> $auto$alumacc.cc:495:replace_alu$4404.Y [45]
  2-Input XOR/XNOR \rv32_soc/count_instr [46] $abc$24037$new_n9628:
    0110 -> $auto$alumacc.cc:495:replace_alu$4404.Y [46]
  2-Input XOR/XNOR \rv32_soc/count_instr [47] $abc$24037$new_n9635:
    0110 -> $auto$alumacc.cc:495:replace_alu$4404.Y [47]
  2-Input XOR/XNOR \rv32_soc/count_instr [48] $abc$24037$new_n9642:
    0110 -> $auto$alumacc.cc:495:replace_alu$4404.Y [48]
  2-Input XOR/XNOR \rv32_soc/count_instr [49] $abc$24037$new_n9649:
    0110 -> $auto$alumacc.cc:495:replace_alu$4404.Y [49]
  2-Input XOR/XNOR \rv32_soc/count_instr [50] $abc$24037$new_n9656:
    0110 -> $auto$alumacc.cc:495:replace_alu$4404.Y [50]
  2-Input XOR/XNOR \rv32_soc/count_instr [51] $abc$24037$new_n9663:
    0110 -> $auto$alumacc.cc:495:replace_alu$4404.Y [51]
  2-Input XOR/XNOR \rv32_soc/count_instr [52] $abc$24037$new_n9670:
    0110 -> $auto$alumacc.cc:495:replace_alu$4404.Y [52]
  2-Input XOR/XNOR \rv32_soc/count_instr [53] $abc$24037$new_n9677:
    0110 -> $auto$alumacc.cc:495:replace_alu$4404.Y [53]
  2-Input XOR/XNOR \rv32_soc/count_instr [54] $abc$24037$new_n9684:
    0110 -> $auto$alumacc.cc:495:replace_alu$4404.Y [54]
  2-Input XOR/XNOR \rv32_soc/count_instr [55] $abc$24037$new_n9691:
    0110 -> $auto$alumacc.cc:495:replace_alu$4404.Y [55]
  2-Input XOR/XNOR \rv32_soc/count_instr [56] $abc$24037$new_n9698:
    0110 -> $auto$alumacc.cc:495:replace_alu$4404.Y [56]
  2-Input XOR/XNOR \rv32_soc/count_instr [57] $abc$24037$new_n9705:
    0110 -> $auto$alumacc.cc:495:replace_alu$4404.Y [57]
  2-Input XOR/XNOR \rv32_soc/count_instr [58] $abc$24037$new_n9712:
    0110 -> $auto$alumacc.cc:495:replace_alu$4404.Y [58]
  2-Input XOR/XNOR \rv32_soc/count_instr [59] $abc$24037$new_n9719:
    0110 -> $auto$alumacc.cc:495:replace_alu$4404.Y [59]
  2-Input XOR/XNOR \rv32_soc/count_instr [60] $abc$24037$new_n9726:
    0110 -> $auto$alumacc.cc:495:replace_alu$4404.Y [60]
  2-Input XOR/XNOR \rv32_soc/count_instr [61] $abc$24037$new_n9733:
    0110 -> $auto$alumacc.cc:495:replace_alu$4404.Y [61]
  2-Input XOR/XNOR \rv32_soc/count_instr [62] $abc$24037$new_n9740:
    0110 -> $auto$alumacc.cc:495:replace_alu$4404.Y [62]
  2-Input XOR/XNOR \rv32_soc/count_instr [63] $abc$24037$new_n9747:
    0110 -> $auto$alumacc.cc:495:replace_alu$4404.Y [63]
  2-Input XOR/XNOR \rv32_soc/count_cycle [0] \rv32_soc/count_cycle [1]:
    0110 -> $auto$alumacc.cc:495:replace_alu$4398.Y [1]
    AND without inversions:
      1000 -> $abc$24037$new_n9750
      Created $fa cell $auto$extract_fa.cc:504:run$34059.
  2-Input XOR/XNOR \rv32_soc/count_cycle [2] $abc$24037$new_n9750:
    0110 -> $auto$alumacc.cc:495:replace_alu$4398.Y [2]
  2-Input XOR/XNOR \rv32_soc/count_cycle [3] $abc$24037$new_n9753:
    0110 -> $auto$alumacc.cc:495:replace_alu$4398.Y [3]
  2-Input XOR/XNOR \rv32_soc/count_cycle [4] $abc$24037$new_n9756:
    0110 -> $auto$alumacc.cc:495:replace_alu$4398.Y [4]
  2-Input XOR/XNOR \rv32_soc/count_cycle [5] $abc$24037$new_n9760:
    0110 -> $auto$alumacc.cc:495:replace_alu$4398.Y [5]
  2-Input XOR/XNOR \rv32_soc/count_cycle [6] $abc$24037$new_n9764:
    0110 -> $auto$alumacc.cc:495:replace_alu$4398.Y [6]
  2-Input XOR/XNOR \rv32_soc/count_cycle [7] $abc$24037$new_n9768:
    0110 -> $auto$alumacc.cc:495:replace_alu$4398.Y [7]
  2-Input XOR/XNOR \rv32_soc/count_cycle [8] $abc$24037$new_n9772:
    0110 -> $auto$alumacc.cc:495:replace_alu$4398.Y [8]
  2-Input XOR/XNOR \rv32_soc/count_cycle [9] $abc$24037$new_n9777:
    0110 -> $auto$alumacc.cc:495:replace_alu$4398.Y [9]
  2-Input XOR/XNOR \rv32_soc/count_cycle [10] $abc$24037$new_n9782:
    0110 -> $auto$alumacc.cc:495:replace_alu$4398.Y [10]
  2-Input XOR/XNOR \rv32_soc/count_cycle [11] $abc$24037$new_n9787:
    0110 -> $auto$alumacc.cc:495:replace_alu$4398.Y [11]
  2-Input XOR/XNOR \rv32_soc/count_cycle [12] $abc$24037$new_n9792:
    0110 -> $auto$alumacc.cc:495:replace_alu$4398.Y [12]
  2-Input XOR/XNOR \rv32_soc/count_cycle [13] $abc$24037$new_n9797:
    0110 -> $auto$alumacc.cc:495:replace_alu$4398.Y [13]
  2-Input XOR/XNOR \rv32_soc/count_cycle [14] $abc$24037$new_n9802:
    0110 -> $auto$alumacc.cc:495:replace_alu$4398.Y [14]
  2-Input XOR/XNOR \rv32_soc/count_cycle [15] $abc$24037$new_n9807:
    0110 -> $auto$alumacc.cc:495:replace_alu$4398.Y [15]
  2-Input XOR/XNOR \rv32_soc/count_cycle [16] $abc$24037$new_n9812:
    0110 -> $auto$alumacc.cc:495:replace_alu$4398.Y [16]
  2-Input XOR/XNOR \rv32_soc/count_cycle [17] $abc$24037$new_n9818:
    0110 -> $auto$alumacc.cc:495:replace_alu$4398.Y [17]
  2-Input XOR/XNOR \rv32_soc/count_cycle [18] $abc$24037$new_n9824:
    0110 -> $auto$alumacc.cc:495:replace_alu$4398.Y [18]
  2-Input XOR/XNOR \rv32_soc/count_cycle [19] $abc$24037$new_n9830:
    0110 -> $auto$alumacc.cc:495:replace_alu$4398.Y [19]
  2-Input XOR/XNOR \rv32_soc/count_cycle [20] $abc$24037$new_n9836:
    0110 -> $auto$alumacc.cc:495:replace_alu$4398.Y [20]
  2-Input XOR/XNOR \rv32_soc/count_cycle [21] $abc$24037$new_n9842:
    0110 -> $auto$alumacc.cc:495:replace_alu$4398.Y [21]
  2-Input XOR/XNOR \rv32_soc/count_cycle [22] $abc$24037$new_n9848:
    0110 -> $auto$alumacc.cc:495:replace_alu$4398.Y [22]
  2-Input XOR/XNOR \rv32_soc/count_cycle [23] $abc$24037$new_n9854:
    0110 -> $auto$alumacc.cc:495:replace_alu$4398.Y [23]
  2-Input XOR/XNOR \rv32_soc/count_cycle [24] $abc$24037$new_n9860:
    0110 -> $auto$alumacc.cc:495:replace_alu$4398.Y [24]
  2-Input XOR/XNOR \rv32_soc/count_cycle [25] $abc$24037$new_n9866:
    0110 -> $auto$alumacc.cc:495:replace_alu$4398.Y [25]
  2-Input XOR/XNOR \rv32_soc/count_cycle [26] $abc$24037$new_n9872:
    0110 -> $auto$alumacc.cc:495:replace_alu$4398.Y [26]
  2-Input XOR/XNOR \rv32_soc/count_cycle [27] $abc$24037$new_n9878:
    0110 -> $auto$alumacc.cc:495:replace_alu$4398.Y [27]
  2-Input XOR/XNOR \rv32_soc/count_cycle [28] $abc$24037$new_n9884:
    0110 -> $auto$alumacc.cc:495:replace_alu$4398.Y [28]
  2-Input XOR/XNOR \rv32_soc/count_cycle [29] $abc$24037$new_n9890:
    0110 -> $auto$alumacc.cc:495:replace_alu$4398.Y [29]
  2-Input XOR/XNOR \rv32_soc/count_cycle [30] $abc$24037$new_n9896:
    0110 -> $auto$alumacc.cc:495:replace_alu$4398.Y [30]
  2-Input XOR/XNOR \rv32_soc/count_cycle [31] $abc$24037$new_n9902:
    0110 -> $auto$alumacc.cc:495:replace_alu$4398.Y [31]
  2-Input XOR/XNOR \rv32_soc/count_cycle [32] $abc$24037$new_n9908:
    0110 -> $auto$alumacc.cc:495:replace_alu$4398.Y [32]
  2-Input XOR/XNOR \rv32_soc/count_cycle [33] $abc$24037$new_n9915:
    0110 -> $auto$alumacc.cc:495:replace_alu$4398.Y [33]
  2-Input XOR/XNOR \rv32_soc/count_cycle [34] $abc$24037$new_n9922:
    0110 -> $auto$alumacc.cc:495:replace_alu$4398.Y [34]
  2-Input XOR/XNOR \rv32_soc/count_cycle [35] $abc$24037$new_n9929:
    0110 -> $auto$alumacc.cc:495:replace_alu$4398.Y [35]
  2-Input XOR/XNOR \rv32_soc/count_cycle [36] $abc$24037$new_n9936:
    0110 -> $auto$alumacc.cc:495:replace_alu$4398.Y [36]
  2-Input XOR/XNOR \rv32_soc/count_cycle [37] $abc$24037$new_n9943:
    0110 -> $auto$alumacc.cc:495:replace_alu$4398.Y [37]
  2-Input XOR/XNOR \rv32_soc/count_cycle [38] $abc$24037$new_n9950:
    0110 -> $auto$alumacc.cc:495:replace_alu$4398.Y [38]
  2-Input XOR/XNOR \rv32_soc/count_cycle [39] $abc$24037$new_n9957:
    0110 -> $auto$alumacc.cc:495:replace_alu$4398.Y [39]
  2-Input XOR/XNOR \rv32_soc/count_cycle [40] $abc$24037$new_n9964:
    0110 -> $auto$alumacc.cc:495:replace_alu$4398.Y [40]
  2-Input XOR/XNOR \rv32_soc/count_cycle [41] $abc$24037$new_n9971:
    0110 -> $auto$alumacc.cc:495:replace_alu$4398.Y [41]
  2-Input XOR/XNOR \rv32_soc/count_cycle [42] $abc$24037$new_n9978:
    0110 -> $auto$alumacc.cc:495:replace_alu$4398.Y [42]
  2-Input XOR/XNOR \rv32_soc/count_cycle [43] $abc$24037$new_n9985:
    0110 -> $auto$alumacc.cc:495:replace_alu$4398.Y [43]
  2-Input XOR/XNOR \rv32_soc/count_cycle [44] $abc$24037$new_n9992:
    0110 -> $auto$alumacc.cc:495:replace_alu$4398.Y [44]
  2-Input XOR/XNOR \rv32_soc/count_cycle [45] $abc$24037$new_n9999:
    0110 -> $auto$alumacc.cc:495:replace_alu$4398.Y [45]
  2-Input XOR/XNOR \rv32_soc/count_cycle [46] $abc$24037$new_n10006:
    0110 -> $auto$alumacc.cc:495:replace_alu$4398.Y [46]
  2-Input XOR/XNOR \rv32_soc/count_cycle [47] $abc$24037$new_n10013:
    0110 -> $auto$alumacc.cc:495:replace_alu$4398.Y [47]
  2-Input XOR/XNOR \rv32_soc/count_cycle [48] $abc$24037$new_n10020:
    0110 -> $auto$alumacc.cc:495:replace_alu$4398.Y [48]
  2-Input XOR/XNOR \rv32_soc/count_cycle [49] $abc$24037$new_n10027:
    0110 -> $auto$alumacc.cc:495:replace_alu$4398.Y [49]
  2-Input XOR/XNOR \rv32_soc/count_cycle [50] $abc$24037$new_n10034:
    0110 -> $auto$alumacc.cc:495:replace_alu$4398.Y [50]
  2-Input XOR/XNOR \rv32_soc/count_cycle [51] $abc$24037$new_n10041:
    0110 -> $auto$alumacc.cc:495:replace_alu$4398.Y [51]
  2-Input XOR/XNOR \rv32_soc/count_cycle [52] $abc$24037$new_n10048:
    0110 -> $auto$alumacc.cc:495:replace_alu$4398.Y [52]
  2-Input XOR/XNOR \rv32_soc/count_cycle [53] $abc$24037$new_n10055:
    0110 -> $auto$alumacc.cc:495:replace_alu$4398.Y [53]
  2-Input XOR/XNOR \rv32_soc/count_cycle [54] $abc$24037$new_n10062:
    0110 -> $auto$alumacc.cc:495:replace_alu$4398.Y [54]
  2-Input XOR/XNOR \rv32_soc/count_cycle [55] $abc$24037$new_n10069:
    0110 -> $auto$alumacc.cc:495:replace_alu$4398.Y [55]
  2-Input XOR/XNOR \rv32_soc/count_cycle [56] $abc$24037$new_n10076:
    0110 -> $auto$alumacc.cc:495:replace_alu$4398.Y [56]
  2-Input XOR/XNOR \rv32_soc/count_cycle [57] $abc$24037$new_n10083:
    0110 -> $auto$alumacc.cc:495:replace_alu$4398.Y [57]
  2-Input XOR/XNOR \rv32_soc/count_cycle [58] $abc$24037$new_n10090:
    0110 -> $auto$alumacc.cc:495:replace_alu$4398.Y [58]
  2-Input XOR/XNOR \rv32_soc/count_cycle [59] $abc$24037$new_n10097:
    0110 -> $auto$alumacc.cc:495:replace_alu$4398.Y [59]
  2-Input XOR/XNOR \rv32_soc/count_cycle [60] $abc$24037$new_n10104:
    0110 -> $auto$alumacc.cc:495:replace_alu$4398.Y [60]
  2-Input XOR/XNOR \rv32_soc/count_cycle [61] $abc$24037$new_n10111:
    0110 -> $auto$alumacc.cc:495:replace_alu$4398.Y [61]
  2-Input XOR/XNOR \rv32_soc/count_cycle [62] $abc$24037$new_n10118:
    0110 -> $auto$alumacc.cc:495:replace_alu$4398.Y [62]
  2-Input XOR/XNOR \rv32_soc/count_cycle [63] $abc$24037$new_n10125:
    0110 -> $auto$alumacc.cc:495:replace_alu$4398.Y [63]

yosys> techmap -map /nfs/sc_compute/cache/lambdapdk-v0.1.50/lambdapdk/sky130/libs/sky130hd/techmap/yosys/cells_adders.v

13. Executing TECHMAP pass (map to technology primitives).

13.1. Executing Verilog-2005 frontend: /nfs/sc_compute/cache/lambdapdk-v0.1.50/lambdapdk/sky130/libs/sky130hd/techmap/yosys/cells_adders.v
Parsing Verilog input from `/nfs/sc_compute/cache/lambdapdk-v0.1.50/lambdapdk/sky130/libs/sky130hd/techmap/yosys/cells_adders.v' to AST representation.
Generating RTLIL representation for module `\_tech_fa'.
Successfully finished Verilog frontend.

13.2. Continuing TECHMAP pass.
Using template $paramod$2fcc834c4319f5120e47ab5a569b231ddfd641fa\_tech_fa for cells of type $fa.
Using template $paramod$366b53aa83fc1f56a6a9bf0b408f4c58a4c2aa2e\_tech_fa for cells of type $fa.
No more expansions possible.
<suppressed ~246 debug messages>

yosys> techmap

14. Executing TECHMAP pass (map to technology primitives).

14.1. Executing Verilog-2005 frontend: /sc_tools/bin/../share/yosys/techmap.v
Parsing Verilog input from `/sc_tools/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

14.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~75 debug messages>

yosys> opt -fast -purge

15. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

15.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32_top.
<suppressed ~8 debug messages>

yosys> opt_merge

15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32_top'.
<suppressed ~219 debug messages>
Removed a total of 73 cells.

yosys> opt_dff

15.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean -purge

15.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32_top..
Removed 442 unused cells and 1948 unused wires.
<suppressed ~443 debug messages>

15.5. Finished fast OPT passes.

yosys> techmap -map /nfs/sc_compute/cache/lambdapdk-v0.1.50/lambdapdk/sky130/libs/sky130hd/techmap/yosys/cells_latch.v

16. Executing TECHMAP pass (map to technology primitives).

16.1. Executing Verilog-2005 frontend: /nfs/sc_compute/cache/lambdapdk-v0.1.50/lambdapdk/sky130/libs/sky130hd/techmap/yosys/cells_latch.v
Parsing Verilog input from `/nfs/sc_compute/cache/lambdapdk-v0.1.50/lambdapdk/sky130/libs/sky130hd/techmap/yosys/cells_latch.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Successfully finished Verilog frontend.

16.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

yosys> techmap

17. Executing TECHMAP pass (map to technology primitives).

17.1. Executing Verilog-2005 frontend: /sc_tools/bin/../share/yosys/techmap.v
Parsing Verilog input from `/sc_tools/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

17.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~75 debug messages>

yosys> opt -fast -purge

18. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

18.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32_top.

yosys> opt_merge

18.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32_top'.
Removed a total of 0 cells.

yosys> opt_dff

18.3. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean -purge

18.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32_top..

18.5. Finished fast OPT passes.

yosys> rename -wire

yosys> dfflibmap -dont_use sky130_fd_sc_hd__probe_p_8 -dont_use sky130_fd_sc_hd__probec_p_8 -dont_use sky130_fd_sc_hd__lpflow_bleeder_1 -dont_use sky130_fd_sc_hd__lpflow_clkbufkapwr_1 -dont_use sky130_fd_sc_hd__lpflow_clkbufkapwr_16 -dont_use sky130_fd_sc_hd__lpflow_clkbufkapwr_2 -dont_use sky130_fd_sc_hd__lpflow_clkbufkapwr_4 -dont_use sky130_fd_sc_hd__lpflow_clkbufkapwr_8 -dont_use sky130_fd_sc_hd__lpflow_clkinvkapwr_1 -dont_use sky130_fd_sc_hd__lpflow_clkinvkapwr_16 -dont_use sky130_fd_sc_hd__lpflow_clkinvkapwr_2 -dont_use sky130_fd_sc_hd__lpflow_clkinvkapwr_4 -dont_use sky130_fd_sc_hd__lpflow_clkinvkapwr_8 -dont_use sky130_fd_sc_hd__lpflow_decapkapwr_12 -dont_use sky130_fd_sc_hd__lpflow_decapkapwr_3 -dont_use sky130_fd_sc_hd__lpflow_decapkapwr_4 -dont_use sky130_fd_sc_hd__lpflow_decapkapwr_6 -dont_use sky130_fd_sc_hd__lpflow_decapkapwr_8 -dont_use sky130_fd_sc_hd__lpflow_inputiso0n_1 -dont_use sky130_fd_sc_hd__lpflow_inputiso0p_1 -dont_use sky130_fd_sc_hd__lpflow_inputiso1n_1 -dont_use sky130_fd_sc_hd__lpflow_inputiso1p_1 -dont_use sky130_fd_sc_hd__lpflow_inputisolatch_1 -dont_use sky130_fd_sc_hd__lpflow_isobufsrc_1 -dont_use sky130_fd_sc_hd__lpflow_isobufsrc_16 -dont_use sky130_fd_sc_hd__lpflow_isobufsrc_2 -dont_use sky130_fd_sc_hd__lpflow_isobufsrc_4 -dont_use sky130_fd_sc_hd__lpflow_isobufsrc_8 -dont_use sky130_fd_sc_hd__lpflow_isobufsrckapwr_16 -dont_use sky130_fd_sc_hd__lpflow_lsbuf_lh_hl_isowell_tap_1 -dont_use sky130_fd_sc_hd__lpflow_lsbuf_lh_hl_isowell_tap_2 -dont_use sky130_fd_sc_hd__lpflow_lsbuf_lh_hl_isowell_tap_4 -dont_use sky130_fd_sc_hd__lpflow_lsbuf_lh_isowell_4 -dont_use sky130_fd_sc_hd__lpflow_lsbuf_lh_isowell_tap_1 -dont_use sky130_fd_sc_hd__lpflow_lsbuf_lh_isowell_tap_2 -dont_use sky130_fd_sc_hd__lpflow_lsbuf_lh_isowell_tap_4 -liberty /nfs/sc_compute/builds/0dc368a6940a4df4bc65e8967a8d3eeb/picorv32_top/job0/syn/0/inputs/sc_logic_sky130hd_sky130_fd_sc_hd__ss_n40C_1v40.lib

19. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
  cell sky130_fd_sc_hd__dfxtp_1 (noninv, pins=3, area=20.02) is a direct match for cell type $_DFF_P_.
  cell sky130_fd_sc_hd__dfrtn_1 (noninv, pins=4, area=25.02) is a direct match for cell type $_DFF_NN0_.
  cell sky130_fd_sc_hd__dfrtp_1 (noninv, pins=4, area=25.02) is a direct match for cell type $_DFF_PN0_.
  cell sky130_fd_sc_hd__dfstp_2 (noninv, pins=4, area=26.28) is a direct match for cell type $_DFF_PN1_.
  cell sky130_fd_sc_hd__edfxtp_1 (noninv, pins=4, area=30.03) is a direct match for cell type $_DFFE_PP_.
  cell sky130_fd_sc_hd__dfbbn_1 (noninv, pins=6, area=32.53) is a direct match for cell type $_DFFSR_NNN_.
  cell sky130_fd_sc_hd__dfbbp_1 (noninv, pins=6, area=32.53) is a direct match for cell type $_DFFSR_PNN_.
  final dff cell mappings:
    unmapped dff cell: $_DFF_N_
    \sky130_fd_sc_hd__dfxtp_1 _DFF_P_ (.CLK( C), .D( D), .Q( Q));
    \sky130_fd_sc_hd__dfrtn_1 _DFF_NN0_ (.CLK_N( C), .D( D), .Q( Q), .RESET_B( R));
    unmapped dff cell: $_DFF_NN1_
    unmapped dff cell: $_DFF_NP0_
    unmapped dff cell: $_DFF_NP1_
    \sky130_fd_sc_hd__dfrtp_1 _DFF_PN0_ (.CLK( C), .D( D), .Q( Q), .RESET_B( R));
    \sky130_fd_sc_hd__dfstp_2 _DFF_PN1_ (.CLK( C), .D( D), .Q( Q), .SET_B( R));
    unmapped dff cell: $_DFF_PP0_
    unmapped dff cell: $_DFF_PP1_
    unmapped dff cell: $_DFFE_NN_
    unmapped dff cell: $_DFFE_NP_
    unmapped dff cell: $_DFFE_PN_
    \sky130_fd_sc_hd__edfxtp_1 _DFFE_PP_ (.CLK( C), .D( D), .DE( E), .Q( Q));
    \sky130_fd_sc_hd__dfbbn_1 _DFFSR_NNN_ (.CLK_N( C), .D( D), .Q( Q), .Q_N(~Q), .RESET_B( R), .SET_B( S));
    unmapped dff cell: $_DFFSR_NNP_
    unmapped dff cell: $_DFFSR_NPN_
    unmapped dff cell: $_DFFSR_NPP_
    \sky130_fd_sc_hd__dfbbp_1 _DFFSR_PNN_ (.CLK( C), .D( D), .Q( Q), .Q_N(~Q), .RESET_B( R), .SET_B( S));
    unmapped dff cell: $_DFFSR_PNP_
    unmapped dff cell: $_DFFSR_PPN_
    unmapped dff cell: $_DFFSR_PPP_

yosys> dfflegalize -cell $_DFF_P_ 01 -cell $_DFFE_PP_ 01 -cell $_DFF_NN0_ 01 -cell $_DFF_PN0_ 01 -cell $_DFF_PN1_ 01 -cell $_DFFSR_NNN_ 01 -cell $_DFFSR_PNN_ 01 t:$_DFF* t:$_SDFF*

19.1. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).
<suppressed ~24 debug messages>
Mapping DFF cells in module `\picorv32_top':
  mapped 1256 $_DFFE_PP_ cells to \sky130_fd_sc_hd__edfxtp_1 cells.
  mapped 318 $_DFF_P_ cells to \sky130_fd_sc_hd__dfxtp_1 cells.

yosys> techmap

20. Executing TECHMAP pass (map to technology primitives).

20.1. Executing Verilog-2005 frontend: /sc_tools/bin/../share/yosys/techmap.v
Parsing Verilog input from `/sc_tools/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

20.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~75 debug messages>

yosys> opt -purge

21. Executing OPT pass (performing simple optimizations).

yosys> opt_expr

21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32_top.

yosys> opt_merge -nomux

21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32_top'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

yosys> opt_muxtree

21.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \picorv32_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

21.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \picorv32_top.
Performed a total of 0 changes.

yosys> opt_merge

21.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32_top'.
Removed a total of 0 cells.

yosys> opt_dff

21.6. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean -purge

21.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32_top..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

yosys> opt_expr

21.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32_top.

21.9. Rerunning OPT passes. (Maybe there is more to do..)

yosys> opt_muxtree

21.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \picorv32_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

yosys> opt_reduce

21.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \picorv32_top.
Performed a total of 0 changes.

yosys> opt_merge

21.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\picorv32_top'.
Removed a total of 0 cells.

yosys> opt_dff

21.13. Executing OPT_DFF pass (perform DFF optimizations).

yosys> opt_clean -purge

21.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \picorv32_top..

yosys> opt_expr

21.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module picorv32_top.

21.16. Finished OPT passes. (There is nothing left to do.)

yosys> abc -D 25000 -constr /nfs/sc_compute/builds/0dc368a6940a4df4bc65e8967a8d3eeb/picorv32_top/job0/syn/0/inputs/sc_abc.constraints -liberty /nfs/sc_compute/builds/0dc368a6940a4df4bc65e8967a8d3eeb/picorv32_top/job0/syn/0/inputs/sc_logic_sky130hd_sky130_fd_sc_hd__ss_n40C_1v40.lib -dont_use sky130_fd_sc_hd__probe_p_8 -dont_use sky130_fd_sc_hd__probec_p_8 -dont_use sky130_fd_sc_hd__lpflow_bleeder_1 -dont_use sky130_fd_sc_hd__lpflow_clkbufkapwr_1 -dont_use sky130_fd_sc_hd__lpflow_clkbufkapwr_16 -dont_use sky130_fd_sc_hd__lpflow_clkbufkapwr_2 -dont_use sky130_fd_sc_hd__lpflow_clkbufkapwr_4 -dont_use sky130_fd_sc_hd__lpflow_clkbufkapwr_8 -dont_use sky130_fd_sc_hd__lpflow_clkinvkapwr_1 -dont_use sky130_fd_sc_hd__lpflow_clkinvkapwr_16 -dont_use sky130_fd_sc_hd__lpflow_clkinvkapwr_2 -dont_use sky130_fd_sc_hd__lpflow_clkinvkapwr_4 -dont_use sky130_fd_sc_hd__lpflow_clkinvkapwr_8 -dont_use sky130_fd_sc_hd__lpflow_decapkapwr_12 -dont_use sky130_fd_sc_hd__lpflow_decapkapwr_3 -dont_use sky130_fd_sc_hd__lpflow_decapkapwr_4 -dont_use sky130_fd_sc_hd__lpflow_decapkapwr_6 -dont_use sky130_fd_sc_hd__lpflow_decapkapwr_8 -dont_use sky130_fd_sc_hd__lpflow_inputiso0n_1 -dont_use sky130_fd_sc_hd__lpflow_inputiso0p_1 -dont_use sky130_fd_sc_hd__lpflow_inputiso1n_1 -dont_use sky130_fd_sc_hd__lpflow_inputiso1p_1 -dont_use sky130_fd_sc_hd__lpflow_inputisolatch_1 -dont_use sky130_fd_sc_hd__lpflow_isobufsrc_1 -dont_use sky130_fd_sc_hd__lpflow_isobufsrc_16 -dont_use sky130_fd_sc_hd__lpflow_isobufsrc_2 -dont_use sky130_fd_sc_hd__lpflow_isobufsrc_4 -dont_use sky130_fd_sc_hd__lpflow_isobufsrc_8 -dont_use sky130_fd_sc_hd__lpflow_isobufsrckapwr_16 -dont_use sky130_fd_sc_hd__lpflow_lsbuf_lh_hl_isowell_tap_1 -dont_use sky130_fd_sc_hd__lpflow_lsbuf_lh_hl_isowell_tap_2 -dont_use sky130_fd_sc_hd__lpflow_lsbuf_lh_hl_isowell_tap_4 -dont_use sky130_fd_sc_hd__lpflow_lsbuf_lh_isowell_4 -dont_use sky130_fd_sc_hd__lpflow_lsbuf_lh_isowell_tap_1 -dont_use sky130_fd_sc_hd__lpflow_lsbuf_lh_isowell_tap_2 -dont_use sky130_fd_sc_hd__lpflow_lsbuf_lh_isowell_tap_4 -dont_use sky130_fd_sc_hd__dlygate4sd1_1 -dont_use sky130_fd_sc_hd__dlygate4sd2_1 -dont_use sky130_fd_sc_hd__dlygate4sd3_1 -dont_use sky130_fd_sc_hd__dlymetal6s2s_1 -dont_use sky130_fd_sc_hd__dlymetal6s4s_1 -dont_use sky130_fd_sc_hd__dlymetal6s6s_1 -dont_use sky130_fd_sc_hd__clkbuf_1 -dont_use sky130_fd_sc_hd__clkbuf_2 -dont_use sky130_fd_sc_hd__clkbuf_4 -dont_use sky130_fd_sc_hd__clkbuf_8 -dont_use sky130_fd_sc_hd__clkbuf_16

22. Executing ABC pass (technology mapping using ABC).

22.1. Extracting gate netlist of module `\picorv32_top' to `<abc-temp-dir>/input.blif'..
Extracted 8373 gates and 10282 wires to a netlist network with 1907 inputs and 720 outputs.

22.1.1. Executing ABC.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -X sky130_fd_sc_hd__probe_p_8 -X sky130_fd_sc_hd__probec_p_8 -X sky130_fd_sc_hd__lpflow_bleeder_1 -X sky130_fd_sc_hd__lpflow_clkbufkapwr_1 -X sky130_fd_sc_hd__lpflow_clkbufkapwr_16 -X sky130_fd_sc_hd__lpflow_clkbufkapwr_2 -X sky130_fd_sc_hd__lpflow_clkbufkapwr_4 -X sky130_fd_sc_hd__lpflow_clkbufkapwr_8 -X sky130_fd_sc_hd__lpflow_clkinvkapwr_1 -X sky130_fd_sc_hd__lpflow_clkinvkapwr_16 -X sky130_fd_sc_hd__lpflow_clkinvkapwr_2 -X sky130_fd_sc_hd__lpflow_clkinvkapwr_4 -X sky130_fd_sc_hd__lpflow_clkinvkapwr_8 -X sky130_fd_sc_hd__lpflow_decapkapwr_12 -X sky130_fd_sc_hd__lpflow_decapkapwr_3 -X sky130_fd_sc_hd__lpflow_decapkapwr_4 -X sky130_fd_sc_hd__lpflow_decapkapwr_6 -X sky130_fd_sc_hd__lpflow_decapkapwr_8 -X sky130_fd_sc_hd__lpflow_inputiso0n_1 -X sky130_fd_sc_hd__lpflow_inputiso0p_1 -X sky130_fd_sc_hd__lpflow_inputiso1n_1 -X sky130_fd_sc_hd__lpflow_inputiso1p_1 -X sky130_fd_sc_hd__lpflow_inputisolatch_1 -X sky130_fd_sc_hd__lpflow_isobufsrc_1 -X sky130_fd_sc_hd__lpflow_isobufsrc_16 -X sky130_fd_sc_hd__lpflow_isobufsrc_2 -X sky130_fd_sc_hd__lpflow_isobufsrc_4 -X sky130_fd_sc_hd__lpflow_isobufsrc_8 -X sky130_fd_sc_hd__lpflow_isobufsrckapwr_16 -X sky130_fd_sc_hd__lpflow_lsbuf_lh_hl_isowell_tap_1 -X sky130_fd_sc_hd__lpflow_lsbuf_lh_hl_isowell_tap_2 -X sky130_fd_sc_hd__lpflow_lsbuf_lh_hl_isowell_tap_4 -X sky130_fd_sc_hd__lpflow_lsbuf_lh_isowell_4 -X sky130_fd_sc_hd__lpflow_lsbuf_lh_isowell_tap_1 -X sky130_fd_sc_hd__lpflow_lsbuf_lh_isowell_tap_2 -X sky130_fd_sc_hd__lpflow_lsbuf_lh_isowell_tap_4 -X sky130_fd_sc_hd__dlygate4sd1_1 -X sky130_fd_sc_hd__dlygate4sd2_1 -X sky130_fd_sc_hd__dlygate4sd3_1 -X sky130_fd_sc_hd__dlymetal6s2s_1 -X sky130_fd_sc_hd__dlymetal6s4s_1 -X sky130_fd_sc_hd__dlymetal6s6s_1 -X sky130_fd_sc_hd__clkbuf_1 -X sky130_fd_sc_hd__clkbuf_2 -X sky130_fd_sc_hd__clkbuf_4 -X sky130_fd_sc_hd__clkbuf_8 -X sky130_fd_sc_hd__clkbuf_16 -w /nfs/sc_compute/builds/0dc368a6940a4df4bc65e8967a8d3eeb/picorv32_top/job0/syn/0/inputs/sc_logic_sky130hd_sky130_fd_sc_hd__ss_n40C_1v40.lib 
ABC: Parsing finished successfully.  Parsing time =     0.11 sec
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__clkbuf_1" due to dont_use attribute.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__clkbuf_16" due to dont_use attribute.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__clkbuf_2" due to dont_use attribute.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__clkbuf_4" due to dont_use attribute.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__clkbuf_8" due to dont_use attribute.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_12" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_3" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_6" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__decap_8" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__diode_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlclkp_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtn_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dlxtp_1".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlygate4sd1_1" due to dont_use attribute.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlygate4sd2_1" due to dont_use attribute.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlygate4sd3_1" due to dont_use attribute.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlymetal6s2s_1" due to dont_use attribute.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlymetal6s4s_1" due to dont_use attribute.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__dlymetal6s6s_1" due to dont_use attribute.
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__ebufn_8".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__edfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__edfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_0".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvn_8".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_2".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_4".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "sky130_fd_sc_hd__einvp_8".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_bleeder_1" due to dont_use attribute.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_clkbufkapwr_1" due to dont_use attribute.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_clkbufkapwr_16" due to dont_use attribute.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_clkbufkapwr_2" due to dont_use attribute.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_clkbufkapwr_4" due to dont_use attribute.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_clkbufkapwr_8" due to dont_use attribute.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_clkinvkapwr_1" due to dont_use attribute.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_clkinvkapwr_16" due to dont_use attribute.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_clkinvkapwr_2" due to dont_use attribute.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_clkinvkapwr_4" due to dont_use attribute.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_clkinvkapwr_8" due to dont_use attribute.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_12" due to dont_use attribute.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_3" due to dont_use attribute.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_4" due to dont_use attribute.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_6" due to dont_use attribute.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_decapkapwr_8" due to dont_use attribute.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_inputiso0n_1" due to dont_use attribute.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_inputiso0p_1" due to dont_use attribute.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_inputiso1n_1" due to dont_use attribute.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_inputiso1p_1" due to dont_use attribute.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__lpflow_inputisolatch_1".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_isobufsrc_1" due to dont_use attribute.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_isobufsrc_16" due to dont_use attribute.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_isobufsrc_2" due to dont_use attribute.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_isobufsrc_4" due to dont_use attribute.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_isobufsrc_8" due to dont_use attribute.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_isobufsrckapwr_16" due to dont_use attribute.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_lsbuf_lh_hl_isowell_tap_1" due to dont_use attribute.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_lsbuf_lh_hl_isowell_tap_2" due to dont_use attribute.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_lsbuf_lh_hl_isowell_tap_4" due to dont_use attribute.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_lsbuf_lh_isowell_4" due to dont_use attribute.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_lsbuf_lh_isowell_tap_1" due to dont_use attribute.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_lsbuf_lh_isowell_tap_2" due to dont_use attribute.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__lpflow_lsbuf_lh_isowell_tap_4" due to dont_use attribute.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__probe_p_8" due to dont_use attribute.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__probec_p_8" due to dont_use attribute.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfbbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtn_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfsbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfsbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sdfxtp_4".
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_1" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_2" without logic function.
ABC: Scl_LibertyReadGenlib() skipped cell "sky130_fd_sc_hd__sdlclkp_4" without logic function.
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxbp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__sedfxtp_4".
ABC: Library "sky130_fd_sc_hd__ss_n40C_1v40" from "/nfs/sc_compute/builds/0dc368a6940a4df4bc65e8967a8d3eeb/picorv32_top/job0/syn/0/inputs/sc_logic_sky130hd_sky130_fd_sc_hd__ss_n40C_1v40.lib" has 294 cells (88 skipped: 63 seq; 13 tri-state; 12 no func; 46 dont_use).  Time =     0.20 sec
ABC: Memory =   19.85 MB. Time =     0.20 sec
ABC: Warning: Detected 9 multi-output gates (for example, "sky130_fd_sc_hd__fa_1").
ABC: + read_constr -v /nfs/sc_compute/builds/0dc368a6940a4df4bc65e8967a8d3eeb/picorv32_top/job0/syn/0/inputs/sc_abc.constraints 
ABC: Setting driving cell to be "sky130_fd_sc_hd__buf_4".
ABC: Setting output load to be 11.000000.
ABC: + strash 
ABC: + &get -n 
ABC: + &fraig -x 
ABC: + &put 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime -o -D 25000 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf -D 25000 
ABC: + &put 
ABC: + buffer 
ABC: + upsize -D 25000 
ABC: Current delay (22944.07 ps) does not exceed the target delay (25000.00 ps). Upsizing is not performed.
ABC: + dnsize -D 25000 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =   4516 ( 13.4 %)   Cap =  5.5 ff (  8.1 %)   Area =    33707.33 ( 71.5 %)   Delay = 21974.97 ps  (  0.9 %)               
ABC: Path  0 --     148 : 0    1 pi                       A =   0.00  Df =  17.8   -5.9 ps  S =  66.4 ps  Cin =  0.0 ff  Cout =   1.9 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --    2888 : 1    6 sky130_fd_sc_hd__buf_1   A =   3.75  Df = 939.7 -461.9 ps  S =1055.7 ps  Cin =  1.8 ff  Cout =  23.0 ff  Cmax = 228.1 ff  G = 1243  
ABC: Path  2 --    2889 : 1   10 sky130_fd_sc_hd__buf_1   A =   3.75  Df =2890.4-1675.4 ps  S =1796.2 ps  Cin =  1.8 ff  Cout =  39.9 ff  Cmax = 228.1 ff  G = 2157  
ABC: Path  3 --    2916 : 3    2 sky130_fd_sc_hd__mux2i_1 A =  10.01  Df =4183.8-2028.5 ps  S = 580.3 ps  Cin =  2.7 ff  Cout =   3.8 ff  Cmax = 103.8 ff  G =  135  
ABC: Path  4 --    2918 : 3    6 sky130_fd_sc_hd__o21a_1  A =   7.51  Df =5063.5-2071.5 ps  S = 535.4 ps  Cin =  2.1 ff  Cout =  13.8 ff  Cmax = 286.9 ff  G =  637  
ABC: Path  5 --    5907 : 4    3 sky130_fd_sc_hd__or4_1   A =   7.51  Df =8006.7-3860.1 ps  S = 339.3 ps  Cin =  1.3 ff  Cout =   4.9 ff  Cmax = 330.4 ff  G =  358  
ABC: Path  6 --    5931 : 3    3 sky130_fd_sc_hd__or3_1   A =   6.26  Df =9867.9-5315.5 ps  S = 265.1 ps  Cin =  1.3 ff  Cout =   6.5 ff  Cmax = 329.6 ff  G =  466  
ABC: Path  7 --    5972 : 4    2 sky130_fd_sc_hd__nor4_1  A =   6.26  Df =11292.6-6537.8 ps  S =1545.9 ps  Cin =  2.1 ff  Cout =   6.2 ff  Cmax =  54.9 ff  G =  287  
ABC: Path  8 --    5993 : 2    2 sky130_fd_sc_hd__nand2_1 A =   3.75  Df =12063.8-6354.4 ps  S = 209.8 ps  Cin =  2.0 ff  Cout =   4.4 ff  Cmax = 320.4 ff  G =  205  
ABC: Path  9 --    6016 : 4    2 sky130_fd_sc_hd__nor4_1  A =   6.26  Df =13464.4-7577.1 ps  S =1546.2 ps  Cin =  2.1 ff  Cout =   6.2 ff  Cmax =  54.9 ff  G =  287  
ABC: Path 10 --    6038 : 2    2 sky130_fd_sc_hd__nand2_1 A =   3.75  Df =14217.4-7228.6 ps  S = 199.2 ps  Cin =  2.0 ff  Cout =   3.7 ff  Cmax = 320.4 ff  G =  175  
ABC: Path 11 --    6039 : 3    3 sky130_fd_sc_hd__nor3_1  A =   5.00  Df =15124.0-7975.9 ps  S = 937.5 ps  Cin =  2.1 ff  Cout =   5.5 ff  Cmax =  82.4 ff  G =  248  
ABC: Path 12 --    6062 : 3    3 sky130_fd_sc_hd__nand3_1 A =   5.00  Df =15745.9-8280.0 ps  S = 302.9 ps  Cin =  2.1 ff  Cout =   4.9 ff  Cmax = 256.4 ff  G =  229  
ABC: Path 13 --    6091 : 3    3 sky130_fd_sc_hd__or3_1   A =   6.26  Df =17546.8-9088.1 ps  S = 265.7 ps  Cin =  1.3 ff  Cout =   6.6 ff  Cmax = 329.6 ff  G =  469  
ABC: Path 14 --    6104 : 3    3 sky130_fd_sc_hd__nor3_1  A =   5.00  Df =18569.4-9908.5 ps  S =1040.6 ps  Cin =  2.1 ff  Cout =   6.3 ff  Cmax =  82.4 ff  G =  289  
ABC: Path 15 --    6133 : 2    1 sky130_fd_sc_hd__nand2_1 A =   3.75  Df =19154.4-9617.3 ps  S = 329.8 ps  Cin =  2.0 ff  Cout =   4.1 ff  Cmax = 320.4 ff  G =  195  
ABC: Path 16 --    6134 : 2    1 sky130_fd_sc_hd__xor2_1  A =   8.76  Df =19855.6-8169.0 ps  S = 347.5 ps  Cin =  3.9 ff  Cout =   1.6 ff  Cmax = 135.8 ff  G =   38  
ABC: Path 17 --    6135 : 3    1 sky130_fd_sc_hd__o21ai_0 A =   5.00  Df =20356.6-8386.5 ps  S = 437.4 ps  Cin =  1.5 ff  Cout =   2.1 ff  Cmax =  83.9 ff  G =  137  
ABC: Path 18 --    6136 : 4    1 sky130_fd_sc_hd__a31oi_1 A =   6.26  Df =20591.4-4274.2 ps  S = 333.0 ps  Cin =  2.1 ff  Cout =   1.6 ff  Cmax = 113.7 ff  G =   73  
ABC: Path 19 --    6139 : 3    1 sky130_fd_sc_hd__o21ai_0 A =   5.00  Df =21975.0-5148.9 ps  S =1473.2 ps  Cin =  1.5 ff  Cout =  11.0 ff  Cmax =  83.9 ff  G =  742  
ABC: Start-point = pi147 (\rv32_soc/latched_stalu).  End-point = po458 ($auto$rtlil.cc:3025:MuxGate$34715).
ABC: + write_blif <abc-temp-dir>/output.blif 

22.1.2. Re-integrating ABC results.
ABC RESULTS:          _const0_ cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a2111oi_0 cells:        6
ABC RESULTS:   sky130_fd_sc_hd__a211o_1 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__a211oi_1 cells:       22
ABC RESULTS:   sky130_fd_sc_hd__a21boi_0 cells:       24
ABC RESULTS:   sky130_fd_sc_hd__a21o_1 cells:       80
ABC RESULTS:   sky130_fd_sc_hd__a21oi_1 cells:      418
ABC RESULTS:   sky130_fd_sc_hd__a221o_1 cells:        8
ABC RESULTS:   sky130_fd_sc_hd__a221oi_1 cells:       61
ABC RESULTS:   sky130_fd_sc_hd__a222oi_1 cells:       37
ABC RESULTS:   sky130_fd_sc_hd__a22o_1 cells:       28
ABC RESULTS:   sky130_fd_sc_hd__a22oi_1 cells:       39
ABC RESULTS:   sky130_fd_sc_hd__a311o_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a31o_1 cells:        8
ABC RESULTS:   sky130_fd_sc_hd__a31oi_1 cells:       74
ABC RESULTS:   sky130_fd_sc_hd__a32o_1 cells:        8
ABC RESULTS:   sky130_fd_sc_hd__a32oi_1 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__a41oi_1 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__and2_0 cells:       14
ABC RESULTS:   sky130_fd_sc_hd__and2_1 cells:       36
ABC RESULTS:   sky130_fd_sc_hd__and3_1 cells:       57
ABC RESULTS:   sky130_fd_sc_hd__and3b_1 cells:        8
ABC RESULTS:   sky130_fd_sc_hd__and4_1 cells:       30
ABC RESULTS:   sky130_fd_sc_hd__buf_1 cells:      377
ABC RESULTS:   sky130_fd_sc_hd__buf_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__clkinv_1 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__inv_1 cells:      219
ABC RESULTS:   sky130_fd_sc_hd__inv_2 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__mux2_2 cells:       48
ABC RESULTS:   sky130_fd_sc_hd__mux2i_1 cells:       76
ABC RESULTS:   sky130_fd_sc_hd__mux4_2 cells:      543
ABC RESULTS:   sky130_fd_sc_hd__nand2_1 cells:      499
ABC RESULTS:   sky130_fd_sc_hd__nand2b_1 cells:       18
ABC RESULTS:   sky130_fd_sc_hd__nand3_1 cells:       98
ABC RESULTS:   sky130_fd_sc_hd__nand3b_1 cells:       11
ABC RESULTS:   sky130_fd_sc_hd__nand4_1 cells:       27
ABC RESULTS:   sky130_fd_sc_hd__nand4b_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__nor2_1 cells:      476
ABC RESULTS:   sky130_fd_sc_hd__nor2b_1 cells:       32
ABC RESULTS:   sky130_fd_sc_hd__nor3_1 cells:       89
ABC RESULTS:   sky130_fd_sc_hd__nor3b_1 cells:       34
ABC RESULTS:   sky130_fd_sc_hd__nor4_1 cells:       35
ABC RESULTS:   sky130_fd_sc_hd__nor4b_1 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__o2111a_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o2111ai_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o211a_1 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__o211ai_1 cells:       17
ABC RESULTS:   sky130_fd_sc_hd__o21a_1 cells:       55
ABC RESULTS:   sky130_fd_sc_hd__o21ai_0 cells:      527
ABC RESULTS:   sky130_fd_sc_hd__o21ai_1 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__o21bai_1 cells:       35
ABC RESULTS:   sky130_fd_sc_hd__o221a_2 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o221ai_1 cells:       22
ABC RESULTS:   sky130_fd_sc_hd__o22a_1 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__o22ai_1 cells:       34
ABC RESULTS:   sky130_fd_sc_hd__o2bb2ai_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o311a_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o311ai_0 cells:       14
ABC RESULTS:   sky130_fd_sc_hd__o31a_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o31ai_1 cells:       41
ABC RESULTS:   sky130_fd_sc_hd__o32a_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__o32ai_1 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__or2_1 cells:       16
ABC RESULTS:   sky130_fd_sc_hd__or3_1 cells:       45
ABC RESULTS:   sky130_fd_sc_hd__or3b_2 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__or4_1 cells:       12
ABC RESULTS:   sky130_fd_sc_hd__or4bb_1 cells:        1
ABC RESULTS:   sky130_fd_sc_hd__xnor2_1 cells:       86
ABC RESULTS:   sky130_fd_sc_hd__xor2_1 cells:       18
ABC RESULTS:        internal signals:     7655
ABC RESULTS:           input signals:     1907
ABC RESULTS:          output signals:      720
Removing temp directory.

yosys> clean -purge
Removed 0 unused cells and 10125 unused wires.

yosys> setundef -zero

23. Executing SETUNDEF pass (replace undef values with defined constants).

yosys> splitnets

24. Executing SPLITNETS pass (splitting up multi-bit signals).

yosys> clean -purge
Removed 0 unused cells and 211 unused wires.

yosys> hilomap -singleton -locell sky130_fd_sc_hd__conb_1 LO -hicell sky130_fd_sc_hd__conb_1 HI

25. Executing HILOMAP pass (mapping to constant drivers).

yosys> insbuf -buf sky130_fd_sc_hd__buf_4 A X

26. Executing INSBUF pass (insert buffer cells for connected wires).
Add picorv32_top/$auto$insbuf.cc:97:execute$39672: $auto$hilomap.cc:47:hilomap_worker$39668 -> \eoi [0]
Add picorv32_top/$auto$insbuf.cc:97:execute$39673: $auto$hilomap.cc:47:hilomap_worker$39668 -> \eoi [1]
Add picorv32_top/$auto$insbuf.cc:97:execute$39674: $auto$hilomap.cc:47:hilomap_worker$39668 -> \eoi [2]
Add picorv32_top/$auto$insbuf.cc:97:execute$39675: $auto$hilomap.cc:47:hilomap_worker$39668 -> \eoi [3]
Add picorv32_top/$auto$insbuf.cc:97:execute$39676: $auto$hilomap.cc:47:hilomap_worker$39668 -> \eoi [4]
Add picorv32_top/$auto$insbuf.cc:97:execute$39677: $auto$hilomap.cc:47:hilomap_worker$39668 -> \eoi [5]
Add picorv32_top/$auto$insbuf.cc:97:execute$39678: $auto$hilomap.cc:47:hilomap_worker$39668 -> \eoi [6]
Add picorv32_top/$auto$insbuf.cc:97:execute$39679: $auto$hilomap.cc:47:hilomap_worker$39668 -> \eoi [7]
Add picorv32_top/$auto$insbuf.cc:97:execute$39680: $auto$hilomap.cc:47:hilomap_worker$39668 -> \eoi [8]
Add picorv32_top/$auto$insbuf.cc:97:execute$39681: $auto$hilomap.cc:47:hilomap_worker$39668 -> \eoi [9]
Add picorv32_top/$auto$insbuf.cc:97:execute$39682: $auto$hilomap.cc:47:hilomap_worker$39668 -> \eoi [10]
Add picorv32_top/$auto$insbuf.cc:97:execute$39683: $auto$hilomap.cc:47:hilomap_worker$39668 -> \eoi [11]
Add picorv32_top/$auto$insbuf.cc:97:execute$39684: $auto$hilomap.cc:47:hilomap_worker$39668 -> \eoi [12]
Add picorv32_top/$auto$insbuf.cc:97:execute$39685: $auto$hilomap.cc:47:hilomap_worker$39668 -> \eoi [13]
Add picorv32_top/$auto$insbuf.cc:97:execute$39686: $auto$hilomap.cc:47:hilomap_worker$39668 -> \eoi [14]
Add picorv32_top/$auto$insbuf.cc:97:execute$39687: $auto$hilomap.cc:47:hilomap_worker$39668 -> \eoi [15]
Add picorv32_top/$auto$insbuf.cc:97:execute$39688: $auto$hilomap.cc:47:hilomap_worker$39668 -> \eoi [16]
Add picorv32_top/$auto$insbuf.cc:97:execute$39689: $auto$hilomap.cc:47:hilomap_worker$39668 -> \eoi [17]
Add picorv32_top/$auto$insbuf.cc:97:execute$39690: $auto$hilomap.cc:47:hilomap_worker$39668 -> \eoi [18]
Add picorv32_top/$auto$insbuf.cc:97:execute$39691: $auto$hilomap.cc:47:hilomap_worker$39668 -> \eoi [19]
Add picorv32_top/$auto$insbuf.cc:97:execute$39692: $auto$hilomap.cc:47:hilomap_worker$39668 -> \eoi [20]
Add picorv32_top/$auto$insbuf.cc:97:execute$39693: $auto$hilomap.cc:47:hilomap_worker$39668 -> \eoi [21]
Add picorv32_top/$auto$insbuf.cc:97:execute$39694: $auto$hilomap.cc:47:hilomap_worker$39668 -> \eoi [22]
Add picorv32_top/$auto$insbuf.cc:97:execute$39695: $auto$hilomap.cc:47:hilomap_worker$39668 -> \eoi [23]
Add picorv32_top/$auto$insbuf.cc:97:execute$39696: $auto$hilomap.cc:47:hilomap_worker$39668 -> \eoi [24]
Add picorv32_top/$auto$insbuf.cc:97:execute$39697: $auto$hilomap.cc:47:hilomap_worker$39668 -> \eoi [25]
Add picorv32_top/$auto$insbuf.cc:97:execute$39698: $auto$hilomap.cc:47:hilomap_worker$39668 -> \eoi [26]
Add picorv32_top/$auto$insbuf.cc:97:execute$39699: $auto$hilomap.cc:47:hilomap_worker$39668 -> \eoi [27]
Add picorv32_top/$auto$insbuf.cc:97:execute$39700: $auto$hilomap.cc:47:hilomap_worker$39668 -> \eoi [28]
Add picorv32_top/$auto$insbuf.cc:97:execute$39701: $auto$hilomap.cc:47:hilomap_worker$39668 -> \eoi [29]
Add picorv32_top/$auto$insbuf.cc:97:execute$39702: $auto$hilomap.cc:47:hilomap_worker$39668 -> \eoi [30]
Add picorv32_top/$auto$insbuf.cc:97:execute$39703: $auto$hilomap.cc:47:hilomap_worker$39668 -> \eoi [31]
Add picorv32_top/$auto$insbuf.cc:97:execute$39704: $auto$hilomap.cc:47:hilomap_worker$39668 -> \mem_la_addr [0]
Add picorv32_top/$auto$insbuf.cc:97:execute$39705: $auto$hilomap.cc:47:hilomap_worker$39668 -> \mem_la_addr [1]
Add picorv32_top/$auto$insbuf.cc:97:execute$39706: $auto$hilomap.cc:47:hilomap_worker$39668 -> \pcpi_insn [0]
Add picorv32_top/$auto$insbuf.cc:97:execute$39707: $auto$hilomap.cc:47:hilomap_worker$39668 -> \pcpi_insn [1]
Add picorv32_top/$auto$insbuf.cc:97:execute$39708: $auto$hilomap.cc:47:hilomap_worker$39668 -> \pcpi_insn [2]
Add picorv32_top/$auto$insbuf.cc:97:execute$39709: $auto$hilomap.cc:47:hilomap_worker$39668 -> \pcpi_insn [3]
Add picorv32_top/$auto$insbuf.cc:97:execute$39710: $auto$hilomap.cc:47:hilomap_worker$39668 -> \pcpi_insn [4]
Add picorv32_top/$auto$insbuf.cc:97:execute$39711: $auto$hilomap.cc:47:hilomap_worker$39668 -> \pcpi_insn [5]
Add picorv32_top/$auto$insbuf.cc:97:execute$39712: $auto$hilomap.cc:47:hilomap_worker$39668 -> \pcpi_insn [6]
Add picorv32_top/$auto$insbuf.cc:97:execute$39713: $auto$hilomap.cc:47:hilomap_worker$39668 -> \pcpi_insn [7]
Add picorv32_top/$auto$insbuf.cc:97:execute$39714: $auto$hilomap.cc:47:hilomap_worker$39668 -> \pcpi_insn [8]
Add picorv32_top/$auto$insbuf.cc:97:execute$39715: $auto$hilomap.cc:47:hilomap_worker$39668 -> \pcpi_insn [9]
Add picorv32_top/$auto$insbuf.cc:97:execute$39716: $auto$hilomap.cc:47:hilomap_worker$39668 -> \pcpi_insn [10]
Add picorv32_top/$auto$insbuf.cc:97:execute$39717: $auto$hilomap.cc:47:hilomap_worker$39668 -> \pcpi_insn [11]
Add picorv32_top/$auto$insbuf.cc:97:execute$39718: $auto$hilomap.cc:47:hilomap_worker$39668 -> \pcpi_insn [12]
Add picorv32_top/$auto$insbuf.cc:97:execute$39719: $auto$hilomap.cc:47:hilomap_worker$39668 -> \pcpi_insn [13]
Add picorv32_top/$auto$insbuf.cc:97:execute$39720: $auto$hilomap.cc:47:hilomap_worker$39668 -> \pcpi_insn [14]
Add picorv32_top/$auto$insbuf.cc:97:execute$39721: $auto$hilomap.cc:47:hilomap_worker$39668 -> \pcpi_insn [15]
Add picorv32_top/$auto$insbuf.cc:97:execute$39722: $auto$hilomap.cc:47:hilomap_worker$39668 -> \pcpi_insn [16]
Add picorv32_top/$auto$insbuf.cc:97:execute$39723: $auto$hilomap.cc:47:hilomap_worker$39668 -> \pcpi_insn [17]
Add picorv32_top/$auto$insbuf.cc:97:execute$39724: $auto$hilomap.cc:47:hilomap_worker$39668 -> \pcpi_insn [18]
Add picorv32_top/$auto$insbuf.cc:97:execute$39725: $auto$hilomap.cc:47:hilomap_worker$39668 -> \pcpi_insn [19]
Add picorv32_top/$auto$insbuf.cc:97:execute$39726: $auto$hilomap.cc:47:hilomap_worker$39668 -> \pcpi_insn [20]
Add picorv32_top/$auto$insbuf.cc:97:execute$39727: $auto$hilomap.cc:47:hilomap_worker$39668 -> \pcpi_insn [21]
Add picorv32_top/$auto$insbuf.cc:97:execute$39728: $auto$hilomap.cc:47:hilomap_worker$39668 -> \pcpi_insn [22]
Add picorv32_top/$auto$insbuf.cc:97:execute$39729: $auto$hilomap.cc:47:hilomap_worker$39668 -> \pcpi_insn [23]
Add picorv32_top/$auto$insbuf.cc:97:execute$39730: $auto$hilomap.cc:47:hilomap_worker$39668 -> \pcpi_insn [24]
Add picorv32_top/$auto$insbuf.cc:97:execute$39731: $auto$hilomap.cc:47:hilomap_worker$39668 -> \pcpi_insn [25]
Add picorv32_top/$auto$insbuf.cc:97:execute$39732: $auto$hilomap.cc:47:hilomap_worker$39668 -> \pcpi_insn [26]
Add picorv32_top/$auto$insbuf.cc:97:execute$39733: $auto$hilomap.cc:47:hilomap_worker$39668 -> \pcpi_insn [27]
Add picorv32_top/$auto$insbuf.cc:97:execute$39734: $auto$hilomap.cc:47:hilomap_worker$39668 -> \pcpi_insn [28]
Add picorv32_top/$auto$insbuf.cc:97:execute$39735: $auto$hilomap.cc:47:hilomap_worker$39668 -> \pcpi_insn [29]
Add picorv32_top/$auto$insbuf.cc:97:execute$39736: $auto$hilomap.cc:47:hilomap_worker$39668 -> \pcpi_insn [30]
Add picorv32_top/$auto$insbuf.cc:97:execute$39737: $auto$hilomap.cc:47:hilomap_worker$39668 -> \pcpi_insn [31]
Add picorv32_top/$auto$insbuf.cc:97:execute$39738: \mem_la_wdata [0] -> \pcpi_rs2 [0]
Add picorv32_top/$auto$insbuf.cc:97:execute$39739: \mem_la_wdata [1] -> \pcpi_rs2 [1]
Add picorv32_top/$auto$insbuf.cc:97:execute$39740: \mem_la_wdata [2] -> \pcpi_rs2 [2]
Add picorv32_top/$auto$insbuf.cc:97:execute$39741: \mem_la_wdata [3] -> \pcpi_rs2 [3]
Add picorv32_top/$auto$insbuf.cc:97:execute$39742: \mem_la_wdata [4] -> \pcpi_rs2 [4]
Add picorv32_top/$auto$insbuf.cc:97:execute$39743: \mem_la_wdata [5] -> \pcpi_rs2 [5]
Add picorv32_top/$auto$insbuf.cc:97:execute$39744: \mem_la_wdata [6] -> \pcpi_rs2 [6]
Add picorv32_top/$auto$insbuf.cc:97:execute$39745: \mem_la_wdata [7] -> \pcpi_rs2 [7]
Add picorv32_top/$auto$insbuf.cc:97:execute$39746: $auto$hilomap.cc:47:hilomap_worker$39668 -> \pcpi_valid
Add picorv32_top/$auto$insbuf.cc:97:execute$39747: $auto$hilomap.cc:47:hilomap_worker$39668 -> \trace_data [0]
Add picorv32_top/$auto$insbuf.cc:97:execute$39748: $auto$hilomap.cc:47:hilomap_worker$39668 -> \trace_data [1]
Add picorv32_top/$auto$insbuf.cc:97:execute$39749: $auto$hilomap.cc:47:hilomap_worker$39668 -> \trace_data [2]
Add picorv32_top/$auto$insbuf.cc:97:execute$39750: $auto$hilomap.cc:47:hilomap_worker$39668 -> \trace_data [3]
Add picorv32_top/$auto$insbuf.cc:97:execute$39751: $auto$hilomap.cc:47:hilomap_worker$39668 -> \trace_data [4]
Add picorv32_top/$auto$insbuf.cc:97:execute$39752: $auto$hilomap.cc:47:hilomap_worker$39668 -> \trace_data [5]
Add picorv32_top/$auto$insbuf.cc:97:execute$39753: $auto$hilomap.cc:47:hilomap_worker$39668 -> \trace_data [6]
Add picorv32_top/$auto$insbuf.cc:97:execute$39754: $auto$hilomap.cc:47:hilomap_worker$39668 -> \trace_data [7]
Add picorv32_top/$auto$insbuf.cc:97:execute$39755: $auto$hilomap.cc:47:hilomap_worker$39668 -> \trace_data [8]
Add picorv32_top/$auto$insbuf.cc:97:execute$39756: $auto$hilomap.cc:47:hilomap_worker$39668 -> \trace_data [9]
Add picorv32_top/$auto$insbuf.cc:97:execute$39757: $auto$hilomap.cc:47:hilomap_worker$39668 -> \trace_data [10]
Add picorv32_top/$auto$insbuf.cc:97:execute$39758: $auto$hilomap.cc:47:hilomap_worker$39668 -> \trace_data [11]
Add picorv32_top/$auto$insbuf.cc:97:execute$39759: $auto$hilomap.cc:47:hilomap_worker$39668 -> \trace_data [12]
Add picorv32_top/$auto$insbuf.cc:97:execute$39760: $auto$hilomap.cc:47:hilomap_worker$39668 -> \trace_data [13]
Add picorv32_top/$auto$insbuf.cc:97:execute$39761: $auto$hilomap.cc:47:hilomap_worker$39668 -> \trace_data [14]
Add picorv32_top/$auto$insbuf.cc:97:execute$39762: $auto$hilomap.cc:47:hilomap_worker$39668 -> \trace_data [15]
Add picorv32_top/$auto$insbuf.cc:97:execute$39763: $auto$hilomap.cc:47:hilomap_worker$39668 -> \trace_data [16]
Add picorv32_top/$auto$insbuf.cc:97:execute$39764: $auto$hilomap.cc:47:hilomap_worker$39668 -> \trace_data [17]
Add picorv32_top/$auto$insbuf.cc:97:execute$39765: $auto$hilomap.cc:47:hilomap_worker$39668 -> \trace_data [18]
Add picorv32_top/$auto$insbuf.cc:97:execute$39766: $auto$hilomap.cc:47:hilomap_worker$39668 -> \trace_data [19]
Add picorv32_top/$auto$insbuf.cc:97:execute$39767: $auto$hilomap.cc:47:hilomap_worker$39668 -> \trace_data [20]
Add picorv32_top/$auto$insbuf.cc:97:execute$39768: $auto$hilomap.cc:47:hilomap_worker$39668 -> \trace_data [21]
Add picorv32_top/$auto$insbuf.cc:97:execute$39769: $auto$hilomap.cc:47:hilomap_worker$39668 -> \trace_data [22]
Add picorv32_top/$auto$insbuf.cc:97:execute$39770: $auto$hilomap.cc:47:hilomap_worker$39668 -> \trace_data [23]
Add picorv32_top/$auto$insbuf.cc:97:execute$39771: $auto$hilomap.cc:47:hilomap_worker$39668 -> \trace_data [24]
Add picorv32_top/$auto$insbuf.cc:97:execute$39772: $auto$hilomap.cc:47:hilomap_worker$39668 -> \trace_data [25]
Add picorv32_top/$auto$insbuf.cc:97:execute$39773: $auto$hilomap.cc:47:hilomap_worker$39668 -> \trace_data [26]
Add picorv32_top/$auto$insbuf.cc:97:execute$39774: $auto$hilomap.cc:47:hilomap_worker$39668 -> \trace_data [27]
Add picorv32_top/$auto$insbuf.cc:97:execute$39775: $auto$hilomap.cc:47:hilomap_worker$39668 -> \trace_data [28]
Add picorv32_top/$auto$insbuf.cc:97:execute$39776: $auto$hilomap.cc:47:hilomap_worker$39668 -> \trace_data [29]
Add picorv32_top/$auto$insbuf.cc:97:execute$39777: $auto$hilomap.cc:47:hilomap_worker$39668 -> \trace_data [30]
Add picorv32_top/$auto$insbuf.cc:97:execute$39778: $auto$hilomap.cc:47:hilomap_worker$39668 -> \trace_data [31]
Add picorv32_top/$auto$insbuf.cc:97:execute$39779: $auto$hilomap.cc:47:hilomap_worker$39668 -> \trace_data [32]
Add picorv32_top/$auto$insbuf.cc:97:execute$39780: $auto$hilomap.cc:47:hilomap_worker$39668 -> \trace_data [33]
Add picorv32_top/$auto$insbuf.cc:97:execute$39781: $auto$hilomap.cc:47:hilomap_worker$39668 -> \trace_data [34]
Add picorv32_top/$auto$insbuf.cc:97:execute$39782: $auto$hilomap.cc:47:hilomap_worker$39668 -> \trace_data [35]
Add picorv32_top/$auto$insbuf.cc:97:execute$39783: $auto$hilomap.cc:47:hilomap_worker$39668 -> \trace_valid

yosys> clean -purge

yosys> echo off
echo off
{
   "creator": "Yosys 0.52 (git sha1 fee39a328, g++ 11.4.0-1ubuntu1~22.04 -fPIC -O3)",
   "invocation": "stat -json -top picorv32_top -liberty /nfs/sc_compute/builds/0dc368a6940a4df4bc65e8967a8d3eeb/picorv32_top/job0/syn/0/inputs/sc_logic_sky130hd_sky130_fd_sc_hd__ss_n40C_1v40.lib ",
   "modules": {
      "\\picorv32_top": {
         "num_wires":         6426,
         "num_wire_bits":     6712,
         "num_pub_wires":     1641,
         "num_pub_wire_bits": 1927,
         "num_ports":         20,
         "num_port_bits":     306,
         "num_memories":      0,
         "num_memory_bits":   0,
         "num_processes":     0,
         "num_cells":         6408,
         "area":              81227.904000,
         "num_cells_by_type": {
            "sky130_fd_sc_hd__a2111oi_0": 6,
            "sky130_fd_sc_hd__a211o_1": 5,
            "sky130_fd_sc_hd__a211oi_1": 22,
            "sky130_fd_sc_hd__a21boi_0": 24,
            "sky130_fd_sc_hd__a21o_1": 80,
            "sky130_fd_sc_hd__a21oi_1": 418,
            "sky130_fd_sc_hd__a221o_1": 8,
            "sky130_fd_sc_hd__a221oi_1": 61,
            "sky130_fd_sc_hd__a222oi_1": 37,
            "sky130_fd_sc_hd__a22o_1": 28,
            "sky130_fd_sc_hd__a22oi_1": 39,
            "sky130_fd_sc_hd__a311o_1": 1,
            "sky130_fd_sc_hd__a31o_1": 8,
            "sky130_fd_sc_hd__a31oi_1": 74,
            "sky130_fd_sc_hd__a32o_1": 8,
            "sky130_fd_sc_hd__a32oi_1": 5,
            "sky130_fd_sc_hd__a41oi_1": 3,
            "sky130_fd_sc_hd__and2_0": 14,
            "sky130_fd_sc_hd__and2_1": 36,
            "sky130_fd_sc_hd__and3_1": 57,
            "sky130_fd_sc_hd__and3b_1": 8,
            "sky130_fd_sc_hd__and4_1": 30,
            "sky130_fd_sc_hd__buf_1": 377,
            "sky130_fd_sc_hd__buf_2": 1,
            "sky130_fd_sc_hd__buf_4": 112,
            "sky130_fd_sc_hd__clkinv_1": 5,
            "sky130_fd_sc_hd__conb_1": 2,
            "sky130_fd_sc_hd__dfxtp_1": 318,
            "sky130_fd_sc_hd__edfxtp_1": 1256,
            "sky130_fd_sc_hd__fa_1": 5,
            "sky130_fd_sc_hd__ha_1": 199,
            "sky130_fd_sc_hd__inv_1": 219,
            "sky130_fd_sc_hd__inv_2": 4,
            "sky130_fd_sc_hd__mux2_2": 48,
            "sky130_fd_sc_hd__mux2i_1": 76,
            "sky130_fd_sc_hd__mux4_2": 543,
            "sky130_fd_sc_hd__nand2_1": 499,
            "sky130_fd_sc_hd__nand2b_1": 18,
            "sky130_fd_sc_hd__nand3_1": 98,
            "sky130_fd_sc_hd__nand3b_1": 11,
            "sky130_fd_sc_hd__nand4_1": 27,
            "sky130_fd_sc_hd__nand4b_1": 1,
            "sky130_fd_sc_hd__nor2_1": 476,
            "sky130_fd_sc_hd__nor2b_1": 32,
            "sky130_fd_sc_hd__nor3_1": 89,
            "sky130_fd_sc_hd__nor3b_1": 34,
            "sky130_fd_sc_hd__nor4_1": 35,
            "sky130_fd_sc_hd__nor4b_1": 3,
            "sky130_fd_sc_hd__o2111a_1": 1,
            "sky130_fd_sc_hd__o2111ai_1": 1,
            "sky130_fd_sc_hd__o211a_1": 2,
            "sky130_fd_sc_hd__o211ai_1": 17,
            "sky130_fd_sc_hd__o21a_1": 55,
            "sky130_fd_sc_hd__o21ai_0": 527,
            "sky130_fd_sc_hd__o21ai_1": 3,
            "sky130_fd_sc_hd__o21bai_1": 35,
            "sky130_fd_sc_hd__o221a_2": 1,
            "sky130_fd_sc_hd__o221ai_1": 22,
            "sky130_fd_sc_hd__o22a_1": 2,
            "sky130_fd_sc_hd__o22ai_1": 34,
            "sky130_fd_sc_hd__o2bb2ai_1": 1,
            "sky130_fd_sc_hd__o311a_1": 1,
            "sky130_fd_sc_hd__o311ai_0": 14,
            "sky130_fd_sc_hd__o31a_1": 1,
            "sky130_fd_sc_hd__o31ai_1": 41,
            "sky130_fd_sc_hd__o32a_1": 1,
            "sky130_fd_sc_hd__o32ai_1": 5,
            "sky130_fd_sc_hd__or2_1": 16,
            "sky130_fd_sc_hd__or3_1": 45,
            "sky130_fd_sc_hd__or3b_2": 5,
            "sky130_fd_sc_hd__or4_1": 12,
            "sky130_fd_sc_hd__or4bb_1": 1,
            "sky130_fd_sc_hd__xnor2_1": 86,
            "sky130_fd_sc_hd__xor2_1": 18,
            "sky130_sram_2kbyte_1rw1r_32x512_8": 1
         }
      }
   },
      "design": {
         "num_wires":         6426,
         "num_wire_bits":     6712,
         "num_pub_wires":     1641,
         "num_pub_wire_bits": 1927,
         "num_ports":         20,
         "num_port_bits":     306,
         "num_memories":      0,
         "num_memory_bits":   0,
         "num_processes":     0,
         "num_cells":         6408,
         "area":              81227.904000,
         "num_cells_by_type": {
            "sky130_fd_sc_hd__a2111oi_0": 6,
            "sky130_fd_sc_hd__a211o_1": 5,
            "sky130_fd_sc_hd__a211oi_1": 22,
            "sky130_fd_sc_hd__a21boi_0": 24,
            "sky130_fd_sc_hd__a21o_1": 80,
            "sky130_fd_sc_hd__a21oi_1": 418,
            "sky130_fd_sc_hd__a221o_1": 8,
            "sky130_fd_sc_hd__a221oi_1": 61,
            "sky130_fd_sc_hd__a222oi_1": 37,
            "sky130_fd_sc_hd__a22o_1": 28,
            "sky130_fd_sc_hd__a22oi_1": 39,
            "sky130_fd_sc_hd__a311o_1": 1,
            "sky130_fd_sc_hd__a31o_1": 8,
            "sky130_fd_sc_hd__a31oi_1": 74,
            "sky130_fd_sc_hd__a32o_1": 8,
            "sky130_fd_sc_hd__a32oi_1": 5,
            "sky130_fd_sc_hd__a41oi_1": 3,
            "sky130_fd_sc_hd__and2_0": 14,
            "sky130_fd_sc_hd__and2_1": 36,
            "sky130_fd_sc_hd__and3_1": 57,
            "sky130_fd_sc_hd__and3b_1": 8,
            "sky130_fd_sc_hd__and4_1": 30,
            "sky130_fd_sc_hd__buf_1": 377,
            "sky130_fd_sc_hd__buf_2": 1,
            "sky130_fd_sc_hd__buf_4": 112,
            "sky130_fd_sc_hd__clkinv_1": 5,
            "sky130_fd_sc_hd__conb_1": 2,
            "sky130_fd_sc_hd__dfxtp_1": 318,
            "sky130_fd_sc_hd__edfxtp_1": 1256,
            "sky130_fd_sc_hd__fa_1": 5,
            "sky130_fd_sc_hd__ha_1": 199,
            "sky130_fd_sc_hd__inv_1": 219,
            "sky130_fd_sc_hd__inv_2": 4,
            "sky130_fd_sc_hd__mux2_2": 48,
            "sky130_fd_sc_hd__mux2i_1": 76,
            "sky130_fd_sc_hd__mux4_2": 543,
            "sky130_fd_sc_hd__nand2_1": 499,
            "sky130_fd_sc_hd__nand2b_1": 18,
            "sky130_fd_sc_hd__nand3_1": 98,
            "sky130_fd_sc_hd__nand3b_1": 11,
            "sky130_fd_sc_hd__nand4_1": 27,
            "sky130_fd_sc_hd__nand4b_1": 1,
            "sky130_fd_sc_hd__nor2_1": 476,
            "sky130_fd_sc_hd__nor2b_1": 32,
            "sky130_fd_sc_hd__nor3_1": 89,
            "sky130_fd_sc_hd__nor3b_1": 34,
            "sky130_fd_sc_hd__nor4_1": 35,
            "sky130_fd_sc_hd__nor4b_1": 3,
            "sky130_fd_sc_hd__o2111a_1": 1,
            "sky130_fd_sc_hd__o2111ai_1": 1,
            "sky130_fd_sc_hd__o211a_1": 2,
            "sky130_fd_sc_hd__o211ai_1": 17,
            "sky130_fd_sc_hd__o21a_1": 55,
            "sky130_fd_sc_hd__o21ai_0": 527,
            "sky130_fd_sc_hd__o21ai_1": 3,
            "sky130_fd_sc_hd__o21bai_1": 35,
            "sky130_fd_sc_hd__o221a_2": 1,
            "sky130_fd_sc_hd__o221ai_1": 22,
            "sky130_fd_sc_hd__o22a_1": 2,
            "sky130_fd_sc_hd__o22ai_1": 34,
            "sky130_fd_sc_hd__o2bb2ai_1": 1,
            "sky130_fd_sc_hd__o311a_1": 1,
            "sky130_fd_sc_hd__o311ai_0": 14,
            "sky130_fd_sc_hd__o31a_1": 1,
            "sky130_fd_sc_hd__o31ai_1": 41,
            "sky130_fd_sc_hd__o32a_1": 1,
            "sky130_fd_sc_hd__o32ai_1": 5,
            "sky130_fd_sc_hd__or2_1": 16,
            "sky130_fd_sc_hd__or3_1": 45,
            "sky130_fd_sc_hd__or3b_2": 5,
            "sky130_fd_sc_hd__or4_1": 12,
            "sky130_fd_sc_hd__or4bb_1": 1,
            "sky130_fd_sc_hd__xnor2_1": 86,
            "sky130_fd_sc_hd__xor2_1": 18,
            "sky130_sram_2kbyte_1rw1r_32x512_8": 1
         }
      }
}

echo on

yosys> write_verilog -noexpr -nohex -nodec outputs/picorv32_top.vg

27. Executing Verilog backend.

yosys> clean_zerowidth
Dumping module `\picorv32_top'.

yosys> write_json outputs/picorv32_top.netlist.json

28. Executing JSON backend.

Warnings: 1 unique messages, 1 total
End of script. Logfile hash: 96b9ee3d5d, CPU: user 8.48s system 0.11s, MEM: 212.23 MB peak
Yosys 0.52 (git sha1 fee39a328, g++ 11.4.0-1ubuntu1~22.04 -fPIC -O3)
Time spent: 23% 2x abc (2 sec), 18% 48x opt_expr (2 sec), ...
